var tg=Object.defineProperty;var rg=(Cn,pn,Oi)=>pn in Cn?tg(Cn,pn,{enumerable:!0,configurable:!0,writable:!0,value:Oi}):Cn[pn]=Oi;var ve=(Cn,pn,Oi)=>rg(Cn,typeof pn!="symbol"?pn+"":pn,Oi);(function(){"use strict";/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const Cn=Symbol("Comlink.proxy"),pn=Symbol("Comlink.endpoint"),Oi=Symbol("Comlink.releaseProxy"),$p=Symbol("Comlink.finalizer"),Tc=Symbol("Comlink.thrown"),wh=ae=>typeof ae=="object"&&ae!==null||typeof ae=="function",gf={canHandle:ae=>wh(ae)&&ae[Cn],serialize(ae){const{port1:$,port2:s}=new MessageChannel;return Ap(ae,$),[s,[s]]},deserialize(ae){return ae.start(),Mf(ae)}},wf={canHandle:ae=>wh(ae)&&Tc in ae,serialize({value:ae}){let $;return ae instanceof Error?$={isError:!0,value:{message:ae.message,name:ae.name,stack:ae.stack}}:$={isError:!1,value:ae},[$,[]]},deserialize(ae){throw ae.isError?Object.assign(new Error(ae.value.message),ae.value):ae.value}},yh=new Map([["proxy",gf],["throw",wf]]);function yf(ae,$){for(const s of ae)if($===s||s==="*"||s instanceof RegExp&&s.test($))return!0;return!1}function Ap(ae,$=globalThis,s=["*"]){$.addEventListener("message",function _(F){if(!F||!F.data)return;if(!yf(s,F.origin)){console.warn(`Invalid origin '${F.origin}' for comlink proxy`);return}const{id:U,type:J,path:W}=Object.assign({path:[]},F.data),w=(F.data.argumentList||[]).map(ti);let M;try{const y=W.slice(0,-1).reduce((v,D)=>v[D],ae),b=W.reduce((v,D)=>v[D],ae);switch(J){case"GET":M=b;break;case"SET":y[W.slice(-1)[0]]=ti(F.data.value),M=!0;break;case"APPLY":M=b.apply(y,w);break;case"CONSTRUCT":{const v=new b(...w);M=Pf(v)}break;case"ENDPOINT":{const{port1:v,port2:D}=new MessageChannel;Ap(ae,D),M=Ef(v,[v])}break;case"RELEASE":M=void 0;break;default:return}}catch(y){M={value:y,[Tc]:0}}Promise.resolve(M).catch(y=>({value:y,[Tc]:0})).then(y=>{const[b,v]=Cc(y);$.postMessage(Object.assign(Object.assign({},b),{id:U}),v),J==="RELEASE"&&($.removeEventListener("message",_),bh($),$p in ae&&typeof ae[$p]=="function"&&ae[$p]())}).catch(y=>{const[b,v]=Cc({value:new TypeError("Unserializable return value"),[Tc]:0});$.postMessage(Object.assign(Object.assign({},b),{id:U}),v)})}),$.start&&$.start()}function bf(ae){return ae.constructor.name==="MessagePort"}function bh(ae){bf(ae)&&ae.close()}function Mf(ae,$){const s=new Map;return ae.addEventListener("message",function(F){const{data:U}=F;if(!U||!U.id)return;const J=s.get(U.id);if(J)try{J(U)}finally{s.delete(U.id)}}),Ip(ae,s,[],$)}function xc(ae){if(ae)throw new Error("Proxy has been released and is not useable")}function Mh(ae){return Fi(ae,new Map,{type:"RELEASE"}).then(()=>{bh(ae)})}const Ec=new WeakMap,Pc="FinalizationRegistry"in globalThis&&new FinalizationRegistry(ae=>{const $=(Ec.get(ae)||0)-1;Ec.set(ae,$),$===0&&Mh(ae)});function vf(ae,$){const s=(Ec.get($)||0)+1;Ec.set($,s),Pc&&Pc.register(ae,$,ae)}function Tf(ae){Pc&&Pc.unregister(ae)}function Ip(ae,$,s=[],_=function(){}){let F=!1;const U=new Proxy(_,{get(J,W){if(xc(F),W===Oi)return()=>{Tf(U),Mh(ae),$.clear(),F=!0};if(W==="then"){if(s.length===0)return{then:()=>U};const w=Fi(ae,$,{type:"GET",path:s.map(M=>M.toString())}).then(ti);return w.then.bind(w)}return Ip(ae,$,[...s,W])},set(J,W,w){xc(F);const[M,y]=Cc(w);return Fi(ae,$,{type:"SET",path:[...s,W].map(b=>b.toString()),value:M},y).then(ti)},apply(J,W,w){xc(F);const M=s[s.length-1];if(M===pn)return Fi(ae,$,{type:"ENDPOINT"}).then(ti);if(M==="bind")return Ip(ae,$,s.slice(0,-1));const[y,b]=vh(w);return Fi(ae,$,{type:"APPLY",path:s.map(v=>v.toString()),argumentList:y},b).then(ti)},construct(J,W){xc(F);const[w,M]=vh(W);return Fi(ae,$,{type:"CONSTRUCT",path:s.map(y=>y.toString()),argumentList:w},M).then(ti)}});return vf(U,ae),U}function xf(ae){return Array.prototype.concat.apply([],ae)}function vh(ae){const $=ae.map(Cc);return[$.map(s=>s[0]),xf($.map(s=>s[1]))]}const Th=new WeakMap;function Ef(ae,$){return Th.set(ae,$),ae}function Pf(ae){return Object.assign(ae,{[Cn]:!0})}function Cc(ae){for(const[$,s]of yh)if(s.canHandle(ae)){const[_,F]=s.serialize(ae);return[{type:"HANDLER",name:$,value:_},F]}return[{type:"RAW",value:ae},Th.get(ae)||[]]}function ti(ae){switch(ae.type){case"HANDLER":return yh.get(ae.name).deserialize(ae.value);case"RAW":return ae.value}}function Fi(ae,$,s,_){return new Promise(F=>{const U=Cf();$.set(U,F),ae.start&&ae.start(),ae.postMessage(Object.assign({id:U},s),_)})}function Cf(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}var hn={},xh={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(ae,$,s)=>{ae.exports=s.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(ae,$,s)=>{s.r($),s.d($,{Environment:()=>st,Interpreter:()=>pt,Template:()=>wt,parse:()=>De,tokenize:()=>b});var _=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),F=Object.freeze({set:_.Set,for:_.For,in:_.In,is:_.Is,if:_.If,else:_.Else,endif:_.EndIf,elif:_.ElseIf,endfor:_.EndFor,and:_.And,or:_.Or,not:_.Not,"not in":_.NotIn,macro:_.Macro,endmacro:_.EndMacro,true:_.BooleanLiteral,false:_.BooleanLiteral,none:_.NullLiteral,True:_.BooleanLiteral,False:_.BooleanLiteral,None:_.NullLiteral}),U=class{constructor(O,se){this.value=O,this.type=se}};function J(O){return/\w/.test(O)}function W(O){return/[0-9]/.test(O)}var w=[["{%",_.OpenStatement],["%}",_.CloseStatement],["{{",_.OpenExpression],["}}",_.CloseExpression],["(",_.OpenParen],[")",_.CloseParen],["{",_.OpenCurlyBracket],["}",_.CloseCurlyBracket],["[",_.OpenSquareBracket],["]",_.CloseSquareBracket],[",",_.Comma],[".",_.Dot],[":",_.Colon],["|",_.Pipe],["<=",_.ComparisonBinaryOperator],[">=",_.ComparisonBinaryOperator],["==",_.ComparisonBinaryOperator],["!=",_.ComparisonBinaryOperator],["<",_.ComparisonBinaryOperator],[">",_.ComparisonBinaryOperator],["+",_.AdditiveBinaryOperator],["-",_.AdditiveBinaryOperator],["*",_.MultiplicativeBinaryOperator],["/",_.MultiplicativeBinaryOperator],["%",_.MultiplicativeBinaryOperator],["=",_.Equals]],M=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function y(O,se={}){return O.endsWith(`
`)&&(O=O.slice(0,-1)),O=O.replace(/{#.*?#}/gs,"{##}"),se.lstrip_blocks&&(O=O.replace(/^[ \t]*({[#%])/gm,"$1")),se.trim_blocks&&(O=O.replace(/([#%]})\n/g,"$1")),O.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function b(O,se={}){var rt,ct,Ot;const K=[],ue=y(O,se);let Oe=0;const He=xt=>{let Ft="";for(;xt(ue[Oe]);){if(ue[Oe]==="\\"){if(++Oe,Oe>=ue.length)throw new SyntaxError("Unexpected end of input");const At=ue[Oe++],sr=M.get(At);if(sr===void 0)throw new SyntaxError(`Unexpected escaped character: ${At}`);Ft+=sr;continue}if(Ft+=ue[Oe++],Oe>=ue.length)throw new SyntaxError("Unexpected end of input")}return Ft};e:for(;Oe<ue.length;){const xt=(rt=K.at(-1))==null?void 0:rt.type;if(xt===void 0||xt===_.CloseStatement||xt===_.CloseExpression){let At="";for(;Oe<ue.length&&!(ue[Oe]==="{"&&(ue[Oe+1]==="%"||ue[Oe+1]==="{"));)At+=ue[Oe++];if(At.length>0){K.push(new U(At,_.Text));continue}}He(At=>/\s/.test(At));const Ft=ue[Oe];if(Ft==="-"||Ft==="+"){const At=(ct=K.at(-1))==null?void 0:ct.type;if(At===_.Text||At===void 0)throw new SyntaxError(`Unexpected character: ${Ft}`);switch(At){case _.Identifier:case _.NumericLiteral:case _.BooleanLiteral:case _.NullLiteral:case _.StringLiteral:case _.CloseParen:case _.CloseSquareBracket:break;default:{++Oe;const sr=He(W);K.push(new U(`${Ft}${sr}`,sr.length>0?_.NumericLiteral:_.UnaryOperator));continue}}}for(const[At,sr]of w)if(ue.slice(Oe,Oe+At.length)===At){K.push(new U(At,sr)),Oe+=At.length;continue e}if(Ft==="'"||Ft==='"'){++Oe;const At=He(sr=>sr!==Ft);K.push(new U(At,_.StringLiteral)),++Oe;continue}if(W(Ft)){const At=He(W);K.push(new U(At,_.NumericLiteral));continue}if(J(Ft)){const At=He(J),sr=Object.hasOwn(F,At)?F[At]:_.Identifier;sr===_.In&&((Ot=K.at(-1))==null?void 0:Ot.type)===_.Not?(K.pop(),K.push(new U("not in",_.NotIn))):K.push(new U(At,sr));continue}throw new SyntaxError(`Unexpected character: ${Ft}`)}return K}var v=class{constructor(){ve(this,"type","Statement")}},D=class extends v{constructor(se){super();ve(this,"type","Program");this.body=se}},Q=class extends v{constructor(se,K,ue){super();ve(this,"type","If");this.test=se,this.body=K,this.alternate=ue}},ne=class extends v{constructor(se,K,ue,Oe){super();ve(this,"type","For");this.loopvar=se,this.iterable=K,this.body=ue,this.defaultBlock=Oe}},le=class extends v{constructor(se,K){super();ve(this,"type","Set");this.assignee=se,this.value=K}},N=class extends v{constructor(se,K,ue){super();ve(this,"type","Macro");this.name=se,this.args=K,this.body=ue}},H=class extends v{constructor(){super(...arguments);ve(this,"type","Expression")}},Y=class extends H{constructor(se,K,ue){super();ve(this,"type","MemberExpression");this.object=se,this.property=K,this.computed=ue}},L=class extends H{constructor(se,K){super();ve(this,"type","CallExpression");this.callee=se,this.args=K}},A=class extends H{constructor(se){super();ve(this,"type","Identifier");this.value=se}},g=class extends H{constructor(se){super();ve(this,"type","Literal");this.value=se}},S=class extends g{constructor(){super(...arguments);ve(this,"type","NumericLiteral")}},T=class extends g{constructor(){super(...arguments);ve(this,"type","StringLiteral")}},te=class extends g{constructor(){super(...arguments);ve(this,"type","BooleanLiteral")}},Z=class extends g{constructor(){super(...arguments);ve(this,"type","NullLiteral")}},de=class extends g{constructor(){super(...arguments);ve(this,"type","ArrayLiteral")}},he=class extends g{constructor(){super(...arguments);ve(this,"type","TupleLiteral")}},we=class extends g{constructor(){super(...arguments);ve(this,"type","ObjectLiteral")}},Ce=class extends H{constructor(se,K,ue){super();ve(this,"type","BinaryExpression");this.operator=se,this.left=K,this.right=ue}},xe=class extends H{constructor(se,K){super();ve(this,"type","FilterExpression");this.operand=se,this.filter=K}},ze=class extends H{constructor(se,K){super();ve(this,"type","SelectExpression");this.iterable=se,this.test=K}},fe=class extends H{constructor(se,K,ue){super();ve(this,"type","TestExpression");this.operand=se,this.negate=K,this.test=ue}},V=class extends H{constructor(se,K){super();ve(this,"type","UnaryExpression");this.operator=se,this.argument=K}},ce=class extends H{constructor(se=void 0,K=void 0,ue=void 0){super();ve(this,"type","SliceExpression");this.start=se,this.stop=K,this.step=ue}},_e=class extends H{constructor(se,K){super();ve(this,"type","KeywordArgumentExpression");this.key=se,this.value=K}};function De(O){const se=new D([]);let K=0;function ue(ot,dt){const It=O[K++];if(!It||It.type!==ot)throw new Error(`Parser Error: ${dt}. ${It.type} !== ${ot}.`);return It}function Oe(){switch(O[K].type){case _.Text:return ct();case _.OpenStatement:return Ot();case _.OpenExpression:return xt();default:throw new SyntaxError(`Unexpected token type: ${O[K].type}`)}}function He(...ot){return K+ot.length<=O.length&&ot.some((dt,It)=>dt!==O[K+It].type)}function rt(...ot){return K+ot.length<=O.length&&ot.every((dt,It)=>dt===O[K+It].type)}function ct(){return new T(ue(_.Text,"Expected text token").value)}function Ot(){ue(_.OpenStatement,"Expected opening statement token");let ot;switch(O[K].type){case _.Set:++K,ot=Ft(),ue(_.CloseStatement,"Expected closing statement token");break;case _.If:++K,ot=At(),ue(_.OpenStatement,"Expected {% token"),ue(_.EndIf,"Expected endif token"),ue(_.CloseStatement,"Expected %} token");break;case _.Macro:++K,ot=sr(),ue(_.OpenStatement,"Expected {% token"),ue(_.EndMacro,"Expected endmacro token"),ue(_.CloseStatement,"Expected %} token");break;case _.For:++K,ot=Or(),ue(_.OpenStatement,"Expected {% token"),ue(_.EndFor,"Expected endfor token"),ue(_.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${O[K].type}`)}return ot}function xt(){ue(_.OpenExpression,"Expected opening expression token");const ot=Cr();return ue(_.CloseExpression,"Expected closing expression token"),ot}function Ft(){const ot=Cr();if(rt(_.Equals)){++K;const dt=Ft();return new le(ot,dt)}return ot}function At(){var dr,fs,rr,_s,ds,Ks,Ds,gs;const ot=Cr();ue(_.CloseStatement,"Expected closing statement token");const dt=[],It=[];for(;!(((dr=O[K])==null?void 0:dr.type)===_.OpenStatement&&(((fs=O[K+1])==null?void 0:fs.type)===_.ElseIf||((rr=O[K+1])==null?void 0:rr.type)===_.Else||((_s=O[K+1])==null?void 0:_s.type)===_.EndIf));)dt.push(Oe());if(((ds=O[K])==null?void 0:ds.type)===_.OpenStatement&&((Ks=O[K+1])==null?void 0:Ks.type)!==_.EndIf)if(++K,rt(_.ElseIf))ue(_.ElseIf,"Expected elseif token"),It.push(At());else for(ue(_.Else,"Expected else token"),ue(_.CloseStatement,"Expected closing statement token");!(((Ds=O[K])==null?void 0:Ds.type)===_.OpenStatement&&((gs=O[K+1])==null?void 0:gs.type)===_.EndIf);)It.push(Oe());return new Q(ot,dt,It)}function sr(){const ot=os();if(ot.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const dt=Os();ue(_.CloseStatement,"Expected closing statement token");const It=[];for(;He(_.OpenStatement,_.EndMacro);)It.push(Oe());return new N(ot,dt,It)}function wr(ot=!1){const dt=ot?os:Cr,It=[dt()],dr=rt(_.Comma);for(;dr&&(++K,It.push(dt()),!!rt(_.Comma)););return dr?new he(It):It[0]}function Or(){const ot=wr(!0);if(!(ot instanceof A||ot instanceof he))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${ot.type} instead`);ue(_.In,"Expected `in` keyword following loop variable");const dt=Cr();ue(_.CloseStatement,"Expected closing statement token");const It=[];for(;He(_.OpenStatement,_.EndFor)&&He(_.OpenStatement,_.Else);)It.push(Oe());const dr=[];if(rt(_.OpenStatement,_.Else))for(++K,++K,ue(_.CloseStatement,"Expected closing statement token");He(_.OpenStatement,_.EndFor);)dr.push(Oe());return new ne(ot,dt,It,dr)}function Cr(){return Xr()}function Xr(){const ot=is();if(rt(_.If)){++K;const dt=is();if(rt(_.Else)){++K;const It=is();return new Q(dt,[ot],[It])}else return new ze(ot,dt)}return ot}function is(){let ot=Ws();for(;rt(_.Or);){const dt=O[K];++K;const It=Ws();ot=new Ce(dt,ot,It)}return ot}function Ws(){let ot=Is();for(;rt(_.And);){const dt=O[K];++K;const It=Is();ot=new Ce(dt,ot,It)}return ot}function Is(){let ot;for(;rt(_.Not);){const dt=O[K];++K;const It=Is();ot=new V(dt,It)}return ot??mn()}function mn(){let ot=Lt();for(;rt(_.ComparisonBinaryOperator)||rt(_.In)||rt(_.NotIn);){const dt=O[K];++K;const It=Lt();ot=new Ce(dt,ot,It)}return ot}function Lt(){let ot=us();for(;rt(_.AdditiveBinaryOperator);){const dt=O[K];++K;const It=us();ot=new Ce(dt,ot,It)}return ot}function Vs(){const ot=Zr();return rt(_.OpenParen)?Ps(ot):ot}function Ps(ot){let dt=new L(ot,Os());return rt(_.OpenParen)&&(dt=Ps(dt)),dt}function Os(){ue(_.OpenParen,"Expected opening parenthesis for arguments list");const ot=Cs();return ue(_.CloseParen,"Expected closing parenthesis for arguments list"),ot}function Cs(){const ot=[];for(;!rt(_.CloseParen);){let dt=Cr();if(rt(_.Equals)){if(++K,!(dt instanceof A))throw new SyntaxError("Expected identifier for keyword argument");const It=Cr();dt=new _e(dt,It)}ot.push(dt),rt(_.Comma)&&++K}return ot}function Fs(){const ot=[];let dt=!1;for(;!rt(_.CloseSquareBracket);)rt(_.Colon)?(ot.push(void 0),++K,dt=!0):(ot.push(Cr()),rt(_.Colon)&&(++K,dt=!0));if(ot.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(dt){if(ot.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new ce(...ot)}return ot[0]}function Zr(){let ot=os();for(;rt(_.Dot)||rt(_.OpenSquareBracket);){const dt=O[K];++K;let It;const dr=dt.type!==_.Dot;if(dr)It=Fs(),ue(_.CloseSquareBracket,"Expected closing square bracket");else if(It=os(),It.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");ot=new Y(ot,It,dr)}return ot}function us(){let ot=ks();for(;rt(_.MultiplicativeBinaryOperator);){const dt=O[K];++K;const It=ks();ot=new Ce(dt,ot,It)}return ot}function ks(){let ot=Gs();for(;rt(_.Is);){++K;const dt=rt(_.Not);dt&&++K;let It=os();if(It instanceof te?It=new A(It.value.toString()):It instanceof Z&&(It=new A("none")),!(It instanceof A))throw new SyntaxError("Expected identifier for the test");ot=new fe(ot,dt,It)}return ot}function Gs(){let ot=Vs();for(;rt(_.Pipe);){++K;let dt=os();if(!(dt instanceof A))throw new SyntaxError("Expected identifier for the filter");rt(_.OpenParen)&&(dt=Ps(dt)),ot=new xe(ot,dt)}return ot}function os(){const ot=O[K];switch(ot.type){case _.NumericLiteral:return++K,new S(Number(ot.value));case _.StringLiteral:return++K,new T(ot.value);case _.BooleanLiteral:return++K,new te(ot.value.toLowerCase()==="true");case _.NullLiteral:return++K,new Z(null);case _.Identifier:return++K,new A(ot.value);case _.OpenParen:{++K;const dt=wr();if(O[K].type!==_.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${O[K].type} instead`);return++K,dt}case _.OpenSquareBracket:{++K;const dt=[];for(;!rt(_.CloseSquareBracket);)dt.push(Cr()),rt(_.Comma)&&++K;return++K,new de(dt)}case _.OpenCurlyBracket:{++K;const dt=new Map;for(;!rt(_.CloseCurlyBracket);){const It=Cr();ue(_.Colon,"Expected colon between key and value in object literal");const dr=Cr();dt.set(It,dr),rt(_.Comma)&&++K}return++K,new we(dt)}default:throw new SyntaxError(`Unexpected token: ${ot.type}`)}}for(;K<O.length;)se.body.push(Oe());return se}function Ne(O,se,K=1){se===void 0&&(se=O,O=0);const ue=[];for(let Oe=O;Oe<se;Oe+=K)ue.push(Oe);return ue}function Ke(O,se,K,ue=1){const Oe=Math.sign(ue);Oe>=0?(se=(se??(se=0))<0?Math.max(O.length+se,0):Math.min(se,O.length),K=(K??(K=O.length))<0?Math.max(O.length+K,0):Math.min(K,O.length)):(se=(se??(se=O.length-1))<0?Math.max(O.length+se,-1):Math.min(se,O.length-1),K=(K??(K=-1))<-1?Math.max(O.length+K,-1):Math.min(K,O.length-1));const He=[];for(let rt=se;Oe*rt<Oe*K;rt+=ue)He.push(O[rt]);return He}function Je(O){return O.replace(/\b\w/g,se=>se.toUpperCase())}var lt=class{constructor(O=void 0){ve(this,"type","RuntimeValue");ve(this,"value");ve(this,"builtins",new Map);this.value=O}__bool__(){return new qe(!!this.value)}},Ge=class extends lt{constructor(){super(...arguments);ve(this,"type","NumericValue")}},oe=class extends lt{constructor(){super(...arguments);ve(this,"type","StringValue");ve(this,"builtins",new Map([["upper",new Ye(()=>new oe(this.value.toUpperCase()))],["lower",new Ye(()=>new oe(this.value.toLowerCase()))],["strip",new Ye(()=>new oe(this.value.trim()))],["title",new Ye(()=>new oe(Je(this.value)))],["length",new Ge(this.value.length)],["rstrip",new Ye(()=>new oe(this.value.trimEnd()))],["lstrip",new Ye(()=>new oe(this.value.trimStart()))]]))}},qe=class extends lt{constructor(){super(...arguments);ve(this,"type","BooleanValue")}},je=class extends lt{constructor(){super(...arguments);ve(this,"type","ObjectValue");ve(this,"builtins",new Map([["get",new Ye(([se,K])=>{if(!(se instanceof oe))throw new Error(`Object key must be a string: got ${se.type}`);return this.value.get(se.value)??K??new Xe})],["items",new Ye(()=>new ke(Array.from(this.value.entries()).map(([se,K])=>new ke([new oe(se),K]))))]]))}__bool__(){return new qe(this.value.size>0)}},ye=class extends je{constructor(){super(...arguments);ve(this,"type","KeywordArgumentsValue")}},ke=class extends lt{constructor(){super(...arguments);ve(this,"type","ArrayValue");ve(this,"builtins",new Map([["length",new Ge(this.value.length)]]))}__bool__(){return new qe(this.value.length>0)}},Ze=class extends ke{constructor(){super(...arguments);ve(this,"type","TupleValue")}},Ye=class extends lt{constructor(){super(...arguments);ve(this,"type","FunctionValue")}},Xe=class extends lt{constructor(){super(...arguments);ve(this,"type","NullValue")}},Be=class extends lt{constructor(){super(...arguments);ve(this,"type","UndefinedValue")}},st=class{constructor(O){ve(this,"variables",new Map([["namespace",new Ye(O=>{if(O.length===0)return new je(new Map);if(O.length!==1||!(O[0]instanceof je))throw new Error("`namespace` expects either zero arguments or a single object argument");return O[0]})]]));ve(this,"tests",new Map([["boolean",O=>O.type==="BooleanValue"],["callable",O=>O instanceof Ye],["odd",O=>{if(O.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${O.type}`);return O.value%2!==0}],["even",O=>{if(O.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${O.type}`);return O.value%2===0}],["false",O=>O.type==="BooleanValue"&&!O.value],["true",O=>O.type==="BooleanValue"&&O.value],["none",O=>O.type==="NullValue"],["string",O=>O.type==="StringValue"],["number",O=>O.type==="NumericValue"],["integer",O=>O.type==="NumericValue"&&Number.isInteger(O.value)],["iterable",O=>O.type==="ArrayValue"||O.type==="StringValue"],["mapping",O=>O.type==="ObjectValue"],["lower",O=>{const se=O.value;return O.type==="StringValue"&&se===se.toLowerCase()}],["upper",O=>{const se=O.value;return O.type==="StringValue"&&se===se.toUpperCase()}],["none",O=>O.type==="NullValue"],["defined",O=>O.type!=="UndefinedValue"],["undefined",O=>O.type==="UndefinedValue"],["equalto",(O,se)=>O.value===se.value],["eq",(O,se)=>O.value===se.value]]));this.parent=O}set(O,se){return this.declareVariable(O,yt(se))}declareVariable(O,se){if(this.variables.has(O))throw new SyntaxError(`Variable already declared: ${O}`);return this.variables.set(O,se),se}setVariable(O,se){return this.variables.set(O,se),se}resolve(O){if(this.variables.has(O))return this;if(this.parent)return this.parent.resolve(O);throw new Error(`Unknown variable: ${O}`)}lookupVariable(O){try{return this.resolve(O).variables.get(O)??new Be}catch{return new Be}}},pt=class{constructor(O){ve(this,"global");this.global=O??new st}run(O){return this.evaluate(O,this.global)}evaluateBinaryExpression(O,se){const K=this.evaluate(O.left,se);switch(O.operator.value){case"and":return K.__bool__().value?this.evaluate(O.right,se):K;case"or":return K.__bool__().value?K:this.evaluate(O.right,se)}const ue=this.evaluate(O.right,se);switch(O.operator.value){case"==":return new qe(K.value==ue.value);case"!=":return new qe(K.value!=ue.value)}if(K instanceof Be||ue instanceof Be)throw new Error("Cannot perform operation on undefined values");if(K instanceof Xe||ue instanceof Xe)throw new Error("Cannot perform operation on null values");if(K instanceof Ge&&ue instanceof Ge)switch(O.operator.value){case"+":return new Ge(K.value+ue.value);case"-":return new Ge(K.value-ue.value);case"*":return new Ge(K.value*ue.value);case"/":return new Ge(K.value/ue.value);case"%":return new Ge(K.value%ue.value);case"<":return new qe(K.value<ue.value);case">":return new qe(K.value>ue.value);case">=":return new qe(K.value>=ue.value);case"<=":return new qe(K.value<=ue.value)}else if(K instanceof ke&&ue instanceof ke)switch(O.operator.value){case"+":return new ke(K.value.concat(ue.value))}else if(ue instanceof ke){const Oe=ue.value.find(He=>He.value===K.value)!==void 0;switch(O.operator.value){case"in":return new qe(Oe);case"not in":return new qe(!Oe)}}if(K instanceof oe||ue instanceof oe)switch(O.operator.value){case"+":return new oe(K.value.toString()+ue.value.toString())}if(K instanceof oe&&ue instanceof oe)switch(O.operator.value){case"in":return new qe(ue.value.includes(K.value));case"not in":return new qe(!ue.value.includes(K.value))}if(K instanceof oe&&ue instanceof je)switch(O.operator.value){case"in":return new qe(ue.value.has(K.value));case"not in":return new qe(!ue.value.has(K.value))}throw new SyntaxError(`Unknown operator "${O.operator.value}" between ${K.type} and ${ue.type}`)}evaluateArguments(O,se){const K=[],ue=new Map;for(const Oe of O)if(Oe.type==="KeywordArgumentExpression"){const He=Oe;ue.set(He.key.value,this.evaluate(He.value,se))}else{if(ue.size>0)throw new Error("Positional arguments must come before keyword arguments");K.push(this.evaluate(Oe,se))}return[K,ue]}evaluateFilterExpression(O,se){const K=this.evaluate(O.operand,se);if(O.filter.type==="Identifier"){const ue=O.filter;if(ue.value==="tojson")return new oe(ht(K));if(K instanceof ke)switch(ue.value){case"list":return K;case"first":return K.value[0];case"last":return K.value[K.value.length-1];case"length":return new Ge(K.value.length);case"reverse":return new ke(K.value.reverse());case"sort":return new ke(K.value.sort((Oe,He)=>{if(Oe.type!==He.type)throw new Error(`Cannot compare different types: ${Oe.type} and ${He.type}`);switch(Oe.type){case"NumericValue":return Oe.value-He.value;case"StringValue":return Oe.value.localeCompare(He.value);default:throw new Error(`Cannot compare type: ${Oe.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${ue.value}`)}else if(K instanceof oe)switch(ue.value){case"length":return new Ge(K.value.length);case"upper":return new oe(K.value.toUpperCase());case"lower":return new oe(K.value.toLowerCase());case"title":return new oe(Je(K.value));case"capitalize":return new oe(K.value.charAt(0).toUpperCase()+K.value.slice(1));case"trim":return new oe(K.value.trim());case"indent":return new oe(K.value.split(`
`).map((Oe,He)=>He===0||Oe.length===0?Oe:"    "+Oe).join(`
`));case"string":return K;default:throw new Error(`Unknown StringValue filter: ${ue.value}`)}else if(K instanceof Ge)switch(ue.value){case"abs":return new Ge(Math.abs(K.value));default:throw new Error(`Unknown NumericValue filter: ${ue.value}`)}else if(K instanceof je)switch(ue.value){case"items":return new ke(Array.from(K.value.entries()).map(([Oe,He])=>new ke([new oe(Oe),He])));case"length":return new Ge(K.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ue.value}`)}throw new Error(`Cannot apply filter "${ue.value}" to type: ${K.type}`)}else if(O.filter.type==="CallExpression"){const ue=O.filter;if(ue.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ue.callee.type}`);const Oe=ue.callee.value;if(Oe==="tojson"){const[,He]=this.evaluateArguments(ue.args,se),rt=He.get("indent")??new Xe;if(!(rt instanceof Ge||rt instanceof Xe))throw new Error("If set, indent must be a number");return new oe(ht(K,rt.value))}if(K instanceof ke){switch(Oe){case"selectattr":case"rejectattr":{const He=Oe==="selectattr";if(K.value.some(At=>!(At instanceof je)))throw new Error(`\`${Oe}\` can only be applied to array of objects`);if(ue.args.some(At=>At.type!=="StringLiteral"))throw new Error(`arguments of \`${Oe}\` must be strings`);const[rt,ct,Ot]=ue.args.map(At=>this.evaluate(At,se));let xt;if(ct){const At=se.tests.get(ct.value);if(!At)throw new Error(`Unknown test: ${ct.value}`);xt=At}else xt=(...At)=>At[0].__bool__().value;const Ft=K.value.filter(At=>{const sr=At.value.get(rt.value),wr=sr?xt(sr,Ot):!1;return He?wr:!wr});return new ke(Ft)}case"map":{const[,He]=this.evaluateArguments(ue.args,se);if(He.has("attribute")){const rt=He.get("attribute");if(!(rt instanceof oe))throw new Error("attribute must be a string");const ct=He.get("default"),Ot=K.value.map(xt=>{if(!(xt instanceof je))throw new Error("items in map must be an object");return xt.value.get(rt.value)??ct??new Be});return new ke(Ot)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Oe}`)}else if(K instanceof oe){switch(Oe){case"indent":{const[He,rt]=this.evaluateArguments(ue.args,se),ct=He.at(0)??rt.get("width")??new Ge(4);if(!(ct instanceof Ge))throw new Error("width must be a number");const Ot=He.at(1)??rt.get("first")??new qe(!1),xt=He.at(2)??rt.get("blank")??new qe(!1),Ft=K.value.split(`
`),At=" ".repeat(ct.value),sr=Ft.map((wr,Or)=>!Ot.value&&Or===0||!xt.value&&wr.length===0?wr:At+wr);return new oe(sr.join(`
`))}}throw new Error(`Unknown StringValue filter: ${Oe}`)}else throw new Error(`Cannot apply filter "${Oe}" to type: ${K.type}`)}throw new Error(`Unknown filter: ${O.filter.type}`)}evaluateTestExpression(O,se){const K=this.evaluate(O.operand,se),ue=se.tests.get(O.test.value);if(!ue)throw new Error(`Unknown test: ${O.test.value}`);const Oe=ue(K);return new qe(O.negate?!Oe:Oe)}evaluateUnaryExpression(O,se){const K=this.evaluate(O.argument,se);switch(O.operator.value){case"not":return new qe(!K.value);default:throw new SyntaxError(`Unknown operator: ${O.operator.value}`)}}evalProgram(O,se){return this.evaluateBlock(O.body,se)}evaluateBlock(O,se){let K="";for(const ue of O){const Oe=this.evaluate(ue,se);Oe.type!=="NullValue"&&Oe.type!=="UndefinedValue"&&(K+=Oe.value)}return new oe(K)}evaluateIdentifier(O,se){return se.lookupVariable(O.value)}evaluateCallExpression(O,se){const[K,ue]=this.evaluateArguments(O.args,se);ue.size>0&&K.push(new ye(ue));const Oe=this.evaluate(O.callee,se);if(Oe.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Oe.type}`);return Oe.value(K,se)}evaluateSliceExpression(O,se,K){if(!(O instanceof ke||O instanceof oe))throw new Error("Slice object must be an array or string");const ue=this.evaluate(se.start,K),Oe=this.evaluate(se.stop,K),He=this.evaluate(se.step,K);if(!(ue instanceof Ge||ue instanceof Be))throw new Error("Slice start must be numeric or undefined");if(!(Oe instanceof Ge||Oe instanceof Be))throw new Error("Slice stop must be numeric or undefined");if(!(He instanceof Ge||He instanceof Be))throw new Error("Slice step must be numeric or undefined");return O instanceof ke?new ke(Ke(O.value,ue.value,Oe.value,He.value)):new oe(Ke(Array.from(O.value),ue.value,Oe.value,He.value).join(""))}evaluateMemberExpression(O,se){const K=this.evaluate(O.object,se);let ue;if(O.computed){if(O.property.type==="SliceExpression")return this.evaluateSliceExpression(K,O.property,se);ue=this.evaluate(O.property,se)}else ue=new oe(O.property.value);let Oe;if(K instanceof je){if(!(ue instanceof oe))throw new Error(`Cannot access property with non-string: got ${ue.type}`);Oe=K.value.get(ue.value)??K.builtins.get(ue.value)}else if(K instanceof ke||K instanceof oe)if(ue instanceof Ge)Oe=K.value.at(ue.value),K instanceof oe&&(Oe=new oe(K.value.at(ue.value)));else if(ue instanceof oe)Oe=K.builtins.get(ue.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ue.type}`);else{if(!(ue instanceof oe))throw new Error(`Cannot access property with non-string: got ${ue.type}`);Oe=K.builtins.get(ue.value)}return Oe instanceof lt?Oe:new Be}evaluateSet(O,se){const K=this.evaluate(O.value,se);if(O.assignee.type==="Identifier"){const ue=O.assignee.value;se.setVariable(ue,K)}else if(O.assignee.type==="MemberExpression"){const ue=O.assignee,Oe=this.evaluate(ue.object,se);if(!(Oe instanceof je))throw new Error("Cannot assign to member of non-object");if(ue.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Oe.value.set(ue.property.value,K)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(O.assignee)}`);return new Xe}evaluateIf(O,se){const K=this.evaluate(O.test,se);return this.evaluateBlock(K.__bool__().value?O.body:O.alternate,se)}evaluateFor(O,se){const K=new st(se);let ue,Oe;if(O.iterable.type==="SelectExpression"){const xt=O.iterable;Oe=this.evaluate(xt.iterable,K),ue=xt.test}else Oe=this.evaluate(O.iterable,K);if(!(Oe instanceof ke))throw new Error(`Expected iterable type in for loop: got ${Oe.type}`);const He=[],rt=[];for(let xt=0;xt<Oe.value.length;++xt){const Ft=new st(K),At=Oe.value[xt];let sr;if(O.loopvar.type==="Identifier")sr=wr=>wr.setVariable(O.loopvar.value,At);else if(O.loopvar.type==="TupleLiteral"){const wr=O.loopvar;if(At.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${At.type}`);const Or=At;if(wr.value.length!==Or.value.length)throw new Error(`Too ${wr.value.length>Or.value.length?"few":"many"} items to unpack`);sr=Cr=>{for(let Xr=0;Xr<wr.value.length;++Xr){if(wr.value[Xr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${wr.value[Xr].type}`);Cr.setVariable(wr.value[Xr].value,Or.value[Xr])}}}else throw new Error(`Invalid loop variable(s): ${O.loopvar.type}`);ue&&(sr(Ft),!this.evaluate(ue,Ft).__bool__().value)||(He.push(At),rt.push(sr))}let ct="",Ot=!0;for(let xt=0;xt<He.length;++xt){const Ft=new Map([["index",new Ge(xt+1)],["index0",new Ge(xt)],["revindex",new Ge(He.length-xt)],["revindex0",new Ge(He.length-xt-1)],["first",new qe(xt===0)],["last",new qe(xt===He.length-1)],["length",new Ge(He.length)],["previtem",xt>0?He[xt-1]:new Be],["nextitem",xt<He.length-1?He[xt+1]:new Be]]);K.setVariable("loop",new je(Ft)),rt[xt](K);const At=this.evaluateBlock(O.body,K);ct+=At.value,Ot=!1}if(Ot){const xt=this.evaluateBlock(O.defaultBlock,K);ct+=xt.value}return new oe(ct)}evaluateMacro(O,se){return se.setVariable(O.name.value,new Ye((K,ue)=>{var rt;const Oe=new st(ue);K=K.slice();let He;((rt=K.at(-1))==null?void 0:rt.type)==="KeywordArgumentsValue"&&(He=K.pop());for(let ct=0;ct<O.args.length;++ct){const Ot=O.args[ct],xt=K[ct];if(Ot.type==="Identifier"){const Ft=Ot;if(!xt)throw new Error(`Missing positional argument: ${Ft.value}`);Oe.setVariable(Ft.value,xt)}else if(Ot.type==="KeywordArgumentExpression"){const Ft=Ot,At=xt??(He==null?void 0:He.value.get(Ft.key.value))??this.evaluate(Ft.value,Oe);Oe.setVariable(Ft.key.value,At)}else throw new Error(`Unknown argument type: ${Ot.type}`)}return this.evaluateBlock(O.body,Oe)})),new Xe}evaluate(O,se){if(O===void 0)return new Be;switch(O.type){case"Program":return this.evalProgram(O,se);case"Set":return this.evaluateSet(O,se);case"If":return this.evaluateIf(O,se);case"For":return this.evaluateFor(O,se);case"Macro":return this.evaluateMacro(O,se);case"NumericLiteral":return new Ge(Number(O.value));case"StringLiteral":return new oe(O.value);case"BooleanLiteral":return new qe(O.value);case"NullLiteral":return new Xe(O.value);case"ArrayLiteral":return new ke(O.value.map(K=>this.evaluate(K,se)));case"TupleLiteral":return new Ze(O.value.map(K=>this.evaluate(K,se)));case"ObjectLiteral":{const K=new Map;for(const[ue,Oe]of O.value){const He=this.evaluate(ue,se);if(!(He instanceof oe))throw new Error(`Object keys must be strings: got ${He.type}`);K.set(He.value,this.evaluate(Oe,se))}return new je(K)}case"Identifier":return this.evaluateIdentifier(O,se);case"CallExpression":return this.evaluateCallExpression(O,se);case"MemberExpression":return this.evaluateMemberExpression(O,se);case"UnaryExpression":return this.evaluateUnaryExpression(O,se);case"BinaryExpression":return this.evaluateBinaryExpression(O,se);case"FilterExpression":return this.evaluateFilterExpression(O,se);case"TestExpression":return this.evaluateTestExpression(O,se);default:throw new SyntaxError(`Unknown node type: ${O.type}`)}}};function yt(O){switch(typeof O){case"number":return new Ge(O);case"string":return new oe(O);case"boolean":return new qe(O);case"undefined":return new Be;case"object":return O===null?new Xe:Array.isArray(O)?new ke(O.map(yt)):new je(new Map(Object.entries(O).map(([se,K])=>[se,yt(K)])));case"function":return new Ye((se,K)=>{const ue=O(...se.map(Oe=>Oe.value))??null;return yt(ue)});default:throw new Error(`Cannot convert to runtime value: ${O}`)}}function ht(O,se,K){const ue=K??0;switch(O.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(O.value);case"ArrayValue":case"ObjectValue":{const Oe=se?" ".repeat(se):"",He=`
`+Oe.repeat(ue),rt=He+Oe;if(O.type==="ArrayValue"){const ct=O.value.map(Ot=>ht(Ot,se,ue+1));return se?`[${rt}${ct.join(`,${rt}`)}${He}]`:`[${ct.join(", ")}]`}else{const ct=Array.from(O.value.entries()).map(([Ot,xt])=>{const Ft=`"${Ot}": ${ht(xt,se,ue+1)}`;return se?`${rt}${Ft}`:Ft});return se?`{${ct.join(",")}${He}}`:`{${ct.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${O.type}`)}}var wt=class{constructor(O){ve(this,"parsed");const se=b(O,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=De(se)}render(O){const se=new st;se.set("false",!1),se.set("true",!0),se.set("raise_exception",Oe=>{throw new Error(Oe)}),se.set("range",Ne);for(const[Oe,He]of Object.entries(O))se.set(Oe,He);return new pt(se).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(ae,$,s)=>{s.r($),s.d($,{registerBackend:()=>U,resolveBackendAndExecutionProviders:()=>W});const _=new Map,F=[],U=(w,M,y)=>{if(M&&typeof M.init=="function"&&typeof M.createInferenceSessionHandler=="function"){const b=_.get(w);if(b===void 0)_.set(w,{backend:M,priority:y});else{if(b.priority>y)return;if(b.priority===y&&b.backend!==M)throw new Error(`cannot register backend "${w}" using priority ${y}`)}if(y>=0){const v=F.indexOf(w);v!==-1&&F.splice(v,1);for(let D=0;D<F.length;D++)if(_.get(F[D]).priority<=y){F.splice(D,0,w);return}F.push(w)}return}throw new TypeError("not a valid backend")},J=async w=>{const M=_.get(w);if(!M)return"backend not found.";if(M.initialized)return M.backend;if(M.aborted)return M.error;{const y=!!M.initPromise;try{return y||(M.initPromise=M.backend.init(w)),await M.initPromise,M.initialized=!0,M.backend}catch(b){return y||(M.error=`${b}`,M.aborted=!0),M.error}finally{delete M.initPromise}}},W=async w=>{const M=w.executionProviders||[],y=M.map(le=>typeof le=="string"?le:le.name),b=y.length===0?F:y;let v;const D=[],Q=new Set;for(const le of b){const N=await J(le);typeof N=="string"?D.push({name:le,err:N}):(v||(v=N),v===N&&Q.add(le))}if(!v)throw new Error(`no available backend found. ERR: ${D.map(le=>`[${le.name}] ${le.err}`).join(", ")}`);for(const{name:le,err:N}of D)y.includes(le)&&console.warn(`removing requested execution provider "${le}" from session options because it is not available: ${N}`);const ne=M.filter(le=>Q.has(typeof le=="string"?le:le.name));return[v,new Proxy(w,{get:(le,N)=>N==="executionProviders"?ne:Reflect.get(le,N)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(ae,$,s)=>{s.r($),s.d($,{registerBackend:()=>_.registerBackend});var _=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(ae,$,s)=>{s.r($),s.d($,{env:()=>U});var _=s("./node_modules/onnxruntime-common/dist/esm/version.js");let F="warning";const U={wasm:{},webgl:{},webgpu:{},versions:{common:_.version},set logLevel(J){if(J!==void 0){if(typeof J!="string"||["verbose","info","warning","error","fatal"].indexOf(J)===-1)throw new Error(`Unsupported logging level: ${J}`);F=J}},get logLevel(){return F}};Object.defineProperty(U,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(ae,$,s)=>{s.r($),s.d($,{env:()=>F});var _=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const F=_.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(ae,$,s)=>{s.r($),s.d($,{InferenceSession:()=>U.InferenceSession,TRACE:()=>W.TRACE,TRACE_FUNC_BEGIN:()=>W.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>W.TRACE_FUNC_END,Tensor:()=>J.Tensor,TrainingSession:()=>w.TrainingSession,env:()=>F.env,registerBackend:()=>_.registerBackend});var _=s("./node_modules/onnxruntime-common/dist/esm/backend.js"),F=s("./node_modules/onnxruntime-common/dist/esm/env.js"),U=s("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),J=s("./node_modules/onnxruntime-common/dist/esm/tensor.js");s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),s("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var W=s("./node_modules/onnxruntime-common/dist/esm/trace.js");s("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),s("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var w=s("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(ae,$,s)=>{s.r($),s.d($,{InferenceSession:()=>J});var _=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),F=s("./node_modules/onnxruntime-common/dist/esm/tensor.js"),U=s("./node_modules/onnxruntime-common/dist/esm/trace.js");class J{constructor(w){this.handler=w}async run(w,M,y){(0,U.TRACE_FUNC_BEGIN)();const b={};let v={};if(typeof w!="object"||w===null||w instanceof F.Tensor||Array.isArray(w))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let D=!0;if(typeof M=="object"){if(M===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(M instanceof F.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(M)){if(M.length===0)throw new TypeError("'fetches' cannot be an empty array.");D=!1;for(const le of M){if(typeof le!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(le)===-1)throw new RangeError(`'fetches' contains invalid output name: ${le}.`);b[le]=null}if(typeof y=="object"&&y!==null)v=y;else if(typeof y<"u")throw new TypeError("'options' must be an object.")}else{let le=!1;const N=Object.getOwnPropertyNames(M);for(const H of this.outputNames)if(N.indexOf(H)!==-1){const Y=M[H];(Y===null||Y instanceof F.Tensor)&&(le=!0,D=!1,b[H]=Y)}if(le){if(typeof y=="object"&&y!==null)v=y;else if(typeof y<"u")throw new TypeError("'options' must be an object.")}else v=M}}else if(typeof M<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const le of this.inputNames)if(typeof w[le]>"u")throw new Error(`input '${le}' is missing in 'feeds'.`);if(D)for(const le of this.outputNames)b[le]=null;const Q=await this.handler.run(w,b,v),ne={};for(const le in Q)if(Object.hasOwnProperty.call(Q,le)){const N=Q[le];N instanceof F.Tensor?ne[le]=N:ne[le]=new F.Tensor(N.type,N.data,N.dims)}return(0,U.TRACE_FUNC_END)(),ne}async release(){return this.handler.dispose()}static async create(w,M,y,b){(0,U.TRACE_FUNC_BEGIN)();let v,D={};if(typeof w=="string"){if(v=w,typeof M=="object"&&M!==null)D=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else if(w instanceof Uint8Array){if(v=w,typeof M=="object"&&M!==null)D=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else if(w instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&w instanceof SharedArrayBuffer){const N=w;let H=0,Y=w.byteLength;if(typeof M=="object"&&M!==null)D=M;else if(typeof M=="number"){if(H=M,!Number.isSafeInteger(H))throw new RangeError("'byteOffset' must be an integer.");if(H<0||H>=N.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${N.byteLength}).`);if(Y=w.byteLength-H,typeof y=="number"){if(Y=y,!Number.isSafeInteger(Y))throw new RangeError("'byteLength' must be an integer.");if(Y<=0||H+Y>N.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${N.byteLength-H}].`);if(typeof b=="object"&&b!==null)D=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else if(typeof y<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof M<"u")throw new TypeError("'options' must be an object.");v=new Uint8Array(N,H,Y)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[Q,ne]=await(0,_.resolveBackendAndExecutionProviders)(D),le=await Q.createInferenceSessionHandler(v,ne);return(0,U.TRACE_FUNC_END)(),new J(le)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(ae,$,s)=>{s.r($),s.d($,{InferenceSession:()=>F});var _=s("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const F=_.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(ae,$,s)=>{s.r($)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(ae,$,s)=>{s.r($)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(ae,$,s)=>{s.r($),s.d($,{tensorToDataURL:()=>_,tensorToImageData:()=>F});const _=(U,J)=>{const W=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);W.width=U.dims[3],W.height=U.dims[2];const w=W.getContext("2d");if(w!=null){let M,y;(J==null?void 0:J.tensorLayout)!==void 0&&J.tensorLayout==="NHWC"?(M=U.dims[2],y=U.dims[3]):(M=U.dims[3],y=U.dims[2]);const b=(J==null?void 0:J.format)!==void 0?J.format:"RGB",v=J==null?void 0:J.norm;let D,Q;v===void 0||v.mean===void 0?D=[255,255,255,255]:typeof v.mean=="number"?D=[v.mean,v.mean,v.mean,v.mean]:(D=[v.mean[0],v.mean[1],v.mean[2],0],v.mean[3]!==void 0&&(D[3]=v.mean[3])),v===void 0||v.bias===void 0?Q=[0,0,0,0]:typeof v.bias=="number"?Q=[v.bias,v.bias,v.bias,v.bias]:(Q=[v.bias[0],v.bias[1],v.bias[2],0],v.bias[3]!==void 0&&(Q[3]=v.bias[3]));const ne=y*M;let le=0,N=ne,H=ne*2,Y=-1;b==="RGBA"?(le=0,N=ne,H=ne*2,Y=ne*3):b==="RGB"?(le=0,N=ne,H=ne*2):b==="RBG"&&(le=0,H=ne,N=ne*2);for(let L=0;L<y;L++)for(let A=0;A<M;A++){const g=(U.data[le++]-Q[0])*D[0],S=(U.data[N++]-Q[1])*D[1],T=(U.data[H++]-Q[2])*D[2],te=Y===-1?255:(U.data[Y++]-Q[3])*D[3];w.fillStyle="rgba("+g+","+S+","+T+","+te+")",w.fillRect(A,L,1,1)}if("toDataURL"in W)return W.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},F=(U,J)=>{const W=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let w;if(W!=null){let M,y,b;(J==null?void 0:J.tensorLayout)!==void 0&&J.tensorLayout==="NHWC"?(M=U.dims[2],y=U.dims[1],b=U.dims[3]):(M=U.dims[3],y=U.dims[2],b=U.dims[1]);const v=J!==void 0&&J.format!==void 0?J.format:"RGB",D=J==null?void 0:J.norm;let Q,ne;D===void 0||D.mean===void 0?Q=[255,255,255,255]:typeof D.mean=="number"?Q=[D.mean,D.mean,D.mean,D.mean]:(Q=[D.mean[0],D.mean[1],D.mean[2],255],D.mean[3]!==void 0&&(Q[3]=D.mean[3])),D===void 0||D.bias===void 0?ne=[0,0,0,0]:typeof D.bias=="number"?ne=[D.bias,D.bias,D.bias,D.bias]:(ne=[D.bias[0],D.bias[1],D.bias[2],0],D.bias[3]!==void 0&&(ne[3]=D.bias[3]));const le=y*M;if(J!==void 0&&(J.format!==void 0&&b===4&&J.format!=="RGBA"||b===3&&J.format!=="RGB"&&J.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const N=4;let H=0,Y=1,L=2,A=3,g=0,S=le,T=le*2,te=-1;v==="RGBA"?(g=0,S=le,T=le*2,te=le*3):v==="RGB"?(g=0,S=le,T=le*2):v==="RBG"&&(g=0,T=le,S=le*2),w=W.createImageData(M,y);for(let Z=0;Z<y*M;H+=N,Y+=N,L+=N,A+=N,Z++)w.data[H]=(U.data[g++]-ne[0])*Q[0],w.data[Y]=(U.data[S++]-ne[1])*Q[1],w.data[L]=(U.data[T++]-ne[2])*Q[2],w.data[A]=te===-1?255:(U.data[te++]-ne[3])*Q[3]}else throw new Error("Can not access image data");return w}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(ae,$,s)=>{s.r($)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(ae,$,s)=>{s.r($),s.d($,{bufferToTensor:()=>F,tensorFromGpuBuffer:()=>W,tensorFromImage:()=>U,tensorFromMLTensor:()=>w,tensorFromPinnedBuffer:()=>M,tensorFromTexture:()=>J});var _=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=(y,b)=>{if(y===void 0)throw new Error("Image buffer must be defined");if(b.height===void 0||b.width===void 0)throw new Error("Image height and width must be defined");if(b.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:v,width:D}=b,Q=b.norm??{mean:255,bias:0};let ne,le;typeof Q.mean=="number"?ne=[Q.mean,Q.mean,Q.mean,Q.mean]:ne=[Q.mean[0],Q.mean[1],Q.mean[2],Q.mean[3]??255],typeof Q.bias=="number"?le=[Q.bias,Q.bias,Q.bias,Q.bias]:le=[Q.bias[0],Q.bias[1],Q.bias[2],Q.bias[3]??0];const N=b.format!==void 0?b.format:"RGBA",H=b.tensorFormat!==void 0&&b.tensorFormat!==void 0?b.tensorFormat:"RGB",Y=v*D,L=H==="RGBA"?new Float32Array(Y*4):new Float32Array(Y*3);let A=4,g=0,S=1,T=2,te=3,Z=0,de=Y,he=Y*2,we=-1;N==="RGB"&&(A=3,g=0,S=1,T=2,te=-1),H==="RGBA"?we=Y*3:H==="RBG"?(Z=0,he=Y,de=Y*2):H==="BGR"&&(he=0,de=Y,Z=Y*2);for(let xe=0;xe<Y;xe++,g+=A,T+=A,S+=A,te+=A)L[Z++]=(y[g]+le[0])/ne[0],L[de++]=(y[S]+le[1])/ne[1],L[he++]=(y[T]+le[2])/ne[2],we!==-1&&te!==-1&&(L[we++]=(y[te]+le[3])/ne[3]);return H==="RGBA"?new _.Tensor("float32",L,[1,4,v,D]):new _.Tensor("float32",L,[1,3,v,D])},U=async(y,b)=>{const v=typeof HTMLImageElement<"u"&&y instanceof HTMLImageElement,D=typeof ImageData<"u"&&y instanceof ImageData,Q=typeof ImageBitmap<"u"&&y instanceof ImageBitmap,ne=typeof y=="string";let le,N=b??{};const H=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},Y=L=>typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||L instanceof OffscreenCanvas?L.getContext("2d"):null;if(v){const L=H();L.width=y.width,L.height=y.height;const A=Y(L);if(A!=null){let g=y.height,S=y.width;if(b!==void 0&&b.resizedHeight!==void 0&&b.resizedWidth!==void 0&&(g=b.resizedHeight,S=b.resizedWidth),b!==void 0){if(N=b,b.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");N.tensorFormat="RGBA",N.height=g,N.width=S}else N.tensorFormat="RGBA",N.height=g,N.width=S;A.drawImage(y,0,0),le=A.getImageData(0,0,S,g).data}else throw new Error("Can not access image data")}else if(D){let L,A;if(b!==void 0&&b.resizedWidth!==void 0&&b.resizedHeight!==void 0?(L=b.resizedHeight,A=b.resizedWidth):(L=y.height,A=y.width),b!==void 0&&(N=b),N.format="RGBA",N.height=L,N.width=A,b!==void 0){const g=H();g.width=A,g.height=L;const S=Y(g);if(S!=null)S.putImageData(y,0,0),le=S.getImageData(0,0,A,L).data;else throw new Error("Can not access image data")}else le=y.data}else if(Q){if(b===void 0)throw new Error("Please provide image config with format for Imagebitmap");const L=H();L.width=y.width,L.height=y.height;const A=Y(L);if(A!=null){const g=y.height,S=y.width;return A.drawImage(y,0,0,S,g),le=A.getImageData(0,0,S,g).data,N.height=g,N.width=S,F(le,N)}else throw new Error("Can not access image data")}else{if(ne)return new Promise((L,A)=>{const g=H(),S=Y(g);if(!y||!S)return A();const T=new Image;T.crossOrigin="Anonymous",T.src=y,T.onload=()=>{g.width=T.width,g.height=T.height,S.drawImage(T,0,0,g.width,g.height);const te=S.getImageData(0,0,g.width,g.height);N.height=g.height,N.width=g.width,L(F(te.data,N))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(le!==void 0)return F(le,N);throw new Error("Input data provided is not supported - aborted tensor creation")},J=(y,b)=>{const{width:v,height:D,download:Q,dispose:ne}=b,le=[1,D,v,4];return new _.Tensor({location:"texture",type:"float32",texture:y,dims:le,download:Q,dispose:ne})},W=(y,b)=>{const{dataType:v,dims:D,download:Q,dispose:ne}=b;return new _.Tensor({location:"gpu-buffer",type:v??"float32",gpuBuffer:y,dims:D,download:Q,dispose:ne})},w=(y,b)=>{const{dataType:v,dims:D,download:Q,dispose:ne}=b;return new _.Tensor({location:"ml-tensor",type:v??"float32",mlTensor:y,dims:D,download:Q,dispose:ne})},M=(y,b,v)=>new _.Tensor({location:"cpu-pinned",type:y,data:b,dims:v??[b.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(ae,$,s)=>{s.r($)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(ae,$,s)=>{s.r($),s.d($,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>F,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>_,checkTypedArray:()=>J});const _=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),F=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let U=!1;const J=()=>{if(!U){U=!0;const W=typeof BigInt64Array<"u"&&BigInt64Array.from,w=typeof BigUint64Array<"u"&&BigUint64Array.from,M=typeof Float16Array<"u"&&Float16Array.from;W&&(_.set("int64",BigInt64Array),F.set(BigInt64Array,"int64")),w&&(_.set("uint64",BigUint64Array),F.set(BigUint64Array,"uint64")),M?(_.set("float16",Float16Array),F.set(Float16Array,"float16")):_.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(ae,$,s)=>{s.r($),s.d($,{Tensor:()=>W});var _=s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),F=s("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),U=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),J=s("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class W{constructor(M,y,b){(0,U.checkTypedArray)();let v,D;if(typeof M=="object"&&"location"in M)switch(this.dataLocation=M.location,v=M.type,D=M.dims,M.location){case"cpu-pinned":{const ne=U.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(v);if(!ne)throw new TypeError(`unsupported type "${v}" to create tensor from pinned buffer`);if(!(M.data instanceof ne))throw new TypeError(`buffer should be of type ${ne.name}`);this.cpuData=M.data;break}case"texture":{if(v!=="float32")throw new TypeError(`unsupported type "${v}" to create tensor from texture`);this.gpuTextureData=M.texture,this.downloader=M.download,this.disposer=M.dispose;break}case"gpu-buffer":{if(v!=="float32"&&v!=="float16"&&v!=="int32"&&v!=="int64"&&v!=="uint32"&&v!=="uint8"&&v!=="bool"&&v!=="uint4"&&v!=="int4")throw new TypeError(`unsupported type "${v}" to create tensor from gpu buffer`);this.gpuBufferData=M.gpuBuffer,this.downloader=M.download,this.disposer=M.dispose;break}case"ml-tensor":{if(v!=="float32"&&v!=="float16"&&v!=="int32"&&v!=="int64"&&v!=="uint32"&&v!=="uint64"&&v!=="int8"&&v!=="uint8"&&v!=="bool")throw new TypeError(`unsupported type "${v}" to create tensor from MLTensor`);this.mlTensorData=M.mlTensor,this.downloader=M.download,this.disposer=M.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let ne,le;if(typeof M=="string")if(v=M,le=b,M==="string"){if(!Array.isArray(y))throw new TypeError("A string tensor's data must be a string array.");ne=y}else{const N=U.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(M);if(N===void 0)throw new TypeError(`Unsupported tensor type: ${M}.`);if(Array.isArray(y)){if(M==="float16"&&N===Uint16Array||M==="uint4"||M==="int4")throw new TypeError(`Creating a ${M} tensor from number array is not supported. Please use ${N.name} as data.`);M==="uint64"||M==="int64"?ne=N.from(y,BigInt):ne=N.from(y)}else if(y instanceof N)ne=y;else if(y instanceof Uint8ClampedArray)if(M==="uint8")ne=Uint8Array.from(y);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${v} tensor's data must be type of ${N}`)}else if(le=y,Array.isArray(M)){if(M.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const N=typeof M[0];if(N==="string")v="string",ne=M;else if(N==="boolean")v="bool",ne=Uint8Array.from(M);else throw new TypeError(`Invalid element type of data array: ${N}.`)}else if(M instanceof Uint8ClampedArray)v="uint8",ne=Uint8Array.from(M);else{const N=U.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(M.constructor);if(N===void 0)throw new TypeError(`Unsupported type for tensor data: ${M.constructor}.`);v=N,ne=M}if(le===void 0)le=[ne.length];else if(!Array.isArray(le))throw new TypeError("A tensor's dims must be a number array");D=le,this.cpuData=ne,this.dataLocation="cpu"}const Q=(0,J.calculateSize)(D);if(this.cpuData&&Q!==this.cpuData.length&&!((v==="uint4"||v==="int4")&&Math.ceil(Q/2)===this.cpuData.length))throw new Error(`Tensor's size(${Q}) does not match data length(${this.cpuData.length}).`);this.type=v,this.dims=D,this.size=Q}static async fromImage(M,y){return(0,F.tensorFromImage)(M,y)}static fromTexture(M,y){return(0,F.tensorFromTexture)(M,y)}static fromGpuBuffer(M,y){return(0,F.tensorFromGpuBuffer)(M,y)}static fromMLTensor(M,y){return(0,F.tensorFromMLTensor)(M,y)}static fromPinnedBuffer(M,y,b){return(0,F.tensorFromPinnedBuffer)(M,y,b)}toDataURL(M){return(0,_.tensorToDataURL)(this,M)}toImageData(M){return(0,_.tensorToImageData)(this,M)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(M){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const y=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=y,M&&this.disposer&&(this.disposer(),this.disposer=void 0),y}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(M){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,J.tensorReshape)(this,M)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(ae,$,s)=>{s.r($),s.d($,{calculateSize:()=>F,tensorReshape:()=>U});var _=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=J=>{let W=1;for(let w=0;w<J.length;w++){const M=J[w];if(typeof M!="number"||!Number.isSafeInteger(M))throw new TypeError(`dims[${w}] must be an integer, got: ${M}`);if(M<0)throw new RangeError(`dims[${w}] must be a non-negative integer, got: ${M}`);W*=M}return W},U=(J,W)=>{switch(J.location){case"cpu":return new _.Tensor(J.type,J.data,W);case"cpu-pinned":return new _.Tensor({location:"cpu-pinned",data:J.data,type:J.type,dims:W});case"texture":return new _.Tensor({location:"texture",texture:J.texture,type:J.type,dims:W});case"gpu-buffer":return new _.Tensor({location:"gpu-buffer",gpuBuffer:J.gpuBuffer,type:J.type,dims:W});case"ml-tensor":return new _.Tensor({location:"ml-tensor",mlTensor:J.mlTensor,type:J.type,dims:W});default:throw new Error(`tensorReshape: tensor location ${J.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(ae,$,s)=>{s.r($),s.d($,{Tensor:()=>F});var _=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=_.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(ae,$,s)=>{s.r($),s.d($,{TRACE:()=>F,TRACE_FUNC_BEGIN:()=>J,TRACE_FUNC_END:()=>W});var _=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const F=(w,M)=>{(typeof _.env.trace>"u"?!_.env.wasm.trace:!_.env.trace)||console.timeStamp(`${w}::ORT::${M}`)},U=(w,M)=>{var v;const y=((v=new Error().stack)==null?void 0:v.split(/\r\n|\r|\n/g))||[];let b=!1;for(let D=0;D<y.length;D++){if(b&&!y[D].includes("TRACE_FUNC")){let Q=`FUNC_${w}::${y[D].trim().split(" ")[1]}`;M&&(Q+=`::${M}`),F("CPU",Q);return}y[D].includes("TRACE_FUNC")&&(b=!0)}},J=w=>{(typeof _.env.trace>"u"?!_.env.wasm.trace:!_.env.trace)||U("BEGIN",w)},W=w=>{(typeof _.env.trace>"u"?!_.env.wasm.trace:!_.env.trace)||U("END",w)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(ae,$,s)=>{s.r($),s.d($,{TrainingSession:()=>J});var _=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),F=s("./node_modules/onnxruntime-common/dist/esm/tensor.js");const U="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class J{constructor(w,M,y){this.handler=w,this.hasOptimizerModel=M,this.hasEvalModel=y}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(w,M){const y=w.evalModel||"",b=w.optimizerModel||"",v=M||{},[D,Q]=await(0,_.resolveBackendAndExecutionProviders)(v);if(D.createTrainingSessionHandler){const ne=await D.createTrainingSessionHandler(w.checkpointState,w.trainModel,y,b,Q);return new J(ne,!!w.optimizerModel,!!w.evalModel)}else throw new Error(U)}typeNarrowingForRunStep(w,M,y,b,v){const D={};let Q={};if(typeof y!="object"||y===null||y instanceof F.Tensor||Array.isArray(y))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let ne=!0;if(typeof b=="object"){if(b===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(b instanceof F.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(b)){if(b.length===0)throw new TypeError("'fetches' cannot be an empty array.");ne=!1;for(const le of b){if(typeof le!="string")throw new TypeError("'fetches' must be a string array or an object.");if(M.indexOf(le)===-1)throw new RangeError(`'fetches' contains invalid output name: ${le}.`);D[le]=null}if(typeof v=="object"&&v!==null)Q=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else{let le=!1;const N=Object.getOwnPropertyNames(b);for(const H of M)if(N.indexOf(H)!==-1){const Y=b[H];(Y===null||Y instanceof F.Tensor)&&(le=!0,ne=!1,D[H]=Y)}if(le){if(typeof v=="object"&&v!==null)Q=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else Q=b}}else if(typeof b<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const le of w)if(typeof y[le]>"u")throw new Error(`input '${le}' is missing in 'feeds'.`);if(ne)for(const le of M)D[le]=null;return[D,Q]}convertHandlerReturnTypeToMapOfTensors(w){const M={};for(const y in w)if(Object.hasOwnProperty.call(w,y)){const b=w[y];b instanceof F.Tensor?M[y]=b:M[y]=new F.Tensor(b.type,b.data,b.dims)}return M}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(w,M,y){const[b,v]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,w,M,y),D=await this.handler.runTrainStep(w,b,v);return this.convertHandlerReturnTypeToMapOfTensors(D)}async runOptimizerStep(w){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(w||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(w,M,y){if(this.hasEvalModel){const[b,v]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,w,M,y),D=await this.handler.runEvalStep(w,b,v);return this.convertHandlerReturnTypeToMapOfTensors(D)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(w=!0){return this.handler.getParametersSize(w)}async loadParametersBuffer(w,M=!0){const y=await this.getParametersSize(M);if(w.length!==4*y)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(w,M)}async getContiguousParameters(w=!0){return this.handler.getContiguousParameters(w)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(ae,$,s)=>{s.r($),s.d($,{TrainingSession:()=>F});var _=s("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const F=_.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(ae,$,s)=>{s.r($),s.d($,{version:()=>_});const _="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs":(ae,$,s)=>{s.r($),s.d($,{InferenceSession:()=>ht,TRACE:()=>Ze,TRACE_FUNC_BEGIN:()=>Xe,TRACE_FUNC_END:()=>Be,Tensor:()=>ye,default:()=>Lf,env:()=>T,registerBackend:()=>Q});/*!
 * ONNX Runtime Web v1.21.0-dev.20241205-d27fecd3d3
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var _=Object.defineProperty,F=Object.getOwnPropertyDescriptor,U=Object.getOwnPropertyNames,J=Object.prototype.hasOwnProperty,W=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),w=(e,t)=>()=>(e&&(t=e(e=0)),t),M=(e,t)=>{for(var r in t)_(e,r,{get:t[r],enumerable:!0})},y=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of U(t))!J.call(e,i)&&i!==r&&_(e,i,{get:()=>t[i],enumerable:!(n=F(t,i))||n.enumerable});return e},b=e=>y(_({},"__esModule",{value:!0}),e),v,D,Q,ne,le,N=w(()=>{v=new Map,D=[],Q=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=v.get(e);if(n===void 0)v.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=D.indexOf(e);i!==-1&&D.splice(i,1);for(let a=0;a<D.length;a++)if(v.get(D[a]).priority<=r){D.splice(a,0,e);return}D.push(e)}return}throw new TypeError("not a valid backend")},ne=async e=>{let t=v.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},le=async e=>{let t=e.executionProviders||[],r=t.map(p=>typeof p=="string"?p:p.name),n=r.length===0?D:r,i,a=[],o=new Set;for(let p of n){let h=await ne(p);typeof h=="string"?a.push({name:p,err:h}):(i||(i=h),i===h&&o.add(p))}if(!i)throw new Error(`no available backend found. ERR: ${a.map(p=>`[${p.name}] ${p.err}`).join(", ")}`);for(let{name:p,err:h}of a)r.includes(p)&&console.warn(`removing requested execution provider "${p}" from session options because it is not available: ${h}`);let d=t.filter(p=>o.has(typeof p=="string"?p:p.name));return[i,new Proxy(e,{get:(p,h)=>h==="executionProviders"?d:Reflect.get(p,h)})]}}),H=w(()=>{N()}),Y,L=w(()=>{Y="1.21.0-dev.20241205-6ed77cc374"}),A,g,S=w(()=>{L(),A="warning",g={wasm:{},webgl:{},webgpu:{},versions:{common:Y},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);A=e}},get logLevel(){return A}},Object.defineProperty(g,"logLevel",{enumerable:!0})}),T,te=w(()=>{S(),T=g}),Z,de,he=w(()=>{Z=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let i,a;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],a=e.dims[3]):(i=e.dims[3],a=e.dims[2]);let o=(t==null?void 0:t.format)!==void 0?t.format:"RGB",d=t==null?void 0:t.norm,p,h;d===void 0||d.mean===void 0?p=[255,255,255,255]:typeof d.mean=="number"?p=[d.mean,d.mean,d.mean,d.mean]:(p=[d.mean[0],d.mean[1],d.mean[2],0],d.mean[3]!==void 0&&(p[3]=d.mean[3])),d===void 0||d.bias===void 0?h=[0,0,0,0]:typeof d.bias=="number"?h=[d.bias,d.bias,d.bias,d.bias]:(h=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(h[3]=d.bias[3]));let C=a*i,k=0,u=C,B=C*2,R=-1;o==="RGBA"?(k=0,u=C,B=C*2,R=C*3):o==="RGB"?(k=0,u=C,B=C*2):o==="RBG"&&(k=0,B=C,u=C*2);for(let j=0;j<a;j++)for(let ee=0;ee<i;ee++){let re=(e.data[k++]-h[0])*p[0],X=(e.data[u++]-h[1])*p[1],me=(e.data[B++]-h[2])*p[2],pe=R===-1?255:(e.data[R++]-h[3])*p[3];n.fillStyle="rgba("+re+","+X+","+me+","+pe+")",n.fillRect(ee,j,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},de=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let i,a,o;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],a=e.dims[1],o=e.dims[3]):(i=e.dims[3],a=e.dims[2],o=e.dims[1]);let d=t!==void 0&&t.format!==void 0?t.format:"RGB",p=t==null?void 0:t.norm,h,C;p===void 0||p.mean===void 0?h=[255,255,255,255]:typeof p.mean=="number"?h=[p.mean,p.mean,p.mean,p.mean]:(h=[p.mean[0],p.mean[1],p.mean[2],255],p.mean[3]!==void 0&&(h[3]=p.mean[3])),p===void 0||p.bias===void 0?C=[0,0,0,0]:typeof p.bias=="number"?C=[p.bias,p.bias,p.bias,p.bias]:(C=[p.bias[0],p.bias[1],p.bias[2],0],p.bias[3]!==void 0&&(C[3]=p.bias[3]));let k=a*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let u=4,B=0,R=1,j=2,ee=3,re=0,X=k,me=k*2,pe=-1;d==="RGBA"?(re=0,X=k,me=k*2,pe=k*3):d==="RGB"?(re=0,X=k,me=k*2):d==="RBG"&&(re=0,me=k,X=k*2),n=r.createImageData(i,a);for(let Me=0;Me<a*i;B+=u,R+=u,j+=u,ee+=u,Me++)n.data[B]=(e.data[re++]-C[0])*h[0],n.data[R]=(e.data[X++]-C[1])*h[1],n.data[j]=(e.data[me++]-C[2])*h[2],n.data[ee]=pe===-1?255:(e.data[pe++]-C[3])*h[3]}else throw new Error("Can not access image data");return n}}),we,Ce,xe,ze,fe,V,ce=w(()=>{je(),we=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},a,o;typeof i.mean=="number"?a=[i.mean,i.mean,i.mean,i.mean]:a=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let d=t.format!==void 0?t.format:"RGBA",p=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",h=r*n,C=p==="RGBA"?new Float32Array(h*4):new Float32Array(h*3),k=4,u=0,B=1,R=2,j=3,ee=0,re=h,X=h*2,me=-1;d==="RGB"&&(k=3,u=0,B=1,R=2,j=-1),p==="RGBA"?me=h*3:p==="RBG"?(ee=0,X=h,re=h*2):p==="BGR"&&(X=0,re=h,ee=h*2);for(let pe=0;pe<h;pe++,u+=k,R+=k,B+=k,j+=k)C[ee++]=(e[u]+o[0])/a[0],C[re++]=(e[B]+o[1])/a[1],C[X++]=(e[R]+o[2])/a[2],me!==-1&&j!==-1&&(C[me++]=(e[j]+o[3])/a[3]);return p==="RGBA"?new qe("float32",C,[1,4,r,n]):new qe("float32",C,[1,3,r,n])},Ce=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a=typeof e=="string",o,d=t??{},p=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},h=C=>typeof HTMLCanvasElement<"u"&&C instanceof HTMLCanvasElement||C instanceof OffscreenCanvas?C.getContext("2d"):null;if(r){let C=p();C.width=e.width,C.height=e.height;let k=h(C);if(k!=null){let u=e.height,B=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(u=t.resizedHeight,B=t.resizedWidth),t!==void 0){if(d=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");d.tensorFormat="RGBA",d.height=u,d.width=B}else d.tensorFormat="RGBA",d.height=u,d.width=B;k.drawImage(e,0,0),o=k.getImageData(0,0,B,u).data}else throw new Error("Can not access image data")}else if(n){let C,k;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(C=t.resizedHeight,k=t.resizedWidth):(C=e.height,k=e.width),t!==void 0&&(d=t),d.format="RGBA",d.height=C,d.width=k,t!==void 0){let u=p();u.width=k,u.height=C;let B=h(u);if(B!=null)B.putImageData(e,0,0),o=B.getImageData(0,0,k,C).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let C=p();C.width=e.width,C.height=e.height;let k=h(C);if(k!=null){let u=e.height,B=e.width;return k.drawImage(e,0,0,B,u),o=k.getImageData(0,0,B,u).data,d.height=u,d.width=B,we(o,d)}else throw new Error("Can not access image data")}else{if(a)return new Promise((C,k)=>{let u=p(),B=h(u);if(!e||!B)return k();let R=new Image;R.crossOrigin="Anonymous",R.src=e,R.onload=()=>{u.width=R.width,u.height=R.height,B.drawImage(R,0,0,u.width,u.height);let j=B.getImageData(0,0,u.width,u.height);d.height=u.height,d.width=u.width,C(we(j.data,d))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return we(o,d);throw new Error("Input data provided is not supported - aborted tensor creation")},xe=(e,t)=>{let{width:r,height:n,download:i,dispose:a}=t,o=[1,n,r,4];return new qe({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:a})},ze=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:a}=t;return new qe({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:i,dispose:a})},fe=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:a}=t;return new qe({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:n,download:i,dispose:a})},V=(e,t,r)=>new qe({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),_e,De,Ne,Ke,Je=w(()=>{_e=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),De=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Ne=!1,Ke=()=>{if(!Ne){Ne=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(_e.set("int64",BigInt64Array),De.set(BigInt64Array,"int64")),t&&(_e.set("uint64",BigUint64Array),De.set(BigUint64Array,"uint64")),r?(_e.set("float16",Float16Array),De.set(Float16Array,"float16")):_e.set("float16",Uint16Array)}}}),lt,Ge,oe=w(()=>{je(),lt=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},Ge=(e,t)=>{switch(e.location){case"cpu":return new qe(e.type,e.data,t);case"cpu-pinned":return new qe({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new qe({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new qe({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new qe({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),qe,je=w(()=>{he(),ce(),Je(),oe(),qe=class{constructor(e,t,r){Ke();let n,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=_e.get(n);if(!o)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,d;if(typeof e=="string")if(n=e,d=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let p=_e.get(e);if(p===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&p===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${p.name} as data.`);e==="uint64"||e==="int64"?o=p.from(t,BigInt):o=p.from(t)}else if(t instanceof p)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${p}`)}else if(d=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let p=typeof e[0];if(p==="string")n="string",o=e;else if(p==="boolean")n="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${p}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",o=Uint8Array.from(e);else{let p=De.get(e.constructor);if(p===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=p,o=e}if(d===void 0)d=[o.length];else if(!Array.isArray(d))throw new TypeError("A tensor's dims must be a number array");i=d,this.cpuData=o,this.dataLocation="cpu"}let a=lt(i);if(this.cpuData&&a!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(a/2)===this.cpuData.length))throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=a}static async fromImage(e,t){return Ce(e,t)}static fromTexture(e,t){return xe(e,t)}static fromGpuBuffer(e,t){return ze(e,t)}static fromMLTensor(e,t){return fe(e,t)}static fromPinnedBuffer(e,t,r){return V(e,t,r)}toDataURL(e){return Z(this,e)}toImageData(e){return de(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ge(this,e)}}}),ye,ke=w(()=>{je(),ye=qe}),Ze,Ye,Xe,Be,st=w(()=>{S(),Ze=(e,t)=>{(typeof g.trace>"u"?!g.wasm.trace:!g.trace)||console.timeStamp(`${e}::ORT::${t}`)},Ye=(e,t)=>{var i;let r=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],n=!1;for(let a=0;a<r.length;a++){if(n&&!r[a].includes("TRACE_FUNC")){let o=`FUNC_${e}::${r[a].trim().split(" ")[1]}`;t&&(o+=`::${t}`),Ze("CPU",o);return}r[a].includes("TRACE_FUNC")&&(n=!0)}},Xe=e=>{(typeof g.trace>"u"?!g.wasm.trace:!g.trace)||Ye("BEGIN",e)},Be=e=>{(typeof g.trace>"u"?!g.wasm.trace:!g.trace)||Ye("END",e)}}),pt,yt=w(()=>{N(),ke(),st(),pt=class ff{constructor(t){this.handler=t}async run(t,r,n){Xe();let i={},a={};if(typeof t!="object"||t===null||t instanceof ye||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ye)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let h of r){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);i[h]=null}if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,C=Object.getOwnPropertyNames(r);for(let k of this.outputNames)if(C.indexOf(k)!==-1){let u=r[k];(u===null||u instanceof ye)&&(h=!0,o=!1,i[k]=u)}if(h){if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else a=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of this.inputNames)if(typeof t[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(o)for(let h of this.outputNames)i[h]=null;let d=await this.handler.run(t,i,a),p={};for(let h in d)if(Object.hasOwnProperty.call(d,h)){let C=d[h];C instanceof ye?p[h]=C:p[h]=new ye(C.type,C.data,C.dims)}return Be(),p}async release(){return this.handler.dispose()}static async create(t,r,n,i){Xe();let a,o={};if(typeof t=="string"){if(a=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(a=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let C=t,k=0,u=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(k=r,!Number.isSafeInteger(k))throw new RangeError("'byteOffset' must be an integer.");if(k<0||k>=C.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${C.byteLength}).`);if(u=t.byteLength-k,typeof n=="number"){if(u=n,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||k+u>C.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${C.byteLength-k}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");a=new Uint8Array(C,k,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[d,p]=await le(o),h=await d.createInferenceSessionHandler(a,p);return Be(),new ff(h)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),ht,wt=w(()=>{yt(),ht=pt}),O=w(()=>{}),se=w(()=>{}),K=w(()=>{}),ue=w(()=>{}),Oe={};M(Oe,{InferenceSession:()=>ht,TRACE:()=>Ze,TRACE_FUNC_BEGIN:()=>Xe,TRACE_FUNC_END:()=>Be,Tensor:()=>ye,env:()=>T,registerBackend:()=>Q});var He=w(()=>{H(),te(),wt(),ke(),O(),se(),st(),K(),ue()}),rt=w(()=>{}),ct={};M(ct,{default:()=>Ft});var Ot,xt,Ft,At=w(()=>{var e;Dh(),It(),Cs(),Ot="ort-wasm-proxy-worker",xt=((e=globalThis.self)==null?void 0:e.name)===Ot,xt&&(self.onmessage=t=>{let{type:r,in:n}=t.data;try{switch(r){case"init-wasm":ot(n.wasm).then(()=>{zp(n).then(()=>{postMessage({type:r})},i=>{postMessage({type:r,err:i})})},i=>{postMessage({type:r,err:i})});break;case"init-ep":{let{epName:i,env:a}=n;Bp(a,i).then(()=>{postMessage({type:r})},o=>{postMessage({type:r,err:o})});break}case"copy-from":{let{buffer:i}=n,a=hp(i);postMessage({type:r,out:a});break}case"create":{let{model:i,options:a}=n;Rp(i,a).then(o=>{postMessage({type:r,out:o})},o=>{postMessage({type:r,err:o})});break}case"release":Np(n),postMessage({type:r});break;case"run":{let{sessionId:i,inputIndices:a,inputs:o,outputIndices:d,options:p}=n;Up(i,a,o,d,new Array(d.length).fill(null),p).then(h=>{h.some(C=>C[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:h},Vp([...o,...h]))},h=>{postMessage({type:r,err:h})});break}case"end-profiling":Wp(n),postMessage({type:r});break;default:}}catch(i){postMessage({type:r,err:i})}}),Ft=xt?null:t=>new Worker(t??is,{type:"module",name:Ot})}),sr={};M(sr,{default:()=>Cr});var wr,Or,Cr,Xr=w(()=>{var e;Or=(wr=self.location.href,async function(t={}){function r(){return jt.buffer!=Gt.buffer&&Tr(),Gt}function n(){return jt.buffer!=Gt.buffer&&Tr(),Pr}function i(){return jt.buffer!=Gt.buffer&&Tr(),nt}function a(){return jt.buffer!=Gt.buffer&&Tr(),Pt}function o(){return jt.buffer!=Gt.buffer&&Tr(),cr}function d(){return jt.buffer!=Gt.buffer&&Tr(),Lr}function p(){return jt.buffer!=Gt.buffer&&Tr(),ms}function h(){return jt.buffer!=Gt.buffer&&Tr(),Si}var C,k,u=Object.assign({},t),B=new Promise((l,m)=>{C=l,k=m}),R=typeof window=="object",j=typeof importScripts=="function",ee=j&&self.name=="em-pthread";u.mountExternalData=(l,m)=>{l.startsWith("./")&&(l=l.substring(2)),(u.Fb||(u.Fb=new Map)).set(l,m)},u.unmountExternalData=()=>{delete u.Fb};var re=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let X=()=>{let l=(x,I,G)=>(...ge)=>{let We=dn,et=I==null?void 0:I();ge=x(...ge);let Mt=I==null?void 0:I();return et!==Mt&&(x=Mt,G(et),I=G=null),dn!=We?new Promise((St,Wt)=>{dh={resolve:St,reject:Wt}}):ge},m=x=>async(...I)=>{var G;try{if(u.Gb)throw Error("Session already started");let ge=u.Gb={hc:I[0],errors:[]},We=await x(...I);if(u.Gb!==ge)throw Error("Session mismatch");(G=u.Hb)==null||G.flush();let et=ge.errors;if(0<et.length){let Mt=await Promise.all(et);if(Mt=Mt.filter(St=>St),0<Mt.length)throw Error(Mt.join(`
`))}return We}finally{u.Gb=null}};u._OrtCreateSession=l(u._OrtCreateSession,()=>u._OrtCreateSession,x=>u._OrtCreateSession=x),u._OrtRun=m(l(u._OrtRun,()=>u._OrtRun,x=>u._OrtRun=x)),u._OrtRunWithBinding=m(l(u._OrtRunWithBinding,()=>u._OrtRunWithBinding,x=>u._OrtRunWithBinding=x)),u._OrtBindInput=l(u._OrtBindInput,()=>u._OrtBindInput,x=>u._OrtBindInput=x),X=void 0};u.jsepInit=(l,m)=>{if(X==null||X(),l==="webgpu"){[u.Hb,u.Vb,u.Zb,u.Ob,u.Yb,u.kb,u.$b,u.cc,u.Wb,u.Xb,u.ac]=m;let x=u.Hb;u.jsepRegisterBuffer=(I,G,ge,We)=>x.registerBuffer(I,G,ge,We),u.jsepGetBuffer=I=>x.getBuffer(I),u.jsepCreateDownloader=(I,G,ge)=>x.createDownloader(I,G,ge),u.jsepOnCreateSession=I=>{x.onCreateSession(I)},u.jsepOnReleaseSession=I=>{x.onReleaseSession(I)},u.jsepOnRunStart=I=>x.onRunStart(I),u.dc=(I,G)=>{x.upload(I,G)}}else if(l==="webnn"){[u.Hb,u.bc,u.Pb,u.jsepEnsureTensor,u.ec,u.jsepDownloadTensor]=m,u.jsepReleaseTensorId=u.Pb;let x=u.Hb;u.jsepOnRunStart=I=>x.onRunStart(I),u.jsepRegisterMLContext=(I,G)=>{x.registerMLContext(I,G)},u.jsepOnReleaseSession=I=>{x.onReleaseSession(I)},u.jsepCreateMLTensorDownloader=(I,G)=>x.createMLTensorDownloader(I,G),u.jsepRegisterMLTensor=(I,G,ge)=>x.registerMLTensor(I,G,ge),u.jsepCreateMLContext=I=>x.createMLContext(I),u.jsepRegisterMLConstant=(I,G,ge,We,et)=>x.registerMLConstant(I,G,ge,We,et,u.Fb)}};var me,pe,Me=Object.assign({},u),$e="./this.program",Ie=(l,m)=>{throw m},Ue="";(R||j)&&(j?Ue=self.location.href:typeof document<"u"&&document.currentScript&&(Ue=document.currentScript.src),wr&&(Ue=wr),Ue=Ue.startsWith("blob:")?"":Ue.substr(0,Ue.replace(/[?#].*/,"").lastIndexOf("/")+1),j&&(pe=l=>{var m=new XMLHttpRequest;return m.open("GET",l,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),me=(l,m,x)=>{var I=new XMLHttpRequest;I.open("GET",l,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?m(I.response):x()},I.onerror=x,I.send(null)});var at,Et=console.log.bind(console),Kt=console.error.bind(console),Yt=Et,kt=Kt;if(Object.assign(u,Me),Me=null,ee){let l=function(m){try{var x=m.data,I=x.cmd;if(I==="load"){let G=[];self.onmessage=ge=>G.push(ge),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let ge of G)l(ge);self.onmessage=l};for(let ge of x.handlers)u[ge]&&!u[ge].proxy||(u[ge]=(...We)=>{postMessage({Nb:"callHandler",pc:ge,args:We})},ge=="print"&&(Yt=u[ge]),ge=="printErr"&&(kt=u[ge]));jt=x.wasmMemory,Tr(),Jt(x.wasmModule)}else if(I==="run"){mh(x.pthread_ptr,0,0,1,0,0),lh(x.pthread_ptr),Rf(),im(),$t||(rf(),$t=!0);try{Nf(x.start_routine,x.arg)}catch(G){if(G!="unwind")throw G}}else I==="cancel"?Ca()&&Cp(-1):x.target!=="setimmediate"&&(I==="checkMailbox"?$t&&gp():I&&(kt(`worker: received unknown command ${I}`),kt(x)))}catch(G){throw sf(),G}};var Jt,$t=!1;kt=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({Nb:"alert",text:m.join(" "),rc:Ca()})},u.instantiateWasm=(m,x)=>new Promise(I=>{Jt=G=>{G=new WebAssembly.Instance(G,em()),x(G),I()}}),self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=l}u.wasmBinary&&(at=u.wasmBinary);var jt,Mr,Ht,Gt,Pr,nt,Pt,cr,Lr,ms,Hr,an,Si,Ar=!1;function Tr(){var l=jt.buffer;u.HEAP8=Gt=new Int8Array(l),u.HEAP16=nt=new Int16Array(l),u.HEAPU8=Pr=new Uint8Array(l),u.HEAPU16=Pt=new Uint16Array(l),u.HEAP32=cr=new Int32Array(l),u.HEAPU32=Lr=new Uint32Array(l),u.HEAPF32=ms=new Float32Array(l),u.HEAPF64=Si=new Float64Array(l),u.HEAP64=Hr=new BigInt64Array(l),u.HEAPU64=an=new BigUint64Array(l)}if(!ee){if(!((jt=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof re))throw kt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Tr()}var Xn=[],wc=[],Xp=[],yc=0,bc=null;function Xh(){if(--yc==0&&bc){var l=bc;bc=null,l()}}function Qn(l){throw kt(l="Aborted("+l+")"),Ar=!0,Ht=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),k(l),l}var Qp,Qh=l=>l.startsWith("data:application/octet-stream;base64,"),Yh=l=>l.startsWith("file://");function Jh(l){if(l==Qp&&at)return new Uint8Array(at);if(pe)return pe(l);throw"both async and sync fetching of the wasm failed"}function Zh(l,m,x){return function(I){if(!at&&(R||j)){if(typeof fetch=="function"&&!Yh(I))return fetch(I,{credentials:"same-origin"}).then(G=>{if(!G.ok)throw`failed to load wasm binary file at '${I}'`;return G.arrayBuffer()}).catch(()=>Jh(I));if(me)return new Promise((G,ge)=>{me(I,We=>G(new Uint8Array(We)),ge)})}return Promise.resolve().then(()=>Jh(I))}(l).then(I=>WebAssembly.instantiate(I,m)).then(x,I=>{kt(`failed to asynchronously prepare wasm: ${I}`),Qn(I)})}function em(){return{a:{O:Bf,Aa:zf,b:Uf,aa:um,B:pm,qa:hm,Y:fm,_:_m,ra:gm,oa:wm,ha:ym,na:bm,L:Mm,Z:vm,W:Tm,pa:xm,X:Em,va:Wf,F:Vf,Q:Gf,P:Hf,E:Xf,u:Qf,q:Yf,G:Jf,A:i_,R:o_,ua:a_,ka:l_,U:u_,ba:d_,H:c_,ja:lh,ta:p_,t:h_,Ba:m_,x:g_,n:w_,l:b_,c:oh,o:M_,j:x_,w:E_,p:P_,f:C_,s:k_,m:S_,e:$_,k:A_,i:I_,h:O_,d:F_,ea:D_,fa:L_,ga:z_,ca:Rm,da:Nm,T:B_,g:R_,D:N_,I:j_,M:U_,y:W_,sa:V_,V:G_,v:Um,z:K_,N:H_,S:q_,za:X_,ya:Q_,la:Gm,ma:Km,$:th,C:Hm,K:qm,ia:Xm,J:Qm,a:jt,xa:eh,wa:Zm,r:Z_}}}var Yp={874308:(l,m,x,I,G)=>{if(u===void 0||!u.Fb)return 1;if((l=zr(Number(l>>>0))).startsWith("./")&&(l=l.substring(2)),!(l=u.Fb.get(l)))return 2;if(m=Number(m>>>0),x=Number(x>>>0),I=Number(I>>>0),m+x>l.byteLength)return 3;try{let ge=l.subarray(m,m+x);switch(G){case 0:n().set(ge,I>>>0);break;case 1:u.dc(I,ge);break;default:return 4}return 0}catch{return 4}},875023:(l,m,x)=>{u.ec(l,n().subarray(m>>>0,m+x>>>0))},875086:()=>u.bc(),875127:l=>{u.Pb(l)},875163:()=>{u.Wb()},875194:()=>{u.Xb()},875223:()=>{u.ac()},875248:l=>u.Vb(l),875281:l=>u.Zb(l),875313:(l,m,x)=>{u.Ob(Number(l),Number(m),Number(x),!0)},875376:(l,m,x)=>{u.Ob(Number(l),Number(m),Number(x))},875433:()=>typeof wasmOffsetConverter<"u",875490:l=>{u.kb("Abs",l,void 0)},875541:l=>{u.kb("Neg",l,void 0)},875592:l=>{u.kb("Floor",l,void 0)},875645:l=>{u.kb("Ceil",l,void 0)},875697:l=>{u.kb("Reciprocal",l,void 0)},875755:l=>{u.kb("Sqrt",l,void 0)},875807:l=>{u.kb("Exp",l,void 0)},875858:l=>{u.kb("Erf",l,void 0)},875909:l=>{u.kb("Sigmoid",l,void 0)},875964:(l,m,x)=>{u.kb("HardSigmoid",l,{alpha:m,beta:x})},876043:l=>{u.kb("Log",l,void 0)},876094:l=>{u.kb("Sin",l,void 0)},876145:l=>{u.kb("Cos",l,void 0)},876196:l=>{u.kb("Tan",l,void 0)},876247:l=>{u.kb("Asin",l,void 0)},876299:l=>{u.kb("Acos",l,void 0)},876351:l=>{u.kb("Atan",l,void 0)},876403:l=>{u.kb("Sinh",l,void 0)},876455:l=>{u.kb("Cosh",l,void 0)},876507:l=>{u.kb("Asinh",l,void 0)},876560:l=>{u.kb("Acosh",l,void 0)},876613:l=>{u.kb("Atanh",l,void 0)},876666:l=>{u.kb("Tanh",l,void 0)},876718:l=>{u.kb("Not",l,void 0)},876769:(l,m,x)=>{u.kb("Clip",l,{min:m,max:x})},876838:l=>{u.kb("Clip",l,void 0)},876890:(l,m)=>{u.kb("Elu",l,{alpha:m})},876948:l=>{u.kb("Gelu",l,void 0)},877e3:l=>{u.kb("Relu",l,void 0)},877052:(l,m)=>{u.kb("LeakyRelu",l,{alpha:m})},877116:(l,m)=>{u.kb("ThresholdedRelu",l,{alpha:m})},877186:(l,m)=>{u.kb("Cast",l,{to:m})},877244:l=>{u.kb("Add",l,void 0)},877295:l=>{u.kb("Sub",l,void 0)},877346:l=>{u.kb("Mul",l,void 0)},877397:l=>{u.kb("Div",l,void 0)},877448:l=>{u.kb("Pow",l,void 0)},877499:l=>{u.kb("Equal",l,void 0)},877552:l=>{u.kb("Greater",l,void 0)},877607:l=>{u.kb("GreaterOrEqual",l,void 0)},877669:l=>{u.kb("Less",l,void 0)},877721:l=>{u.kb("LessOrEqual",l,void 0)},877780:(l,m,x,I,G)=>{u.kb("ReduceMean",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},877955:(l,m,x,I,G)=>{u.kb("ReduceMax",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},878129:(l,m,x,I,G)=>{u.kb("ReduceMin",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},878303:(l,m,x,I,G)=>{u.kb("ReduceProd",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},878478:(l,m,x,I,G)=>{u.kb("ReduceSum",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},878652:(l,m,x,I,G)=>{u.kb("ReduceL1",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},878825:(l,m,x,I,G)=>{u.kb("ReduceL2",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},878998:(l,m,x,I,G)=>{u.kb("ReduceLogSum",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},879175:(l,m,x,I,G)=>{u.kb("ReduceSumSquare",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},879355:(l,m,x,I,G)=>{u.kb("ReduceLogSumExp",l,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},879535:l=>{u.kb("Where",l,void 0)},879588:(l,m,x)=>{u.kb("Transpose",l,{perm:m?Array.from(o().subarray(Number(m)>>>0,Number(x)>>>0)):[]})},879712:(l,m,x,I)=>{u.kb("DepthToSpace",l,{blocksize:m,mode:zr(x),format:I?"NHWC":"NCHW"})},879845:(l,m,x,I)=>{u.kb("DepthToSpace",l,{blocksize:m,mode:zr(x),format:I?"NHWC":"NCHW"})},879978:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re,ur)=>{u.kb("ConvTranspose",l,{format:Mt?"NHWC":"NCHW",autoPad:m,dilations:[x],group:I,kernelShape:[G],pads:[ge,We],strides:[et],wIsConst:()=>!!r()[St>>>0],outputPadding:Wt?Array.from(o().subarray(Number(Wt)>>>0,Number(pr)>>>0)):[],outputShape:br?Array.from(o().subarray(Number(br)>>>0,Number(Re)>>>0)):[],activation:zr(ur)})},880411:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re)=>{u.kb("ConvTranspose",l,{format:et?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(Number(x)>>>0,2+(Number(x)>>>0)>>>0)),group:I,kernelShape:Array.from(o().subarray(Number(G)>>>0,2+(Number(G)>>>0)>>>0)),pads:Array.from(o().subarray(Number(ge)>>>0,4+(Number(ge)>>>0)>>>0)),strides:Array.from(o().subarray(Number(We)>>>0,2+(Number(We)>>>0)>>>0)),wIsConst:()=>!!r()[Mt>>>0],outputPadding:St?Array.from(o().subarray(Number(St)>>>0,Number(Wt)>>>0)):[],outputShape:pr?Array.from(o().subarray(Number(pr)>>>0,Number(br)>>>0)):[],activation:zr(Re)})},881072:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re,ur)=>{u.kb("ConvTranspose",l,{format:Mt?"NHWC":"NCHW",autoPad:m,dilations:[x],group:I,kernelShape:[G],pads:[ge,We],strides:[et],wIsConst:()=>!!r()[St>>>0],outputPadding:Wt?Array.from(o().subarray(Number(Wt)>>>0,Number(pr)>>>0)):[],outputShape:br?Array.from(o().subarray(Number(br)>>>0,Number(Re)>>>0)):[],activation:zr(ur)})},881505:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re)=>{u.kb("ConvTranspose",l,{format:et?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(Number(x)>>>0,2+(Number(x)>>>0)>>>0)),group:I,kernelShape:Array.from(o().subarray(Number(G)>>>0,2+(Number(G)>>>0)>>>0)),pads:Array.from(o().subarray(Number(ge)>>>0,4+(Number(ge)>>>0)>>>0)),strides:Array.from(o().subarray(Number(We)>>>0,2+(Number(We)>>>0)>>>0)),wIsConst:()=>!!r()[Mt>>>0],outputPadding:St?Array.from(o().subarray(Number(St)>>>0,Number(Wt)>>>0)):[],outputShape:pr?Array.from(o().subarray(Number(pr)>>>0,Number(br)>>>0)):[],activation:zr(Re)})},882166:(l,m)=>{u.kb("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},882257:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re)=>{u.kb("AveragePool",l,{format:Re?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:G,dilations:ge?Array.from(o().subarray(Number(ge)>>>0,Number(We)>>>0)):[],kernel_shape:et?Array.from(o().subarray(Number(et)>>>0,Number(Mt)>>>0)):[],pads:St?Array.from(o().subarray(Number(St)>>>0,Number(Wt)>>>0)):[],strides:pr?Array.from(o().subarray(Number(pr)>>>0,Number(br)>>>0)):[]})},882736:(l,m)=>{u.kb("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},882827:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re)=>{u.kb("AveragePool",l,{format:Re?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:G,dilations:ge?Array.from(o().subarray(Number(ge)>>>0,Number(We)>>>0)):[],kernel_shape:et?Array.from(o().subarray(Number(et)>>>0,Number(Mt)>>>0)):[],pads:St?Array.from(o().subarray(Number(St)>>>0,Number(Wt)>>>0)):[],strides:pr?Array.from(o().subarray(Number(pr)>>>0,Number(br)>>>0)):[]})},883306:(l,m)=>{u.kb("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},883393:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re)=>{u.kb("MaxPool",l,{format:Re?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:G,dilations:ge?Array.from(o().subarray(Number(ge)>>>0,Number(We)>>>0)):[],kernel_shape:et?Array.from(o().subarray(Number(et)>>>0,Number(Mt)>>>0)):[],pads:St?Array.from(o().subarray(Number(St)>>>0,Number(Wt)>>>0)):[],strides:pr?Array.from(o().subarray(Number(pr)>>>0,Number(br)>>>0)):[]})},883868:(l,m)=>{u.kb("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},883955:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re)=>{u.kb("MaxPool",l,{format:Re?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:G,dilations:ge?Array.from(o().subarray(Number(ge)>>>0,Number(We)>>>0)):[],kernel_shape:et?Array.from(o().subarray(Number(et)>>>0,Number(Mt)>>>0)):[],pads:St?Array.from(o().subarray(Number(St)>>>0,Number(Wt)>>>0)):[],strides:pr?Array.from(o().subarray(Number(pr)>>>0,Number(br)>>>0)):[]})},884430:(l,m,x,I,G)=>{u.kb("Gemm",l,{alpha:m,beta:x,transA:I,transB:G})},884534:l=>{u.kb("MatMul",l,void 0)},884588:(l,m,x,I)=>{u.kb("ArgMax",l,{keepDims:!!m,selectLastIndex:!!x,axis:I})},884696:(l,m,x,I)=>{u.kb("ArgMin",l,{keepDims:!!m,selectLastIndex:!!x,axis:I})},884804:(l,m)=>{u.kb("Softmax",l,{axis:m})},884867:(l,m)=>{u.kb("Concat",l,{axis:m})},884927:(l,m,x,I,G)=>{u.kb("Split",l,{axis:m,numOutputs:x,splitSizes:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},885083:l=>{u.kb("Expand",l,void 0)},885137:(l,m)=>{u.kb("Gather",l,{axis:Number(m)})},885208:(l,m)=>{u.kb("GatherElements",l,{axis:Number(m)})},885287:(l,m)=>{u.kb("GatherND",l,{batch_dims:Number(m)})},885366:(l,m,x,I,G,ge,We,et,Mt,St,Wt)=>{u.kb("Resize",l,{antialias:m,axes:x?Array.from(o().subarray(Number(x)>>>0,Number(I)>>>0)):[],coordinateTransformMode:zr(G),cubicCoeffA:ge,excludeOutside:We,extrapolationValue:et,keepAspectRatioPolicy:zr(Mt),mode:zr(St),nearestMode:zr(Wt)})},885728:(l,m,x,I,G,ge,We)=>{u.kb("Slice",l,{starts:m?Array.from(o().subarray(Number(m)>>>0,Number(x)>>>0)):[],ends:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[],axes:ge?Array.from(o().subarray(Number(ge)>>>0,Number(We)>>>0)):[]})},885992:l=>{u.kb("Tile",l,void 0)},886044:(l,m,x)=>{u.kb("InstanceNormalization",l,{epsilon:m,format:x?"NHWC":"NCHW"})},886158:(l,m,x)=>{u.kb("InstanceNormalization",l,{epsilon:m,format:x?"NHWC":"NCHW"})},886272:l=>{u.kb("Range",l,void 0)},886325:(l,m)=>{u.kb("Einsum",l,{equation:zr(m)})},886406:(l,m,x,I,G)=>{u.kb("Pad",l,{mode:m,value:x,pads:I?Array.from(o().subarray(Number(I)>>>0,Number(G)>>>0)):[]})},886549:(l,m,x,I,G,ge)=>{u.kb("BatchNormalization",l,{epsilon:m,momentum:x,spatial:!!G,trainingMode:!!I,format:ge?"NHWC":"NCHW"})},886718:(l,m,x,I,G,ge)=>{u.kb("BatchNormalization",l,{epsilon:m,momentum:x,spatial:!!G,trainingMode:!!I,format:ge?"NHWC":"NCHW"})},886887:(l,m,x)=>{u.kb("CumSum",l,{exclusive:Number(m),reverse:Number(x)})},886984:(l,m,x)=>{u.kb("DequantizeLinear",l,{axis:m,blockSize:x})},887074:(l,m,x,I,G)=>{u.kb("GridSample",l,{align_corners:m,mode:zr(x),padding_mode:zr(I),format:G?"NHWC":"NCHW"})},887244:(l,m,x,I,G)=>{u.kb("GridSample",l,{align_corners:m,mode:zr(x),padding_mode:zr(I),format:G?"NHWC":"NCHW"})},887414:(l,m)=>{u.kb("ScatterND",l,{reduction:zr(m)})},887499:(l,m,x,I,G,ge,We,et,Mt)=>{u.kb("Attention",l,{numHeads:m,isUnidirectional:x,maskFilterValue:I,scale:G,doRotary:ge,qkvHiddenSizes:We?Array.from(o().subarray(Number(et)>>>0,Number(et)+We>>>0)):[],pastPresentShareBuffer:!!Mt})},887771:l=>{u.kb("BiasAdd",l,void 0)},887826:l=>{u.kb("BiasSplitGelu",l,void 0)},887887:l=>{u.kb("FastGelu",l,void 0)},887943:(l,m,x,I,G,ge,We,et,Mt,St,Wt,pr,br,Re,ur,Br)=>{u.kb("Conv",l,{format:pr?"NHWC":"NCHW",auto_pad:m,dilations:x?Array.from(o().subarray(Number(x)>>>0,Number(I)>>>0)):[],group:G,kernel_shape:ge?Array.from(o().subarray(Number(ge)>>>0,Number(We)>>>0)):[],pads:et?Array.from(o().subarray(Number(et)>>>0,Number(Mt)>>>0)):[],strides:St?Array.from(o().subarray(Number(St)>>>0,Number(Wt)>>>0)):[],w_is_const:()=>!!r()[Number(br)>>>0],activation:zr(Re),activation_params:ur?Array.from(p().subarray(Number(ur)>>>0,Number(Br)>>>0)):[]})},888527:l=>{u.kb("Gelu",l,void 0)},888579:(l,m,x,I,G,ge,We,et,Mt)=>{u.kb("GroupQueryAttention",l,{numHeads:m,kvNumHeads:x,scale:I,softcap:G,doRotary:ge,rotaryInterleaved:We,smoothSoftmax:et,localWindowSize:Mt})},888796:(l,m,x,I)=>{u.kb("LayerNormalization",l,{axis:m,epsilon:x,simplified:!!I})},888907:(l,m,x,I)=>{u.kb("LayerNormalization",l,{axis:m,epsilon:x,simplified:!!I})},889018:(l,m,x,I,G,ge)=>{u.kb("MatMulNBits",l,{k:m,n:x,accuracyLevel:I,bits:G,blockSize:ge})},889145:(l,m,x,I,G,ge)=>{u.kb("MultiHeadAttention",l,{numHeads:m,isUnidirectional:x,maskFilterValue:I,scale:G,doRotary:ge})},889304:(l,m)=>{u.kb("QuickGelu",l,{alpha:m})},889368:(l,m,x,I,G)=>{u.kb("RotaryEmbedding",l,{interleaved:!!m,numHeads:x,rotaryEmbeddingDim:I,scale:G})},889507:(l,m,x)=>{u.kb("SkipLayerNormalization",l,{epsilon:m,simplified:!!x})},889609:(l,m,x)=>{u.kb("SkipLayerNormalization",l,{epsilon:m,simplified:!!x})},889711:(l,m,x,I)=>{u.kb("GatherBlockQuantized",l,{gatherAxis:m,quantizeAxis:x,blockSize:I})},889832:l=>{u.$b(l)},889866:(l,m)=>u.cc(Number(l),Number(m),u.Gb.hc,u.Gb.errors)};function zf(l,m,x){return Fm(async()=>{await u.Yb(Number(l),Number(m),Number(x))})}function Bf(){return typeof wasmOffsetConverter<"u"}function Jp(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var Zp=l=>{l.terminate(),l.onmessage=()=>{}},tm=l=>{Yn.length==0&&(am(),om(Yn[0]));var m=Yn.pop();if(!m)return 6;Ai.push(m),ln[l.Bb]=m,m.Bb=l.Bb;var x={cmd:"run",start_routine:l.ic,arg:l.Rb,pthread_ptr:l.Bb};return m.postMessage(x,l.nc),0},$i=0,Ir=(l,m,...x)=>{for(var I=2*x.length,G=gh(),ge=_h(8*I),We=ge>>>3,et=0;et<x.length;et++){var Mt=x[et];typeof Mt=="bigint"?(Hr[We+2*et]=1n,Hr[We+2*et+1]=Mt):(Hr[We+2*et]=0n,h()[We+2*et+1>>>0]=Mt)}return l=nf(l,0,I,ge,m),kp(G),l};function eh(l){if(ee)return Ir(0,1,l);if(Ht=l,!(0<$i)){for(var m of Ai)Zp(m);for(m of Yn)Zp(m);Yn=[],Ai=[],ln=[],Ar=!0}Ie(l,new Jp(l))}function rm(l){if(ee)return Ir(1,0,l);th(l)}var th=l=>{if(Ht=l,ee)throw rm(l),"unwind";eh(l)},Yn=[],Ai=[],sm=[],ln={},nm=l=>{var m=l.Bb;delete ln[m],Yn.push(l),Ai.splice(Ai.indexOf(l),1),l.Bb=0,fh(m)};function im(){sm.forEach(l=>l())}var om=l=>new Promise(m=>{l.onmessage=G=>{var ge=(G=G.data).cmd;if(G.targetThread&&G.targetThread!=Ca()){var We=ln[G.targetThread];We?We.postMessage(G,G.transferList):kt(`Internal error! Worker sent a message "${ge}" to target pthread ${G.targetThread}, but that thread no longer exists!`)}else ge==="checkMailbox"?gp():ge==="spawnThread"?tm(G):ge==="cleanupThread"?nm(ln[G.thread]):ge==="killThread"?(G=G.thread,ge=ln[G],delete ln[G],Zp(ge),fh(G),Ai.splice(Ai.indexOf(ge),1),ge.Bb=0):ge==="cancelThread"?ln[G.thread].postMessage({cmd:"cancel"}):ge==="loaded"?(l.loaded=!0,m(l)):ge==="alert"?alert(`Thread ${G.threadId}: ${G.text}`):G.target==="setimmediate"?l.postMessage(G):ge==="callHandler"?u[G.handler](...G.args):ge&&kt(`worker sent an unknown command ${ge}`)},l.onerror=G=>{throw kt(`worker sent an error! ${G.filename}:${G.lineno}: ${G.message}`),G};var x,I=[];for(x of[])u.hasOwnProperty(x)&&I.push(x);l.postMessage({cmd:"load",handlers:I,wasmMemory:jt,wasmModule:Mr})});function am(){var l=new Worker(new URL(self.location.href),{type:"module",workerData:"em-pthread",name:"em-pthread"});Yn.push(l)}var _p=l=>{for(;0<l.length;)l.shift()(u)},Rf=()=>{var l=Ca(),m=d()[l+52>>>2>>>0];l=d()[l+56>>>2>>>0],af(m,m-l),kp(m)},Nf=(l,m)=>{$i=0,l=lf(l,m),0<$i?Ht=l:Cp(l)};class jf{constructor(m){this.Kb=m-24}}function Uf(l,m,x){var I=new jf(l>>>=0);throw m>>>=0,x>>>=0,d()[I.Kb+16>>>2>>>0]=0,d()[I.Kb+4>>>2>>>0]=m,d()[I.Kb+8>>>2>>>0]=x,l}function lm(l,m,x,I){return ee?Ir(2,1,l,m,x,I):um(l,m,x,I)}function um(l,m,x,I){if(l>>>=0,m>>>=0,x>>>=0,I>>>=0,re===void 0)return kt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var G=[];return ee&&G.length===0?lm(l,m,x,I):(l={ic:x,Bb:l,Rb:I,nc:G},ee?(l.Nb="spawnThread",postMessage(l,G),0):tm(l))}var dm=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,cm=(l,m,x)=>{var I=(m>>>=0)+x;for(x=m;l[x]&&!(x>=I);)++x;if(16<x-m&&l.buffer&&dm)return dm.decode(l.buffer instanceof re?l.slice(m,x):l.subarray(m,x));for(I="";m<x;){var G=l[m++];if(128&G){var ge=63&l[m++];if((224&G)==192)I+=String.fromCharCode((31&G)<<6|ge);else{var We=63&l[m++];65536>(G=(240&G)==224?(15&G)<<12|ge<<6|We:(7&G)<<18|ge<<12|We<<6|63&l[m++])?I+=String.fromCharCode(G):(G-=65536,I+=String.fromCharCode(55296|G>>10,56320|1023&G))}}else I+=String.fromCharCode(G)}return I},zr=(l,m)=>(l>>>=0)?cm(n(),l,m):"";function pm(l,m,x){return ee?Ir(3,1,l,m,x):0}function hm(l,m){if(ee)return Ir(4,1,l,m)}var rh=l=>{for(var m=0,x=0;x<l.length;++x){var I=l.charCodeAt(x);127>=I?m++:2047>=I?m+=2:55296<=I&&57343>=I?(m+=4,++x):m+=3}return m},mm=(l,m,x,I)=>{if(!(0<I))return 0;var G=x>>>=0;I=x+I-1;for(var ge=0;ge<l.length;++ge){var We=l.charCodeAt(ge);if(55296<=We&&57343>=We&&(We=65536+((1023&We)<<10)|1023&l.charCodeAt(++ge)),127>=We){if(x>=I)break;m[x++>>>0]=We}else{if(2047>=We){if(x+1>=I)break;m[x++>>>0]=192|We>>6}else{if(65535>=We){if(x+2>=I)break;m[x++>>>0]=224|We>>12}else{if(x+3>=I)break;m[x++>>>0]=240|We>>18,m[x++>>>0]=128|We>>12&63}m[x++>>>0]=128|We>>6&63}m[x++>>>0]=128|63&We}}return m[x>>>0]=0,x-G},Ea=(l,m,x)=>mm(l,n(),m,x);function fm(l,m){if(ee)return Ir(5,1,l,m)}function _m(l,m,x){if(ee)return Ir(6,1,l,m,x)}function gm(l,m,x){return ee?Ir(7,1,l,m,x):0}function wm(l,m){if(ee)return Ir(8,1,l,m)}function ym(l,m,x){if(ee)return Ir(9,1,l,m,x)}function bm(l,m,x,I){if(ee)return Ir(10,1,l,m,x,I)}function Mm(l,m,x,I){if(ee)return Ir(11,1,l,m,x,I)}function vm(l,m,x,I){if(ee)return Ir(12,1,l,m,x,I)}function Tm(l){if(ee)return Ir(13,1,l)}function xm(l,m){if(ee)return Ir(14,1,l,m)}function Em(l,m,x){if(ee)return Ir(15,1,l,m,x)}var Pm,Jn,Wf=()=>{Qn("")},un=l=>{for(var m="";n()[l>>>0];)m+=Pm[n()[l++>>>0]];return m},sh={},nh={};function En(l,m,x={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(I,G,ge={}){var We=G.name;if(!I)throw new Jn(`type "${We}" must have a positive integer typeid pointer`);if(nh.hasOwnProperty(I)){if(ge.Tb)return;throw new Jn(`Cannot register type '${We}' twice`)}nh[I]=G,sh.hasOwnProperty(I)&&(G=sh[I],delete sh[I],G.forEach(et=>et()))}(l,m,x)}var Cm=(l,m,x)=>{switch(m){case 1:return x?I=>r()[I>>>0]:I=>n()[I>>>0];case 2:return x?I=>i()[I>>>1>>>0]:I=>a()[I>>>1>>>0];case 4:return x?I=>o()[I>>>2>>>0]:I=>d()[I>>>2>>>0];case 8:return x?I=>Hr[I>>>3]:I=>an[I>>>3];default:throw new TypeError(`invalid integer width (${m}): ${l}`)}};function Vf(l,m,x){x>>>=0,En(l>>>=0,{name:m=un(m>>>0),fromWireType:I=>I,toWireType:function(I,G){if(typeof G!="bigint"&&typeof G!="number")throw G=G===null?"null":(I=typeof G)=="object"||I==="array"||I==="function"?G.toString():""+G,new TypeError(`Cannot convert "${G}" to ${this.name}`);return typeof G=="number"&&(G=BigInt(G)),G},argPackAdvance:Zn,readValueFromPointer:Cm(m,x,m.indexOf("u")==-1),Eb:null})}var Zn=8;function Gf(l,m,x,I){En(l>>>=0,{name:m=un(m>>>0),fromWireType:function(G){return!!G},toWireType:function(G,ge){return ge?x:I},argPackAdvance:Zn,readValueFromPointer:function(G){return this.fromWireType(n()[G>>>0])},Eb:null})}var ih=[],Pn=[];function oh(l){9<(l>>>=0)&&--Pn[l+1]==0&&(Pn[l]=void 0,ih.push(l))}var Es=l=>{if(!l)throw new Jn("Cannot use deleted val. handle = "+l);return Pn[l]},As=l=>{switch(l){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=ih.pop()||Pn.length;return Pn[m]=l,Pn[m+1]=1,m}};function ah(l){return this.fromWireType(d()[l>>>2>>>0])}var Kf={name:"emscripten::val",fromWireType:l=>{var m=Es(l);return oh(l),m},toWireType:(l,m)=>As(m),argPackAdvance:Zn,readValueFromPointer:ah,Eb:null};function Hf(l){return En(l>>>0,Kf)}var qf=(l,m)=>{switch(m){case 4:return function(x){return this.fromWireType(p()[x>>>2>>>0])};case 8:return function(x){return this.fromWireType(h()[x>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${l}`)}};function Xf(l,m,x){x>>>=0,En(l>>>=0,{name:m=un(m>>>0),fromWireType:I=>I,toWireType:(I,G)=>G,argPackAdvance:Zn,readValueFromPointer:qf(m,x),Eb:null})}function Qf(l,m,x,I,G){if(l>>>=0,x>>>=0,m=un(m>>>0),G===-1&&(G=4294967295),G=et=>et,I===0){var ge=32-8*x;G=et=>et<<ge>>>ge}var We=m.includes("unsigned")?function(et,Mt){return Mt>>>0}:function(et,Mt){return Mt};En(l,{name:m,fromWireType:G,toWireType:We,argPackAdvance:Zn,readValueFromPointer:Cm(m,x,I!==0),Eb:null})}function Yf(l,m,x){function I(ge){var We=d()[ge>>>2>>>0];return ge=d()[ge+4>>>2>>>0],new G(r().buffer,ge,We)}var G=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];En(l>>>=0,{name:x=un(x>>>0),fromWireType:I,argPackAdvance:Zn,readValueFromPointer:I},{Tb:!0})}function Jf(l,m){l>>>=0;var x=(m=un(m>>>0))==="std::string";En(l,{name:m,fromWireType:function(I){var G=d()[I>>>2>>>0],ge=I+4;if(x)for(var We=ge,et=0;et<=G;++et){var Mt=ge+et;if(et==G||n()[Mt>>>0]==0){if(We=zr(We,Mt-We),St===void 0)var St=We;else St+="\0",St+=We;We=Mt+1}}else{for(St=Array(G),et=0;et<G;++et)St[et]=String.fromCharCode(n()[ge+et>>>0]);St=St.join("")}return cn(I),St},toWireType:function(I,G){G instanceof ArrayBuffer&&(G=new Uint8Array(G));var ge=typeof G=="string";if(!(ge||G instanceof Uint8Array||G instanceof Uint8ClampedArray||G instanceof Int8Array))throw new Jn("Cannot pass non-string to std::string");var We=x&&ge?rh(G):G.length,et=Pp(4+We+1),Mt=et+4;if(d()[et>>>2>>>0]=We,x&&ge)Ea(G,Mt,We+1);else if(ge)for(ge=0;ge<We;++ge){var St=G.charCodeAt(ge);if(255<St)throw cn(Mt),new Jn("String has UTF-16 code units that do not fit in 8 bits");n()[Mt+ge>>>0]=St}else for(ge=0;ge<We;++ge)n()[Mt+ge>>>0]=G[ge];return I!==null&&I.push(cn,et),et},argPackAdvance:Zn,readValueFromPointer:ah,Eb(I){cn(I)}})}var km=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Zf=(l,m)=>{for(var x=l>>1,I=x+m/2;!(x>=I)&&a()[x>>>0];)++x;if(32<(x<<=1)-l&&km)return km.decode(n().slice(l,x));for(x="",I=0;!(I>=m/2);++I){var G=i()[l+2*I>>>1>>>0];if(G==0)break;x+=String.fromCharCode(G)}return x},e_=(l,m,x)=>{if(x??(x=2147483647),2>x)return 0;var I=m;x=(x-=2)<2*l.length?x/2:l.length;for(var G=0;G<x;++G){var ge=l.charCodeAt(G);i()[m>>>1>>>0]=ge,m+=2}return i()[m>>>1>>>0]=0,m-I},t_=l=>2*l.length,r_=(l,m)=>{for(var x=0,I="";!(x>=m/4);){var G=o()[l+4*x>>>2>>>0];if(G==0)break;++x,65536<=G?(G-=65536,I+=String.fromCharCode(55296|G>>10,56320|1023&G)):I+=String.fromCharCode(G)}return I},s_=(l,m,x)=>{if(m>>>=0,x??(x=2147483647),4>x)return 0;var I=m;x=I+x-4;for(var G=0;G<l.length;++G){var ge=l.charCodeAt(G);if(55296<=ge&&57343>=ge&&(ge=65536+((1023&ge)<<10)|1023&l.charCodeAt(++G)),o()[m>>>2>>>0]=ge,(m+=4)+4>x)break}return o()[m>>>2>>>0]=0,m-I},n_=l=>{for(var m=0,x=0;x<l.length;++x){var I=l.charCodeAt(x);55296<=I&&57343>=I&&++x,m+=4}return m};function i_(l,m,x){if(l>>>=0,m>>>=0,x=un(x>>>=0),m===2)var I=Zf,G=e_,ge=t_,We=et=>a()[et>>>1>>>0];else m===4&&(I=r_,G=s_,ge=n_,We=et=>d()[et>>>2>>>0]);En(l,{name:x,fromWireType:et=>{for(var Mt,St=d()[et>>>2>>>0],Wt=et+4,pr=0;pr<=St;++pr){var br=et+4+pr*m;pr!=St&&We(br)!=0||(Wt=I(Wt,br-Wt),Mt===void 0?Mt=Wt:(Mt+="\0",Mt+=Wt),Wt=br+m)}return cn(et),Mt},toWireType:(et,Mt)=>{if(typeof Mt!="string")throw new Jn(`Cannot pass non-string to C++ string type ${x}`);var St=ge(Mt),Wt=Pp(4+St+m);return d()[Wt>>>2>>>0]=St/m,G(Mt,Wt+4,St+m),et!==null&&et.push(cn,Wt),Wt},argPackAdvance:Zn,readValueFromPointer:ah,Eb(et){cn(et)}})}function o_(l,m){En(l>>>=0,{Ub:!0,name:m=un(m>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var a_=()=>1;function l_(l){mh(l>>>0,!j,1,!R,131072,!1),im()}var Sm=l=>{if(!Ar)try{if(l(),!(0<$i))try{ee?Cp(Ht):th(Ht)}catch(m){m instanceof Jp||m=="unwind"||Ie(1,m)}}catch(m){m instanceof Jp||m=="unwind"||Ie(1,m)}};function lh(l){l>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(o(),l>>>2,l).value.then(gp),l+=128,Atomics.store(o(),l>>>2,1))}var gp=()=>{var l=Ca();l&&(lh(l),Sm(of))};function u_(l,m){(l>>>=0)==m>>>0?setTimeout(gp):ee?postMessage({targetThread:l,cmd:"checkMailbox"}):(l=ln[l])&&l.postMessage({cmd:"checkMailbox"})}var uh=[];function d_(l,m,x,I,G){for(m>>>=0,I/=2,uh.length=I,x=G>>>0>>>3,G=0;G<I;G++)uh[G]=Hr[x+2*G]?Hr[x+2*G+1]:h()[x+2*G+1>>>0];return(m?Yp[m]:eg[l])(...uh)}function c_(l){l>>>=0,ee?postMessage({cmd:"cleanupThread",thread:l}):nm(ln[l])}function p_(l){}var wp=(l,m)=>{var x=nh[l];if(x===void 0)throw l=tf(l),x=un(l),cn(l),new Jn(`${m} has unknown type ${x}`);return x},$m=(l,m,x)=>{var I=[];return l=l.toWireType(I,x),I.length&&(d()[m>>>2>>>0]=As(I)),l};function h_(l,m,x){return m>>>=0,x>>>=0,l=Es(l>>>0),m=wp(m,"emval::as"),$m(m,x,l)}function m_(l,m){return m>>>=0,l=Es(l>>>0),(m=wp(m,"emval::as")).toWireType(null,l)}var yp=l=>{try{l()}catch(m){Qn(m)}},ei=0,dn=null,Am=0,bp=[],Im={},Om={},f_=0,dh=null,__=[];function Fm(l){return function(m){if(!Ar){if(ei===0){var x=!1,I=!1;m((G=0)=>{if(!Ar&&(Am=G,x=!0,I)){ei=2,yp(()=>cf(dn)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),G=!1;try{var ge=function(){var Mt=o()[dn+8>>>2>>>0];return Mt=Nt[Om[Mt]],--$i,Mt()}()}catch(Mt){ge=Mt,G=!0}var We=!1;if(!dn){var et=dh;et&&(dh=null,(G?et.reject:et.resolve)(ge),We=!0)}if(G&&!We)throw ge}}),I=!0,x||(ei=1,dn=function(){var G=Pp(65548),ge=G+12;d()[G>>>2>>>0]=ge,d()[G+4>>>2>>>0]=ge+65536,ge=bp[0];var We=Im[ge];return We===void 0&&(We=f_++,Im[ge]=We,Om[We]=ge),ge=We,o()[G+8>>>2>>>0]=ge,G}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),yp(()=>uf(dn)))}else ei===2?(ei=0,yp(pf),cn(dn),dn=null,__.forEach(Sm)):Qn(`invalid state: ${ei}`);return Am}}(m=>{l().then(m)})}function g_(l){return l>>>=0,Fm(()=>(l=Es(l)).then(As))}var Mp=[];function w_(l,m,x,I){return x>>>=0,I>>>=0,(l=Mp[l>>>0])(null,m=Es(m>>>0),x,I)}var y_={},vp=l=>{var m=y_[l];return m===void 0?un(l):m};function b_(l,m,x,I,G){return x>>>=0,I>>>=0,G>>>=0,(l=Mp[l>>>0])(m=Es(m>>>0),m[x=vp(x)],I,G)}var Dm=()=>typeof globalThis=="object"?globalThis:Function("return this")();function M_(l){return(l>>>=0)==0?As(Dm()):(l=vp(l),As(Dm()[l]))}var v_=l=>{var m=Mp.length;return Mp.push(l),m},T_=(l,m)=>{for(var x=Array(l),I=0;I<l;++I)x[I]=wp(d()[m+4*I>>>2>>>0],"parameter "+I);return x},Lm=(l,m)=>Object.defineProperty(m,"name",{value:l});function x_(l,m,x){var I=(m=T_(l,m>>>0)).shift();l--;var G=`return function (obj, func, destructorsRef, args) {
`,ge=0,We=[];x===0&&We.push("obj");for(var et=["retType"],Mt=[I],St=0;St<l;++St)We.push("arg"+St),et.push("argType"+St),Mt.push(m[St]),G+=`  var arg${St} = argType${St}.readValueFromPointer(args${ge?"+"+ge:""});
`,ge+=m[St].argPackAdvance;return G+=`  var rv = ${x===1?"new func":"func.call"}(${We.join(", ")});
`,I.Ub||(et.push("emval_returnValue"),Mt.push($m),G+=`  return emval_returnValue(retType, destructorsRef, rv);
`),et.push(G+`};
`),l=function(Wt){var pr=Function;if(!(pr instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof pr} which is not a function`);var br=Lm(pr.name||"unknownFunctionName",function(){});return br.prototype=pr.prototype,br=new br,(Wt=pr.apply(br,Wt))instanceof Object?Wt:br}(et)(...Mt),x=`methodCaller<(${m.map(Wt=>Wt.name).join(", ")}) => ${I.name}>`,v_(Lm(x,l))}function E_(l){return l=vp(l>>>0),As(u[l])}function P_(l,m){return m>>>=0,l=Es(l>>>0),m=Es(m),As(l[m])}function C_(l){9<(l>>>=0)&&(Pn[l+1]+=1)}function k_(){return As([])}function S_(l){l=Es(l>>>0);for(var m=Array(l.length),x=0;x<l.length;x++)m[x]=l[x];return As(m)}function $_(l){return As(vp(l>>>0))}function A_(){return As({})}function I_(l){for(var m=Es(l>>>=0);m.length;){var x=m.pop();m.pop()(x)}oh(l)}function O_(l,m,x){m>>>=0,x>>>=0,l=Es(l>>>0),m=Es(m),x=Es(x),l[m]=x}function F_(l,m){return m>>>=0,l=(l=wp(l>>>0,"_emval_take_value")).readValueFromPointer(m),As(l)}function D_(l,m){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),m>>>=0,l=new Date(1e3*l),o()[m>>>2>>>0]=l.getUTCSeconds(),o()[m+4>>>2>>>0]=l.getUTCMinutes(),o()[m+8>>>2>>>0]=l.getUTCHours(),o()[m+12>>>2>>>0]=l.getUTCDate(),o()[m+16>>>2>>>0]=l.getUTCMonth(),o()[m+20>>>2>>>0]=l.getUTCFullYear()-1900,o()[m+24>>>2>>>0]=l.getUTCDay(),l=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[m+28>>>2>>>0]=l}var Pa=l=>l%4==0&&(l%100!=0||l%400==0),zm=[0,31,60,91,121,152,182,213,244,274,305,335],Bm=[0,31,59,90,120,151,181,212,243,273,304,334];function L_(l,m){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),m>>>=0,l=new Date(1e3*l),o()[m>>>2>>>0]=l.getSeconds(),o()[m+4>>>2>>>0]=l.getMinutes(),o()[m+8>>>2>>>0]=l.getHours(),o()[m+12>>>2>>>0]=l.getDate(),o()[m+16>>>2>>>0]=l.getMonth(),o()[m+20>>>2>>>0]=l.getFullYear()-1900,o()[m+24>>>2>>>0]=l.getDay();var x=(Pa(l.getFullYear())?zm:Bm)[l.getMonth()]+l.getDate()-1|0;o()[m+28>>>2>>>0]=x,o()[m+36>>>2>>>0]=-60*l.getTimezoneOffset(),x=new Date(l.getFullYear(),6,1).getTimezoneOffset();var I=new Date(l.getFullYear(),0,1).getTimezoneOffset();l=0|(x!=I&&l.getTimezoneOffset()==Math.min(I,x)),o()[m+32>>>2>>>0]=l}function z_(l){l>>>=0;var m=new Date(o()[l+20>>>2>>>0]+1900,o()[l+16>>>2>>>0],o()[l+12>>>2>>>0],o()[l+8>>>2>>>0],o()[l+4>>>2>>>0],o()[l>>>2>>>0],0),x=o()[l+32>>>2>>>0],I=m.getTimezoneOffset(),G=new Date(m.getFullYear(),6,1).getTimezoneOffset(),ge=new Date(m.getFullYear(),0,1).getTimezoneOffset(),We=Math.min(ge,G);return 0>x?o()[l+32>>>2>>>0]=+(G!=ge&&We==I):0<x!=(We==I)&&(G=Math.max(ge,G),m.setTime(m.getTime()+6e4*((0<x?We:G)-I))),o()[l+24>>>2>>>0]=m.getDay(),x=(Pa(m.getFullYear())?zm:Bm)[m.getMonth()]+m.getDate()-1|0,o()[l+28>>>2>>>0]=x,o()[l>>>2>>>0]=m.getSeconds(),o()[l+4>>>2>>>0]=m.getMinutes(),o()[l+8>>>2>>>0]=m.getHours(),o()[l+12>>>2>>>0]=m.getDate(),o()[l+16>>>2>>>0]=m.getMonth(),o()[l+20>>>2>>>0]=m.getYear(),l=m.getTime(),BigInt(isNaN(l)?-1:l/1e3)}function Rm(l,m,x,I,G,ge,We){return ee?Ir(16,1,l,m,x,I,G,ge,We):-52}function Nm(l,m,x,I,G,ge){if(ee)return Ir(17,1,l,m,x,I,G,ge)}function B_(l,m,x,I){l>>>=0,m>>>=0,x>>>=0,I>>>=0;var G=new Date().getFullYear(),ge=new Date(G,0,1),We=new Date(G,6,1);G=ge.getTimezoneOffset();var et=We.getTimezoneOffset(),Mt=Math.max(G,et);d()[l>>>2>>>0]=60*Mt,o()[m>>>2>>>0]=+(G!=et),ge=(l=St=>St.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(ge),We=l(We),et<G?(Ea(ge,x,17),Ea(We,I,17)):(Ea(ge,I,17),Ea(We,x,17))}var ch=[],jm=(l,m)=>{ch.length=0;for(var x;x=n()[l++>>>0];){var I=x!=105;m+=(I&=x!=112)&&m%8?4:0,ch.push(x==112?d()[m>>>2>>>0]:x==106?Hr[m>>>3]:x==105?o()[m>>>2>>>0]:h()[m>>>3>>>0]),m+=I?8:4}return ch};function R_(l,m,x){return l>>>=0,m=jm(m>>>0,x>>>0),Yp[l](...m)}function N_(l,m,x){return l>>>=0,m=jm(m>>>0,x>>>0),Yp[l](...m)}var j_=()=>{},U_=()=>Date.now();function W_(l,m){return kt(zr(l>>>0,m>>>0))}var Um,V_=()=>{throw $i+=1,"unwind"};function G_(){return 4294901760}Um=()=>performance.timeOrigin+performance.now();var K_=()=>navigator.hardwareConcurrency;function H_(){return Qn("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function q_(l){l>>>=0;var m=n().length;if(l<=m||4294901760<l)return!1;for(var x=1;4>=x;x*=2){var I=m*(1+.2/x);I=Math.min(I,l+100663296);var G=Math;I=Math.max(l,I);e:{G=(G.min.call(G,4294901760,I+(65536-I%65536)%65536)-jt.buffer.byteLength+65535)/65536;try{jt.grow(G),Tr();var ge=1;break e}catch{}ge=void 0}if(ge)return!0}return!1}var Tp=()=>(Qn("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Mc={},Wm=l=>{l.forEach(m=>{Tp()})};function X_(){var l=Error().stack.toString().split(`
`);return l[0]=="Error"&&l.shift(),Wm(l),Mc.Qb=Tp(),Mc.fc=l,Mc.Qb}function Q_(l,m,x){if(l>>>=0,m>>>=0,Mc.Qb==l)var I=Mc.fc;else(I=Error().stack.toString().split(`
`))[0]=="Error"&&I.shift(),Wm(I);for(var G=3;I[G]&&Tp()!=l;)++G;for(l=0;l<x&&I[l+G];++l)o()[m+4*l>>>2>>>0]=Tp();return l}var ph,hh={},Vm=()=>{if(!ph){var l,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:$e};for(l in hh)hh[l]===void 0?delete m[l]:m[l]=hh[l];var x=[];for(l in m)x.push(`${l}=${m[l]}`);ph=x}return ph};function Gm(l,m){if(ee)return Ir(18,1,l,m);l>>>=0,m>>>=0;var x=0;return Vm().forEach((I,G)=>{var ge=m+x;for(G=d()[l+4*G>>>2>>>0]=ge,ge=0;ge<I.length;++ge)r()[G++>>>0]=I.charCodeAt(ge);r()[G>>>0]=0,x+=I.length+1}),0}function Km(l,m){if(ee)return Ir(19,1,l,m);l>>>=0,m>>>=0;var x=Vm();d()[l>>>2>>>0]=x.length;var I=0;return x.forEach(G=>I+=G.length+1),d()[m>>>2>>>0]=I,0}function Hm(l){return ee?Ir(20,1,l):52}function qm(l,m,x,I){return ee?Ir(21,1,l,m,x,I):52}function Xm(l,m,x,I){return ee?Ir(22,1,l,m,x,I):70}var Y_=[null,[],[]];function Qm(l,m,x,I){if(ee)return Ir(23,1,l,m,x,I);m>>>=0,x>>>=0,I>>>=0;for(var G=0,ge=0;ge<x;ge++){var We=d()[m>>>2>>>0],et=d()[m+4>>>2>>>0];m+=8;for(var Mt=0;Mt<et;Mt++){var St=n()[We+Mt>>>0],Wt=Y_[l];St===0||St===10?((l===1?Yt:kt)(cm(Wt,0)),Wt.length=0):Wt.push(St)}G+=et}return d()[I>>>2>>>0]=G,0}var Ym=[31,29,31,30,31,30,31,31,30,31,30,31],Jm=[31,28,31,30,31,30,31,31,30,31,30,31],J_=(l,m)=>{r().set(l,m>>>0)};function Zm(l,m,x,I){function G(Re,ur,Br){for(Re=typeof Re=="number"?Re.toString():Re||"";Re.length<ur;)Re=Br[0]+Re;return Re}function ge(Re,ur){return G(Re,ur,"0")}function We(Re,ur){function Br(mf){return 0>mf?-1:0<mf?1:0}var Ii;return(Ii=Br(Re.getFullYear()-ur.getFullYear()))===0&&(Ii=Br(Re.getMonth()-ur.getMonth()))===0&&(Ii=Br(Re.getDate()-ur.getDate())),Ii}function et(Re){switch(Re.getDay()){case 0:return new Date(Re.getFullYear()-1,11,29);case 1:return Re;case 2:return new Date(Re.getFullYear(),0,3);case 3:return new Date(Re.getFullYear(),0,2);case 4:return new Date(Re.getFullYear(),0,1);case 5:return new Date(Re.getFullYear()-1,11,31);case 6:return new Date(Re.getFullYear()-1,11,30)}}function Mt(Re){var ur=Re.Cb;for(Re=new Date(new Date(Re.Db+1900,0,1).getTime());0<ur;){var Br=Re.getMonth(),Ii=(Pa(Re.getFullYear())?Ym:Jm)[Br];if(!(ur>Ii-Re.getDate())){Re.setDate(Re.getDate()+ur);break}ur-=Ii-Re.getDate()+1,Re.setDate(1),11>Br?Re.setMonth(Br+1):(Re.setMonth(0),Re.setFullYear(Re.getFullYear()+1))}return Br=new Date(Re.getFullYear()+1,0,4),ur=et(new Date(Re.getFullYear(),0,4)),Br=et(Br),0>=We(ur,Re)?0>=We(Br,Re)?Re.getFullYear()+1:Re.getFullYear():Re.getFullYear()-1}l>>>=0,m>>>=0,x>>>=0,I>>>=0;var St=d()[I+40>>>2>>>0];for(var Wt in I={lc:o()[I>>>2>>>0],kc:o()[I+4>>>2>>>0],Ib:o()[I+8>>>2>>>0],Mb:o()[I+12>>>2>>>0],Jb:o()[I+16>>>2>>>0],Db:o()[I+20>>>2>>>0],vb:o()[I+24>>>2>>>0],Cb:o()[I+28>>>2>>>0],sc:o()[I+32>>>2>>>0],jc:o()[I+36>>>2>>>0],mc:St?zr(St):""},x=zr(x),St={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})x=x.replace(new RegExp(Wt,"g"),St[Wt]);var pr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),br="January February March April May June July August September October November December".split(" ");for(Wt in St={"%a":Re=>pr[Re.vb].substring(0,3),"%A":Re=>pr[Re.vb],"%b":Re=>br[Re.Jb].substring(0,3),"%B":Re=>br[Re.Jb],"%C":Re=>ge((Re.Db+1900)/100|0,2),"%d":Re=>ge(Re.Mb,2),"%e":Re=>G(Re.Mb,2," "),"%g":Re=>Mt(Re).toString().substring(2),"%G":Mt,"%H":Re=>ge(Re.Ib,2),"%I":Re=>((Re=Re.Ib)==0?Re=12:12<Re&&(Re-=12),ge(Re,2)),"%j":Re=>{for(var ur=0,Br=0;Br<=Re.Jb-1;ur+=(Pa(Re.Db+1900)?Ym:Jm)[Br++]);return ge(Re.Mb+ur,3)},"%m":Re=>ge(Re.Jb+1,2),"%M":Re=>ge(Re.kc,2),"%n":()=>`
`,"%p":Re=>0<=Re.Ib&&12>Re.Ib?"AM":"PM","%S":Re=>ge(Re.lc,2),"%t":()=>"	","%u":Re=>Re.vb||7,"%U":Re=>ge(Math.floor((Re.Cb+7-Re.vb)/7),2),"%V":Re=>{var ur=Math.floor((Re.Cb+7-(Re.vb+6)%7)/7);if(2>=(Re.vb+371-Re.Cb-2)%7&&ur++,ur)ur==53&&((Br=(Re.vb+371-Re.Cb)%7)==4||Br==3&&Pa(Re.Db)||(ur=1));else{ur=52;var Br=(Re.vb+7-Re.Cb-1)%7;(Br==4||Br==5&&Pa(Re.Db%400-1))&&ur++}return ge(ur,2)},"%w":Re=>Re.vb,"%W":Re=>ge(Math.floor((Re.Cb+7-(Re.vb+6)%7)/7),2),"%y":Re=>(Re.Db+1900).toString().substring(2),"%Y":Re=>Re.Db+1900,"%z":Re=>{var ur=0<=(Re=Re.jc);return Re=Math.abs(Re)/60,(ur?"+":"-")+("0000"+(Re/60*100+Re%60)).slice(-4)},"%Z":Re=>Re.mc,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0"),St)x.includes(Wt)&&(x=x.replace(new RegExp(Wt,"g"),St[Wt](I)));return Wt=function(Re){var ur=Array(rh(Re)+1);return mm(Re,ur,0,ur.length),ur}(x=x.replace(/\0\0/g,"%")),Wt.length>m?0:(J_(Wt,l),Wt.length-1)}function Z_(l,m,x,I){return Zm(l>>>0,m>>>0,x>>>0,I>>>0)}ee||function(){for(var l=u.numThreads-1;l--;)am();Xn.unshift(()=>{yc++,function(m){ee?m():Promise.all(Yn.map(om)).then(m)}(()=>Xh())})}();for(var ef=Array(256),xp=0;256>xp;++xp)ef[xp]=String.fromCharCode(xp);Pm=ef,Jn=u.BindingError=class extends Error{constructor(l){super(l),this.name="BindingError"}},u.InternalError=class extends Error{constructor(l){super(l),this.name="InternalError"}},Pn.push(0,1,void 0,1,null,1,!0,1,!1,1),u.count_emval_handles=()=>Pn.length/2-5-ih.length;var eg=[eh,rm,lm,pm,hm,fm,_m,gm,wm,ym,bm,Mm,vm,Tm,xm,Em,Rm,Nm,Gm,Km,Hm,qm,Xm,Qm],Nt=function(){function l(x,I){return Nt=x.exports,Nt=function(){var G=Nt,ge={};for(let[We,et]of Object.entries(G))ge[We]=typeof et=="function"?(...Mt)=>{bp.push(We);try{return et(...Mt)}finally{Ar||(bp.pop(),dn&&ei===1&&bp.length===0&&(ei=0,$i+=1,yp(df),typeof Fibers<"u"&&Fibers.tc()))}}:et;return ge}(),Nt=function(){var G=Nt,ge=et=>Mt=>et(Mt)>>>0,We=et=>()=>et()>>>0;return(G=Object.assign({},G)).Da=ge(G.Da),G.gb=We(G.gb),G.ib=ge(G.ib),G.emscripten_main_runtime_thread_id=We(G.emscripten_main_runtime_thread_id),G.tb=ge(G.tb),G.ub=We(G.ub),G}(),sm.push(Nt.jb),wc.unshift(Nt.Ca),Mr=I,Xh(),Nt}var m=em();if(yc++,u.instantiateWasm)try{return u.instantiateWasm(m,l)}catch(x){kt(`Module.instantiateWasm callback failed with error: ${x}`),k(x)}return Qp||(Qp=u.locateFile?Qh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":u.locateFile?u.locateFile("ort-wasm-simd-threaded.jsep.wasm",Ue):Ue+"ort-wasm-simd-threaded.jsep.wasm":new URL(s("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),s.b).href),function(x,I){var G=Qp;return at||typeof WebAssembly.instantiateStreaming!="function"||Qh(G)||Yh(G)||typeof fetch!="function"?Zh(G,x,I):fetch(G,{credentials:"same-origin"}).then(ge=>WebAssembly.instantiateStreaming(ge,x).then(I,function(We){return kt(`wasm streaming compile failed: ${We}`),kt("falling back to ArrayBuffer instantiation"),Zh(G,x,I)}))}(m,function(x){l(x.instance,x.module)}).catch(k),{}}(),tf=l=>(tf=Nt.Da)(l),rf=()=>(rf=Nt.Ea)();u._OrtInit=(l,m)=>(u._OrtInit=Nt.Fa)(l,m),u._OrtGetLastError=(l,m)=>(u._OrtGetLastError=Nt.Ga)(l,m),u._OrtCreateSessionOptions=(l,m,x,I,G,ge,We,et,Mt,St)=>(u._OrtCreateSessionOptions=Nt.Ha)(l,m,x,I,G,ge,We,et,Mt,St),u._OrtAppendExecutionProvider=(l,m)=>(u._OrtAppendExecutionProvider=Nt.Ia)(l,m),u._OrtAddFreeDimensionOverride=(l,m,x)=>(u._OrtAddFreeDimensionOverride=Nt.Ja)(l,m,x),u._OrtAddSessionConfigEntry=(l,m,x)=>(u._OrtAddSessionConfigEntry=Nt.Ka)(l,m,x),u._OrtReleaseSessionOptions=l=>(u._OrtReleaseSessionOptions=Nt.La)(l),u._OrtCreateSession=(l,m,x)=>(u._OrtCreateSession=Nt.Ma)(l,m,x),u._OrtReleaseSession=l=>(u._OrtReleaseSession=Nt.Na)(l),u._OrtGetInputOutputCount=(l,m,x)=>(u._OrtGetInputOutputCount=Nt.Oa)(l,m,x),u._OrtGetInputName=(l,m)=>(u._OrtGetInputName=Nt.Pa)(l,m),u._OrtGetOutputName=(l,m)=>(u._OrtGetOutputName=Nt.Qa)(l,m),u._OrtFree=l=>(u._OrtFree=Nt.Ra)(l),u._OrtCreateTensor=(l,m,x,I,G,ge)=>(u._OrtCreateTensor=Nt.Sa)(l,m,x,I,G,ge),u._OrtGetTensorData=(l,m,x,I,G)=>(u._OrtGetTensorData=Nt.Ta)(l,m,x,I,G),u._OrtReleaseTensor=l=>(u._OrtReleaseTensor=Nt.Ua)(l),u._OrtCreateRunOptions=(l,m,x,I)=>(u._OrtCreateRunOptions=Nt.Va)(l,m,x,I),u._OrtAddRunConfigEntry=(l,m,x)=>(u._OrtAddRunConfigEntry=Nt.Wa)(l,m,x),u._OrtReleaseRunOptions=l=>(u._OrtReleaseRunOptions=Nt.Xa)(l),u._OrtCreateBinding=l=>(u._OrtCreateBinding=Nt.Ya)(l),u._OrtBindInput=(l,m,x)=>(u._OrtBindInput=Nt.Za)(l,m,x),u._OrtBindOutput=(l,m,x,I)=>(u._OrtBindOutput=Nt._a)(l,m,x,I),u._OrtClearBoundOutputs=l=>(u._OrtClearBoundOutputs=Nt.$a)(l),u._OrtReleaseBinding=l=>(u._OrtReleaseBinding=Nt.ab)(l),u._OrtRunWithBinding=(l,m,x,I,G)=>(u._OrtRunWithBinding=Nt.bb)(l,m,x,I,G),u._OrtRun=(l,m,x,I,G,ge,We,et)=>(u._OrtRun=Nt.cb)(l,m,x,I,G,ge,We,et),u._OrtEndProfiling=l=>(u._OrtEndProfiling=Nt.db)(l),u._JsepOutput=(l,m,x)=>(u._JsepOutput=Nt.eb)(l,m,x),u._JsepGetNodeName=l=>(u._JsepGetNodeName=Nt.fb)(l);var Ep,Ca=()=>(Ca=Nt.gb)(),cn=u._free=l=>(cn=u._free=Nt.hb)(l),Pp=u._malloc=l=>(Pp=u._malloc=Nt.ib)(l),mh=(l,m,x,I,G,ge)=>(mh=Nt.lb)(l,m,x,I,G,ge),sf=()=>(sf=Nt.mb)(),nf=(l,m,x,I,G)=>(nf=Nt.nb)(l,m,x,I,G),fh=l=>(fh=Nt.ob)(l),Cp=l=>(Cp=Nt.pb)(l),of=()=>(of=Nt.qb)(),af=(l,m)=>(af=Nt.rb)(l,m),kp=l=>(kp=Nt.sb)(l),_h=l=>(_h=Nt.tb)(l),gh=()=>(gh=Nt.ub)(),lf=u.dynCall_ii=(l,m)=>(lf=u.dynCall_ii=Nt.wb)(l,m),uf=l=>(uf=Nt.xb)(l),df=()=>(df=Nt.yb)(),cf=l=>(cf=Nt.zb)(l),pf=()=>(pf=Nt.Ab)();function hf(){0<yc||(ee?(C(u),ee||_p(wc),startWorker(u)):(_p(Xn),0<yc||Ep||(Ep=!0,u.calledRun=!0,Ar||(ee||_p(wc),C(u),ee||_p(Xp)))))}return u.___start_em_js=889994,u.___stop_em_js=890240,u.stackSave=()=>gh(),u.stackRestore=l=>kp(l),u.stackAlloc=l=>_h(l),u.setValue=function(l,m,x="i8"){switch(x.endsWith("*")&&(x="*"),x){case"i1":case"i8":r()[l>>>0]=m;break;case"i16":i()[l>>>1>>>0]=m;break;case"i32":o()[l>>>2>>>0]=m;break;case"i64":Hr[l>>>3]=BigInt(m);break;case"float":p()[l>>>2>>>0]=m;break;case"double":h()[l>>>3>>>0]=m;break;case"*":d()[l>>>2>>>0]=m;break;default:Qn(`invalid type for setValue: ${x}`)}},u.getValue=function(l,m="i8"){switch(m.endsWith("*")&&(m="*"),m){case"i1":case"i8":return r()[l>>>0];case"i16":return i()[l>>>1>>>0];case"i32":return o()[l>>>2>>>0];case"i64":return Hr[l>>>3];case"float":return p()[l>>>2>>>0];case"double":return h()[l>>>3>>>0];case"*":return d()[l>>>2>>>0];default:Qn(`invalid type for getValue: ${m}`)}},u.UTF8ToString=zr,u.stringToUTF8=Ea,u.lengthBytesUTF8=rh,bc=function l(){Ep||hf(),Ep||(bc=l)},hf(),u.PTR_SIZE=4,B}),Cr=Or,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&Or()}),is,Ws,Is,mn,Lt,Vs,Ps,Os,Cs=w(()=>{var e,t;rt(),is=self.location.href??(typeof document<"u"?(e=document.currentScript)==null?void 0:e.src:typeof self<"u"?(t=self.location)==null?void 0:t.href:void 0),Ws=typeof location>"u"?void 0:location.origin,Is=(r,n)=>{try{let i=n??is;return(i?new URL(r,i):new URL(r)).origin===Ws}catch{return!1}},mn=async r=>{let n=await(await fetch(r,{credentials:"same-origin"})).blob();return URL.createObjectURL(n)},Lt=(At(),b(ct)).default,Vs=async()=>{if(!is)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Is(is))return[void 0,Lt()];let r=await mn(is);return[r,Lt(r)]},Ps=(Xr(),b(sr)).default,Os=async(r,n,i)=>[void 0,Ps]}),Fs,Zr,us,ks,Gs,os,ot,dt,It=w(()=>{Cs(),Zr=!1,us=!1,ks=!1,Gs=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},os=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ot=async e=>{if(Zr)return Promise.resolve();if(us)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(ks)throw new Error("previous call to 'initializeWebAssembly()' failed.");us=!0;let t=e.initTimeout,r=e.numThreads;if(!os())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=Gs();r>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let i=e.wasmPaths,a=typeof i=="string"?i:void 0,o=i==null?void 0:i.mjs,d=(o==null?void 0:o.href)??o,p=i==null?void 0:i.wasm,h=(p==null?void 0:p.href)??p,C=e.wasmBinary,[k,u]=await Os(d,a,r>1),B=!1,R=[];if(t>0&&R.push(new Promise(j=>{setTimeout(()=>{B=!0,j()},t)})),R.push(new Promise((j,ee)=>{let re={numThreads:r};C?re.wasmBinary=C:(h||a)&&(re.locateFile=(X,me)=>h??(a??me)+X),u(re).then(X=>{us=!1,Zr=!0,Fs=X,j(),k&&URL.revokeObjectURL(k)},X=>{us=!1,ks=!0,ee(X)})})),await Promise.race(R),B)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},dt=()=>{if(Zr&&Fs)return Fs;throw new Error("WebAssembly is not initialized yet.")}}),dr,fs,rr,_s=w(()=>{It(),dr=(e,t)=>{let r=dt(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},fs=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,a])=>{let o=t?t+i:i;if(typeof a=="object")fs(a,o+".",r,n);else if(typeof a=="string"||typeof a=="number")n(o,a.toString());else if(typeof a=="boolean")n(o,a?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof a}`)})},rr=e=>{let t=dt(),r=t.stackSave();try{let n=t.PTR_SIZE,i=t.stackAlloc(2*n);t._OrtGetLastError(i,i+n);let a=Number(t.getValue(i,n===4?"i32":"i64")),o=t.getValue(i+n,"*"),d=o?t.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${a}, ERROR_MESSAGE: ${d}`)}finally{t.stackRestore(r)}}}),ds,Ks=w(()=>{It(),_s(),ds=e=>{let t=dt(),r=0,n=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let a=0;return(e==null?void 0:e.tag)!==void 0&&(a=dr(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,a),r===0&&rr("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&fs(e.extra,"",new WeakSet,(o,d)=>{let p=dr(o,n),h=dr(d,n);t._OrtAddRunConfigEntry(r,p,h)!==0&&rr(`Can't set a run config entry: ${o} - ${d}.`)}),[r,n]}catch(a){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(o=>t._free(o)),a}}}),Ds,gs,kn,Ls,Sn,ri=w(()=>{It(),_s(),Ds=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},gs=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},kn=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Ls=(e,t,r)=>{for(let n of t){let i=typeof n=="string"?n:n.name;switch(i){case"webnn":if(i="WEBNN",typeof n!="string"){let o=n==null?void 0:n.deviceType;if(o){let d=dr("deviceType",r),p=dr(o,r);dt()._OrtAddSessionConfigEntry(e,d,p)!==0&&rr(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(i="JS",typeof n!="string"){let o=n;if(o!=null&&o.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let d=dr("preferredLayout",r),p=dr(o.preferredLayout,r);dt()._OrtAddSessionConfigEntry(e,d,p)!==0&&rr(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let a=dr(i,r);dt()._OrtAppendExecutionProvider(e,a)!==0&&rr(`Can't append execution provider: ${i}.`)}},Sn=e=>{let t=dt(),r=0,n=[],i=e||{};kn(i);try{let a=Ds(i.graphOptimizationLevel??"all"),o=gs(i.executionMode??"sequential"),d=typeof i.logId=="string"?dr(i.logId,n):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let C=typeof i.optimizedModelFilePath=="string"?dr(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(a,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,d,p,h,C),r===0&&rr("Can't create session options."),i.executionProviders&&Ls(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let k=dr("enableGraphCapture",n),u=dr(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,k,u)!==0&&rr(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[k,u]of Object.entries(i.freeDimensionOverrides)){if(typeof k!="string")throw new Error(`free dimension override name must be a string: ${k}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let B=dr(k,n);t._OrtAddFreeDimensionOverride(r,B,u)!==0&&rr(`Can't set a free dimension override: ${k} - ${u}.`)}return i.extra!==void 0&&fs(i.extra,"",new WeakSet,(k,u)=>{let B=dr(k,n),R=dr(u,n);t._OrtAddSessionConfigEntry(r,B,R)!==0&&rr(`Can't set a session config entry: ${k} - ${u}.`)}),[r,n]}catch(a){throw r!==0&&t._OrtReleaseSessionOptions(r)!==0&&rr("Can't release session options."),n.forEach(o=>t._free(o)),a}}}),zs,ws,es,fn,Hs,_n,qs,gn,zt=w(()=>{zs=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},ws=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},es=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((i,a)=>i*a,1);return r>0?Math.ceil(n*r):void 0},fn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Hs=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},_n=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",qs=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",gn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),wn,$n=w(()=>{rt(),wn=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),a;try{a=new ArrayBuffer(n)}catch(d){if(d instanceof RangeError){let p=Math.ceil(n/65536);a=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw d}let o=0;for(;;){let{done:d,value:p}=await i.read();if(d)break;let h=p.byteLength;new Uint8Array(a,o,h).set(p),o+=h}return new Uint8Array(a,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),An,In,Bs,On,yn,Fn,ir,ts=w(()=>{zt(),An=["V","I","W","E","F"],In=(e,t)=>{console.log(`[${An[e]},${new Date().toISOString()}]${t}`)},yn=(e,t)=>{Bs=e,On=t},Fn=(e,t)=>{let r=Hs(e),n=Hs(Bs);r>=n&&In(r,typeof t=="function"?t():t)},ir=(...e)=>{On&&Fn(...e)}}),bn,Dn=w(()=>{zt(),bn=(e,t)=>new(fn(t))(e)}),Xs=w(()=>{}),Mn,Ee,E,q,ie,be,Pe,Ve,ut,_t=w(()=>{ts(),Xs(),Mn=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Ee=[],E=e=>Math.ceil(Number(e)/16)*16,q=e=>{for(let t=0;t<Ee.length;t++){let r=Ee[t];if(e<=r)return r}return Math.ceil(e/16)*16},ie=1,be=()=>ie++,Pe=async(e,t,r,n)=>{let i=E(r),a=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,a,0,i),e.flush(),await a.mapAsync(GPUMapMode.READ);let d=a.getMappedRange();if(n){let p=n();return p.set(new Uint8Array(d,0,r)),p}else return new Uint8Array(d.slice(0,r))}finally{a.destroy()}},Ve=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Mn)Ee.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,n=t.byteOffset,i=t.byteLength,a=E(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let d=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),p=d.getMappedRange();new Uint8Array(p).set(new Uint8Array(r,n,i)),d.unmap();let h=this.backend.device.createCommandEncoder();h.copyBufferToBuffer(d,0,o.gpuData.buffer,0,a),this.backend.device.queue.submit([h.finish()]),d.destroy(),ir("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=E(r.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let n;if(r){if(n=r[0],e===r[1])return ir("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=be();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),ir("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),ir("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=q(e),n,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||a){let d=(i?this.freeBuffers:this.freeUniformBuffers).get(r);d?d.length>0?n=d.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let o={id:be(),type:0,buffer:n};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(e)}),ir("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=typeof e=="bigint"?Number(e):e,r=this.storageCache.get(t);if(!r){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return ir("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(e,t){let r=this.storageCache.get(Number(e));if(!r)throw new Error("data does not exist");await Pe(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Mn.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(ir("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},ut=(...e)=>new Ve(...e)}),mt,it,Ct=w(()=>{mt=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},it=e=>new mt(e)}),hr,nr,Se,yr,Fr,Qr,Jr,Dt=w(()=>{hr=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},nr=class{static calcShape(e,t,r=!1){let n=e.length,i=t.length;if(n===0)return t;if(i===0)return e;let a=Math.max(e.length,t.length),o=new Array(a);if(r){if(n<2||i<2)return;let d=hr.calcMatMulShape([e[n-2],e[n-1]],[t[i-2],t[i-1]]);if(d===void 0)return;[o[a-2],o[a-1]]=d}for(let d=r?3:1;d<=a;d++){let p=n-d<0?1:e[n-d],h=i-d<0?1:t[i-d];if(p!==h&&p>1&&h>1)return;let C=Math.max(p,h);if(p&&h)o[a-d]=Math.max(p,h);else{if(C>1)return;o[a-d]=0}}return o}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[n-i])return!1;return!0}},Se=class Sp{static size(t){return Sp.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let i=new Array(n),a=n-1;for(;a>=0;){if(t[a]%r===0){i[a]=t[a]/r;break}if(r%t[a]!==0)throw new Error("cannot convert shape");i[a]=1,r/=t[a],a--}for(a--;a>=0;a--)i[a]=t[a];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Sp.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Sp.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let a=r;a<n;a++){if(t[a]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(t[a])}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,a)=>i+r[a]+r[a+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},yr=class vc{static adjustPoolAttributes(t,r,n,i,a,o){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let d=0;d<r.length-2;d++)d>=n.length?n.push(r[d+2]):n[d]=r[d+2];for(let d=0;d<n.length;d++)if(d<i.length){if(i[d]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let d=0;d<n.length;d++)if(d<a.length){if(a[d]<0)throw new Error("dilations should be greater than or equal to 1")}else a.push(1);for(let d=0;d<n.length*2;d++)if(d<o.length){if(o[d]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let d=0;d<n.length;d++){if(n[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[d]>=n[d]||o[d+n.length]>=n[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,i,a,o,d){if(d){if(a.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)vc.adjustPadAndReturnShape(t[p+(o?1:2)],r[p],n[p],i[p],a,p,p+t.length-2,d)}}static computePoolOutputShape(t,r,n,i,a,o,d){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return vc.computeShapeHelper(t,r,p,n,i,a,o,d),p}static computeConvOutputShape(t,r,n,i,a,o,d){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return vc.computeShapeHelper(!1,t,p,n,i,a,o,d),p}static computeShapeHelper(t,r,n,i,a,o,d,p){if(t)for(let h=0;h<r.length-2;h++)n.push(1);else for(let h=0;h<r.length-2;h++)n.push(vc.adjustPadAndReturnShape(r[h+2],i[h],a[h],o[h],d,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,n,i,a,o,d,p){let h=n*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return a[o]=0,a[d]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let C=((t+r-1)/r-1)*r+i-t;return a[o]=Math.floor(p==="SAME_LOWER"?(C+1)/2:C/2),a[d]=C-a[o],Math.floor((t+C-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+a[o]+a[d]-h)/r+1)}},Fr=class{static getShapeOfGemmResult(e,t,r,n,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let a,o,d;t?(a=e[1],o=e[0]):(a=e[0],o=e[1]);let p=-1;if(n?(d=r[0],p=1):(d=r[1],p=0),r[p]!==o)throw new Error("dimension mismatch");if(a<=0||d<=0||o<=0)throw new Error("invalid shape specified");if(i&&!nr.isValidBroadcast(i,[a,d]))throw new Error("gemm: invalid bias shape for broadcast");return[a,d,o]}},Qr=-34028234663852886e22,Jr=34028234663852886e22}),Rr,ys,Zt,_r,Tt,or,bs,Dr,qr,bt,Sr,Le,gt,rs,Qs,si,ka,qt=w(()=>{zt(),Dt(),Rr=64,ys=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Zt=(e,t=1)=>{let r=ys(e,t);return typeof r=="string"?r:r[0]},_r=(e,t=1)=>{let r=ys(e,t);return typeof r=="string"?r:r[1]},Tt=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Se.computeStrides(r)})}),t},or=e=>e%4===0?4:e%2===0?2:1,bs=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Dr=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,qr=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,bt=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Sr=(e,t,r,n,i)=>{let a=typeof r=="number",o=a?r:r.length,d=[...new Array(o).keys()],p=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,h=ys(t,i),C=typeof h=="string"?h:h[1],k=typeof h=="string"?h:h[0],u={indices:p,value:C,storage:k,tensor:t},B=nt=>typeof nt=="string"?nt:`${nt}u`,R={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},j=a?"uniforms.":"",ee=`${j}${e}_shape`,re=`${j}${e}_strides`,X="";for(let nt=0;nt<o-1;nt++)X+=`
    let dim${nt} = current / ${bt(re,nt,o)};
    let rest${nt} = current % ${bt(re,nt,o)};
    indices[${nt}] = dim${nt};
    current = rest${nt};
    `;X+=`indices[${o-1}] = current;`;let me=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${u.indices} {
    var indices: ${u.indices};
    var current = offset;
    ${X}
    return indices;
  }`,pe=nt=>(R.offsetToIndices=!0,o<2?nt:`o2i_${e}(${nt})`),Me=[];if(o>=2)for(let nt=o-1;nt>=0;nt--)Me.push(`${bt(re,nt,o)} * (indices[${nt}])`);let $e=o<2?"":`
  fn i2o_${e}(indices: ${u.indices}) -> u32 {
    return ${Me.join("+")};
  }`,Ie=nt=>(R.indicesToOffset=!0,o<2?nt:`i2o_${e}(${nt})`),Ue=(...nt)=>o===0?"0u":`${u.indices}(${nt.map(B).join(",")})`,at=(nt,Pt)=>o<2?`${nt}`:`${bt(nt,Pt,o)}`,Et=(nt,Pt,cr)=>o<2?`${nt}=${cr};`:`${bt(nt,Pt,o)}=${cr};`,Kt={},Yt=(nt,Pt)=>{R.broadcastedIndicesToOffset=!0;let cr=`${Pt.name}broadcastedIndicesTo${e}Offset`;if(cr in Kt)return`${cr}(${nt})`;let Lr=[];for(let ms=o-1;ms>=0;ms--){let Hr=Pt.indicesGet("outputIndices",ms+Pt.rank-o);Lr.push(`${at(re,ms)} * (${Hr} % ${at(ee,ms)})`)}return Kt[cr]=`fn ${cr}(outputIndices: ${Pt.type.indices}) -> u32 {
             return ${Lr.length>0?Lr.join("+"):"0u"};
           }`,`${cr}(${nt})`},kt=(nt,Pt)=>(()=>{if(u.storage===u.value)return`${e}[${nt}]=${Pt};`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`${e}[${nt}]=vec2<u32>(u32(${Pt}), select(0u, 0xFFFFFFFFu, ${Pt} < 0));`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`${e}[${nt}]=vec2<u32>(u32(${Pt}), 0u);`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`${e}[${nt}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Pt}));`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),Jt=nt=>(()=>{if(u.storage===u.value)return`${e}[${nt}]`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`i32(${e}[${nt}].x)`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`u32(${e}[${nt}].x)`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${nt}] & 0xFFu), bool(${e}[${nt}] & 0xFF00u), bool(${e}[${nt}] & 0xFF0000u), bool(${e}[${nt}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),$t=o<2?"":`
  fn get_${e}ByIndices(indices: ${u.indices}) -> ${C} {
    return ${Jt(`i2o_${e}(indices)`)};
  }`,jt=o<2?"":(()=>{let nt=d.map(cr=>`d${cr}: u32`).join(", "),Pt=d.map(cr=>`d${cr}`).join(", ");return`
  fn get_${e}(${nt}) -> ${C} {
    return get_${e}ByIndices(${Ue(Pt)});
  }`})(),Mr=(...nt)=>{if(nt.length!==o)throw new Error(`indices length must be ${o}`);let Pt=nt.map(B).join(",");return o===0?Jt("0u"):o===1?Jt(Pt[0]):(R.get=!0,R.getByIndices=!0,R.indicesToOffset=!0,`get_${e}(${Pt})`)},Ht=nt=>o<2?Jt(nt):(R.getByIndices=!0,R.indicesToOffset=!0,`get_${e}ByIndices(${nt})`),Gt=o<2?"":`
  fn set_${e}ByIndices(indices: ${u.indices}, value: ${C}) {
    ${kt(`i2o_${e}(indices)`,"value")}
  }`,Pr=o<2?"":(()=>{let nt=d.map(cr=>`d${cr}: u32`).join(", "),Pt=d.map(cr=>`d${cr}`).join(", ");return`
  fn set_${e}(${nt}, value: ${C}) {
    set_${e}ByIndices(${Ue(Pt)}, value);
  }`})();return{impl:()=>{let nt=[],Pt=!1;return R.offsetToIndices&&(nt.push(me),Pt=!0),R.indicesToOffset&&(nt.push($e),Pt=!0),R.broadcastedIndicesToOffset&&(Object.values(Kt).forEach(cr=>nt.push(cr)),Pt=!0),R.set&&(nt.push(Pr),Pt=!0),R.setByIndices&&(nt.push(Gt),Pt=!0),R.get&&(nt.push(jt),Pt=!0),R.getByIndices&&(nt.push($t),Pt=!0),!a&&Pt&&nt.unshift(`const ${ee} = ${u.indices}(${r.join(",")});`,`const ${re} = ${u.indices}(${Se.computeStrides(r).join(",")});`),nt.join(`
`)},type:u,offsetToIndices:pe,indicesToOffset:Ie,broadcastedIndicesToOffset:Yt,indices:Ue,indicesGet:at,indicesSet:Et,set:(...nt)=>{if(nt.length!==o+1)throw new Error(`indices length must be ${o}`);let Pt=nt[o];if(typeof Pt!="string")throw new Error("value must be string");let cr=nt.slice(0,o).map(B).join(",");return o===0?kt("0u",Pt):o===1?kt(cr[0],Pt):(R.set=!0,R.setByIndices=!0,R.indicesToOffset=!0,`set_${e}(${cr}, ${Pt})`)},setByOffset:kt,setByIndices:(nt,Pt)=>o<2?kt(nt,Pt):(R.setByIndices=!0,R.indicesToOffset=!0,`set_${e}ByIndices(${nt}, ${Pt});`),get:Mr,getByOffset:Jt,getByIndices:Ht,usage:n,name:e,strides:re,shape:ee,rank:o}},Le=(e,t,r,n=1)=>Sr(e,t,r,"input",n),gt=(e,t,r,n=1)=>Sr(e,t,r,"output",n),rs=(e,t,r)=>Sr(e,t,r,"atomicOutput",1),Qs=(e,t,r,n=1)=>Sr(e,t,r,"internal",n),si=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Rr){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})
  fn main(${a}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",n=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let i=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},ka=(e,t)=>new si(e,t)}),Sa,Di,Li,$a,Aa,zi,ss,ni,Ia,Rs=w(()=>{zt(),Dt(),Ct(),qt(),Sa=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Di=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Li=(e,t)=>Se.sortBasedOnPerm(e,Di(e.length,t)),$a=(e,t,r,n)=>{let i=`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let a=0;a<t;++a)i+=`a[${e[a]}]=i[${a}];`;return i+="return a;}"},Aa=(e,t)=>{let r=[],n=[];for(let i=0;i<e.length;++i)e[i]!==1&&r.push(e[i]),e[t[i]]!==1&&n.push(t[i]);return{newShape:r,newPerm:n}},zi=(e,t)=>{let r=0;for(let n=0;n<e.length;++n)if(t[e[n]]!==1){if(e[n]<r)return!1;r=e[n]}return!0},ss=(e,t)=>{let r=e.dataType,n=e.dims.length,i=Di(n,t),a=Li(e.dims,i),o=e.dims,d=a,p=n<2||zi(i,e.dims),h;if(p)return h=R=>{let j=Le("input",r,o,4),ee=gt("output",r,d,4);return`
  ${R.registerUniform("output_size","u32").declareVariables(j,ee)}
  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let R=Se.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(R/64/4)},programUniforms:[{type:12,data:Math.ceil(R/4)}]}},getShaderSource:h};let{newShape:C,newPerm:k}=Aa(e.dims,i),u=Se.areEqual(k,[2,3,1]),B=Se.areEqual(k,[3,1,2]);if(C.length===2||u||B){o=u?[C[0],C[1]*C[2]]:B?[C[0]*C[1],C[2]]:C,d=[o[1],o[0]];let R=16;return h=j=>{let ee=Le("a",r,o.length),re=gt("output",r,d.length);return`
  ${j.registerUniform("output_size","u32").declareVariables(ee,re)}
  var<workgroup> tile : array<array<${re.type.value}, ${R+1}>, ${R}>;
  ${j.mainStart([R,R,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${R} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${R}u + local_id.x;
    let input_row = workgroup_id_x * ${R}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${ee.getByIndices(`${ee.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${R}u + local_id.x;
    let output_row = workgroup_id_y * ${R}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${re.setByIndices(`${re.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let j=Se.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(d[1]/R),y:Math.ceil(d[0]/R)},programUniforms:[{type:12,data:j},...Tt(o,d)]}},getShaderSource:h}}return h=R=>{let j=Le("a",r,o.length),ee=gt("output",r,d.length);return`
  ${R.registerUniform("output_size","u32").declareVariables(j,ee)}

  ${$a(i,n,j,ee)}

  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${ee.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${ee.setByOffset("global_idx",j.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let R=Se.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:[{type:12,data:R},...Tt(o,d)]}},getShaderSource:h}},ni=(e,t)=>{Sa(e.inputs),e.compute(ss(e.inputs[0],t.perm))},Ia=e=>it({perm:e.perm})}),Oa,Fa,Da,La,za,Bi,Ys,Ba,kc,Ra,Ms,Na,Ri,ja,Ua,Wa,Va,Ga,ii,Ka,Ha,Sc=w(()=>{zt(),Dt(),qt(),Ki(),Rs(),Oa={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Fa={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Da={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},La={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},za=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},Bi=(e,t)=>{let r=[],n=e.length;for(let a=0;a<n;a++)t.indexOf(a)===-1&&r.push(e[a]);let i=t.map(a=>e[a]);return[r,i]},Ys=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let a=0;a<r;a++)t.indexOf(a)===-1?n.push(e[i++]):n.push(1);return n},Ba=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},kc=(e,t)=>{let r=[];if(!Ba(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},Ra=(e,t,r,n,i,a,o)=>{let d=r[0].dims,p=Se.size(a),h=Se.size(o),C=Le("_A",r[0].dataType,d),k=gt("output",i,a),u=64;p===1&&(u=256);let B=`
          var<workgroup> aBestValues : array<f32, ${u}>;
       `,R=j=>`
        ${j.registerUniform("reduceSize","u32").declareVariables(C,k)}
        ${B}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${j.mainStart(u)}

          let outputIndex = global_idx / ${u};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Da[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${u}) {
           let candidate = f32(${C.getByOffset("offset + k")});
           bestValue = ${Oa[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${u}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Fa[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${k.setByOffset("outputIndex",`${n==="mean"?`${k.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${k.type.storage}(${La[n]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${t};${u}`,inputDependencies:["type"]},getShaderSource:R,getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},Ms=(e,t,r,n)=>{let i=e.inputs.length===1?r:ai(e.inputs,r),a=i.axes;a.length===0&&!i.noopWithEmptyAxes&&(a=e.inputs[0].dims.map((B,R)=>R));let o=Se.normalizeAxes(a,e.inputs[0].dims.length),d=o,p=e.inputs[0],h=kc(d,e.inputs[0].dims.length);h.length>0&&(p=e.compute(ss(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],d=za(d.length,p.dims.length));let[C,k]=Bi(p.dims,d),u=C;i.keepDims&&(u=Ys(C,o)),e.compute(Ra(t,i.cacheKey,[p],n,e.inputs[0].dataType,u,k),{inputs:[p]})},Na=(e,t)=>{Ms(e,"ReduceMeanShared",t,"mean")},Ri=(e,t)=>{Ms(e,"ReduceL1Shared",t,"l1")},ja=(e,t)=>{Ms(e,"ReduceL2Shared",t,"l2")},Ua=(e,t)=>{Ms(e,"ReduceLogSumExpShared",t,"logSumExp")},Wa=(e,t)=>{Ms(e,"ReduceMaxShared",t,"max")},Va=(e,t)=>{Ms(e,"ReduceMinShared",t,"min")},Ga=(e,t)=>{Ms(e,"ReduceProdShared",t,"prod")},ii=(e,t)=>{Ms(e,"ReduceSumShared",t,"sum")},Ka=(e,t)=>{Ms(e,"ReduceSumSquareShared",t,"sumSquare")},Ha=(e,t)=>{Ms(e,"ReduceLogSumShared",t,"logSum")}}),as,qa,oi,ai,cs,Xa,Ni,Qa,Ya,ji,Ja,Za,Ui,el,tl,ls,rl,sl,Wi,nl,il,Vi,ol,al,Gi,ll,Ki=w(()=>{zt(),Dt(),Ct(),qt(),Sc(),as=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},qa=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],oi=(e,t,r,n,i,a,o=!1,d=!1)=>{let p=[],h=r[0].dims,C=h.length,k=Se.normalizeAxes(i,C),u=!d&&k.length===0;h.forEach((j,ee)=>{u||k.indexOf(ee)>=0?o&&p.push(1):p.push(j)});let B=p.length,R=Se.size(p);return{name:e,shaderCache:t,getShaderSource:j=>{let ee=[],re=Le("_A",r[0].dataType,C),X=gt("output",a,B),me=n(re,X,k),pe=me[2];for(let Me=0,$e=0;Me<C;Me++)u||k.indexOf(Me)>=0?(o&&$e++,pe=`for(var j${Me}: u32 = 0; j${Me} < ${h[Me]}; j${Me}++) {
                  ${me[2].includes("last_index")?`let last_index = j${Me};`:""}
                  ${re.indicesSet("input_indices",Me,`j${Me}`)}
                  ${pe}
                }`):(ee.push(`${re.indicesSet("input_indices",Me,X.indicesGet("output_indices",$e))};`),$e++);return`

        ${j.registerUniform("output_size","u32").declareVariables(re,X)}

        ${j.mainStart()}
          ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${re.type.indices};
          let output_indices = ${X.offsetToIndices("global_idx")};

          ${ee.join(`
`)}
          ${me[0]}       // init ops for reduce max/min
          ${me[1]}
          ${pe}
          ${me[3]}
          ${me.length===4?X.setByOffset("global_idx","value"):me.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:[{type:12,data:R},...Tt(h,p)]})}},ai=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),it({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},cs=(e,t,r,n)=>{let i=e.inputs,a=i.length===1?r:ai(i,r);e.compute(oi(t,{hint:a.cacheKey,inputDependencies:["rank"]},[i[0]],a.noopWithEmptyAxes&&a.axes.length===0?qa:n,a.axes,i[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},Xa=(e,t)=>{as(e.inputs),cs(e,"ReduceLogSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},Ni=(e,t)=>{as(e.inputs),cs(e,"ReduceL1",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},Qa=(e,t)=>{as(e.inputs),cs(e,"ReduceL2",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ya=(e,t)=>{as(e.inputs),cs(e,"ReduceLogSumExp",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},ji=(e,t)=>{as(e.inputs),cs(e,"ReduceMax",t,(r,n,i)=>{let a=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&a.push(r.indicesSet("input_indices",o,0));return[`${a.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Ja=(e,t)=>{as(e.inputs),cs(e,"ReduceMean",t,(r,n,i)=>{let a=1;for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(a*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${a});`]})},Za=(e,t)=>{as(e.inputs),cs(e,"ReduceMin",t,(r,n,i)=>{let a=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&a.push(`input_indices[${o}] = 0;`);return[`${a.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},Ui=(e,t)=>{as(e.inputs),cs(e,"ReduceProd",t,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},el=(e,t)=>{as(e.inputs),cs(e,"ReduceSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},tl=(e,t)=>{as(e.inputs),cs(e,"ReduceSumSquare",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},ls=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let a=0;a<t.length;a++)t.indexOf(a)===-1?n*=e[a]:i*=e[a];return i<32&&n>1024},rl=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ja(e,t):Na(e,t)},sl=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ni(e,t):Ri(e,t)},Wi=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Qa(e,t):ja(e,t)},nl=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ya(e,t):Ua(e,t)},il=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ji(e,t):Wa(e,t)},Vi=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Za(e,t):Va(e,t)},ol=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ui(e,t):Ga(e,t)},al=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?el(e,t):ii(e,t)},Gi=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?tl(e,t):Ka(e,t)},ll=(e,t)=>{ls(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Xa(e,t):Ha(e,t)}}),li,ul,dl,ui,$c=w(()=>{zt(),Ct(),Ki(),li=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},ul=(e,t)=>{li(e.inputs);let r=(n,i,a)=>{let o=[];for(let d=0;d<n.rank;d++)(a.indexOf(d)>=0||a.length===0)&&o.push(`input_indices[${d}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(oi("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},dl=(e,t)=>{li(e.inputs);let r=(n,i,a)=>{let o=[];for(let d=0;d<n.rank;d++)(a.indexOf(d)>=0||a.length===0)&&o.push(`input_indices[${d}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(oi("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ui=e=>it(e)}),cl,Ln,pl,hl,Hi,zn,ml,qi,Xi=w(()=>{zt(),Dt(),Xs(),qt(),cl=(e,t)=>{let r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],d=e[5];if(o&&d)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let p=r.dims[0],h=r.dims[1],C=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==C)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let k=i.dims[0]/3,u=k,B=u;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let me of t.qkvHiddenSizes)if(me%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");k=t.qkvHiddenSizes[0],u=t.qkvHiddenSizes[1],B=t.qkvHiddenSizes[2]}let R=h;if(k!==u)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==k+u+B)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let j=0;if(o){if(u!==B)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==p)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==u/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(j=o.dims[3])}let ee=R+j,re=-1,X=0;if(a)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(d){if(d.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(d.dims[0]!==p||d.dims[1]!==t.numHeads||d.dims[2]!==h||d.dims[3]!==ee)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:h,pastSequenceLength:j,kvSequenceLength:R,totalSequenceLength:ee,maxSequenceLength:re,inputHiddenSize:C,hiddenSize:k,vHiddenSize:B,headSize:Math.floor(k/t.numHeads),vHeadSize:Math.floor(B/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:X,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Ln=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,pl=(e,t,r,n,i,a,o,d)=>{let p=or(o?1:a),h=64,C=a/p;C<h&&(h=32);let k=Math.ceil(a/p/h),u=[{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:i},{type:12,data:C},{type:12,data:k}],B=Zt(e.dataType,p),R=_r(1,p),j=["type"];o&&j.push("type"),d&&j.push("type");let ee=re=>{let X=gt("x",e.dataType,e.dims,p),me=[X],pe=o?Le("seq_lens",o.dataType,o.dims):void 0;pe&&me.push(pe);let Me=d?Le("total_sequence_length_input",d.dataType,d.dims):void 0;Me&&me.push(Me);let $e=_r(e.dataType),Ie=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${h}>;
  var<workgroup> thread_sum: array<f32, ${h}>;
  ${re.registerUniforms(Ie).declareVariables(...me)}
  ${re.mainStart([h,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${Ln(pe,Me,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${h}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${R}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${R}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(p){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${p}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${h}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${R}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${R}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(p){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${p}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${h}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${X.type.value}(${$e}(1.0) / ${$e}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${R}(x[offset + i]);
        x[offset + i] = ${X.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${X.type.value}(${$e}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${h};${B};${p}`,inputDependencies:j},getShaderSource:ee,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(a/h),y:i,z:t*r},programUniforms:u})}},hl=(e,t,r,n,i,a,o,d,p)=>{let h=o+a.kvSequenceLength,C=[a.batchSize,a.numHeads,a.sequenceLength,h],k=e>1&&n,u=a.kvNumHeads?a.kvNumHeads:a.numHeads,B=k?[a.batchSize,u,h,a.headSize]:void 0,R=a.nReps?a.nReps:1,j=a.scale===0?1/Math.sqrt(a.headSize):a.scale,ee=or(a.headSize),re=a.headSize/ee,X=12,me={x:Math.ceil(h/X),y:Math.ceil(a.sequenceLength/X),z:a.batchSize*a.numHeads},pe=[{type:12,data:a.sequenceLength},{type:12,data:re},{type:12,data:h},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:1,data:j},{type:12,data:o},{type:12,data:a.kvSequenceLength},{type:12,data:R}],Me=k&&n&&Se.size(n.dims)>0,$e=["type","type"];Me&&$e.push("type"),i&&$e.push("type"),d&&$e.push("type"),p&&$e.push("type");let Ie=[{dims:C,dataType:t.dataType,gpuDataType:0}];k&&Ie.push({dims:B,dataType:t.dataType,gpuDataType:0});let Ue=at=>{let Et=Le("q",t.dataType,t.dims,ee),Kt=Le("key",r.dataType,r.dims,ee),Yt=[Et,Kt];if(Me){let Gt=Le("past_key",n.dataType,n.dims,ee);Yt.push(Gt)}i&&Yt.push(Le("attention_bias",i.dataType,i.dims));let kt=d?Le("seq_lens",d.dataType,d.dims):void 0;kt&&Yt.push(kt);let Jt=p?Le("total_sequence_length_input",p.dataType,p.dims):void 0;Jt&&Yt.push(Jt);let $t=gt("output",t.dataType,C),jt=[$t];k&&jt.push(gt("present_key",t.dataType,B,ee));let Mr=_r(1,ee),Ht=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${X}u;

  var<workgroup> tileQ: array<${Et.type.storage}, ${X*X}>;
  var<workgroup> tileK: array<${Et.type.storage}, ${X*X}>;
  ${at.registerUniforms(Ht).declareVariables(...Yt,...jt)}
  ${at.mainStart([X,X,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${R===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${R===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${Ln(kt,Jt,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${Me&&k?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${k?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Mr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${Me&&k?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${k?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Mr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(ee){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${ee}`)}})()};
        output[outputIdx] = ${$t.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${ee};${i!==void 0};${n!==void 0};${e}`,inputDependencies:$e},getRunData:()=>({outputs:Ie,dispatchGroup:me,programUniforms:pe}),getShaderSource:Ue}},Hi=(e,t,r,n,i,a,o=void 0,d=void 0)=>{let p=a+i.kvSequenceLength,h=i.nReps?i.nReps:1,C=i.vHiddenSize*h,k=e>1&&n,u=i.kvNumHeads?i.kvNumHeads:i.numHeads,B=k?[i.batchSize,u,p,i.headSize]:void 0,R=[i.batchSize,i.sequenceLength,C],j=12,ee={x:Math.ceil(i.vHeadSize/j),y:Math.ceil(i.sequenceLength/j),z:i.batchSize*i.numHeads},re=[{type:12,data:i.sequenceLength},{type:12,data:p},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:C},{type:12,data:a},{type:12,data:i.kvSequenceLength},{type:12,data:h}],X=k&&n&&Se.size(n.dims)>0,me=["type","type"];X&&me.push("type"),o&&me.push("type"),d&&me.push("type");let pe=[{dims:R,dataType:t.dataType,gpuDataType:0}];k&&pe.push({dims:B,dataType:t.dataType,gpuDataType:0});let Me=$e=>{let Ie=Le("probs",t.dataType,t.dims),Ue=Le("v",r.dataType,r.dims),at=[Ie,Ue];X&&at.push(Le("past_value",n.dataType,n.dims));let Et=o?Le("seq_lens",o.dataType,o.dims):void 0;o&&at.push(Et);let Kt=d?Le("total_sequence_length_input",d.dataType,d.dims):void 0;d&&at.push(Kt);let Yt=[gt("output",t.dataType,R)];k&&Yt.push(gt("present_value",t.dataType,B));let kt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${j}u;
  var<workgroup> tileQ: array<${Ie.type.value}, ${j*j}>;
  var<workgroup> tileV: array<${Ie.type.value}, ${j*j}>;
  ${$e.registerUniforms(kt).declareVariables(...at,...Yt)}
  ${$e.mainStart([j,j,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${h===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${h===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${Ln(Et,Kt,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${X&&k?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${k?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Ie.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${X&&k?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${k?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:me},getRunData:()=>({outputs:pe,dispatchGroup:ee,programUniforms:re}),getShaderSource:Me}},zn=(e,t,r,n,i,a,o,d,p,h,C=void 0,k=void 0)=>{let u=Math.min(e.outputCount,1+(o?1:0)+(d?1:0)),B=u>1?h.pastSequenceLength:0,R=B+h.kvSequenceLength,j=p&&Se.size(p.dims)>0?p:void 0,ee=[t,r];u>1&&o&&Se.size(o.dims)>0&&ee.push(o),j&&ee.push(j),C&&ee.push(C),k&&ee.push(k);let re=e.compute(hl(u,t,r,o,j,h,B,C,k),{inputs:ee,outputs:u>1?[-1,1]:[-1]})[0];e.compute(pl(re,h.batchSize,h.numHeads,B,h.sequenceLength,R,C,k),{inputs:C&&k?[re,C,k]:[re],outputs:[]});let X=[re,n];u>1&&d&&Se.size(d.dims)>0&&X.push(d),C&&X.push(C),k&&X.push(k),e.compute(Hi(u,re,n,d,h,B,C,k),{inputs:X,outputs:u>1?[0,2]:[0]})},ml=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,a=t.headSize,o=12,d={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:n},{type:12,data:i},{type:12,data:a},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],C=k=>{let u=gt("output_q",p[0].dataType,r),B=gt("output_k",p[0].dataType,r),R=gt("output_v",p[0].dataType,r),j=Le("input",p[0].dataType,p[0].dims),ee=Le("weight",p[1].dataType,p[1].dims),re=Le("bias",p[2].dataType,p[2].dims),X=j.type.storage,me=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${X}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${X}, ${o*o}>;
  var<workgroup> tileWeightK: array<${X}, ${o*o}>;
  var<workgroup> tileWeightV: array<${X}, ${o*o}>;
  ${k.registerUniforms(me).declareVariables(j,ee,re,u,B,R)}
  ${k.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${X}(0);
    var valueK = ${X}(0);
    var valueV = ${X}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:h}),getShaderSource:C},{inputs:p,outputs:[-1,-1,-1]})},qi=(e,t)=>{let r=cl(e.inputs,t),[n,i,a]=ml(e,r);return zn(e,n,i,a,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),fl,Qi,_l,gl,wl=w(()=>{He(),zt(),Dt(),Ct(),qt(),fl=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,i,a)=>{let o=i.length;if(o!==n.length)throw new Error(`${a}: num dimensions != ${o}`);i.forEach((d,p)=>{if(d!==n[p])throw new Error(`${a}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Qi=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,a=e[0].dims,o=n?or(a[a.length-1]):1,d=i==="NHWC"&&a.length>1?o:1,p=Se.size(a)/o,h=n,C=h?a.length:a,k=Le("x",e[0].dataType,e[0].dims,o),u=Le("scale",e[1].dataType,e[1].dims,d),B=Le("bias",e[2].dataType,e[2].dims,d),R=Le("inputMean",e[3].dataType,e[3].dims,d),j=Le("inputVar",e[4].dataType,e[4].dims,d),ee=gt("y",e[0].dataType,C,o),re=()=>{let me="";if(n)me=`let cOffset = ${a.length===1?"0u":i==="NHWC"?`outputIndices[${a.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")me=`
            ${ee.indicesSet("outputIndices","0","0")}
            let cOffset = ${ee.indicesToOffset("outputIndices")};`;else{me=`var cIndices = ${u.type.indices}(0);
                       cIndices[0] = outputIndices[${a.length-1}];`;for(let pe=1;pe<u.rank;pe++)me+=`cIndices[${pe}] = outputIndices[${pe}];`;me+=`let cOffset = ${u.indicesToOffset("cIndices")};`}return me},X=me=>`
  const epsilon = ${r};
  ${me.registerUniform("outputSize","u32").declareVariables(k,u,B,R,j,ee)}
  ${me.mainStart()}
  ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${ee.offsetToIndices(`global_idx * ${o}`)};
    ${re()}
    let scale = ${u.getByOffset("cOffset")};
    let bias = ${B.getByOffset("cOffset")};
    let inputMean = ${R.getByOffset("cOffset")};
    let inputVar = ${j.getByOffset("cOffset")};
    let x = ${k.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${ee.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${o}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:X,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Tt(a)]:[{type:12,data:p}]})}},_l=e=>it(e),gl=(e,t)=>{let{inputs:r,outputCount:n}=e,i=_l({...t,outputCount:n});if(T.webgpu.validateInputContent&&fl(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Qi(r,i))}}),yl,bl,Yi,Ac=w(()=>{Dt(),qt(),yl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},bl=e=>{let t=e[0].dims,r=e[0].dims[2],n=Se.size(t)/4,i=e[0].dataType,a=Le("input",i,t,4),o=Le("bias",i,[r],4),d=Le("residual",i,t,4),p=gt("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:h=>`
  const channels = ${r}u / 4;
  ${h.declareVariables(a,o,d,p)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${a.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};
    ${p.setByOffset("global_idx","value")}
  }`}},Yi=e=>{yl(e.inputs),e.compute(bl(e.inputs))}}),Ml,ar,vl,Tl,xl,El,Ji,Pl,Cl,Zi,kl,Sl,eo,$l,Al,to,Bn,Il,Rn,Ol,Fl,ro,Dl,Ll,so,zl,Bl,Rl,Nl,no,jl,Ul,Wl,Vl,io,oo,Gl,ao,lo,uo,Kl,Hl,ql,Xl,co,po=w(()=>{zt(),Dt(),Ct(),qt(),Ml=(e,t,r,n,i,a,o)=>{let d=Math.ceil(t/4),p="";typeof i=="string"?p=`${i}(a)`:p=i("a");let h=Le("inputData",r,[d],4),C=gt("outputData",n,[d],4),k=[{name:"vec_size",type:"u32"}];return o&&k.push(...o),`
      ${e.registerUniforms(k).declareVariables(h,C)}

  ${a??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${h.getByOffset("global_idx")};
    ${C.setByOffset("global_idx",p)}
  }`},ar=(e,t,r,n,i,a=e.dataType,o,d)=>{let p=[{type:12,data:Math.ceil(Se.size(e.dims)/4)}];return o&&p.push(...o),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:h=>Ml(h,Se.size(e.dims),e.dataType,a,r,n,d),getRunData:h=>({outputs:[{dims:e.dims,dataType:a}],dispatchGroup:{x:Math.ceil(Se.size(h[0].dims)/64/4)},programUniforms:p})}},vl=e=>{e.compute(ar(e.inputs[0],"Abs","abs"))},Tl=e=>{e.compute(ar(e.inputs[0],"Acos","acos"))},xl=e=>{e.compute(ar(e.inputs[0],"Acosh","acosh"))},El=e=>{e.compute(ar(e.inputs[0],"Asin","asin"))},Ji=e=>{e.compute(ar(e.inputs[0],"Asinh","asinh"))},Pl=e=>{e.compute(ar(e.inputs[0],"Atan","atan"))},Cl=e=>{e.compute(ar(e.inputs[0],"Atanh","atanh"))},Zi=e=>it(e),kl=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(ar(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Sl=e=>{let t,r,n=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,r=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,r=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return it({min:t,max:r})},eo=(e,t)=>{let r=t||Sl(e.inputs),n=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},$l=e=>{e.compute(ar(e.inputs[0],"Ceil","ceil"))},Al=e=>{e.compute(ar(e.inputs[0],"Cos","cos"))},to=e=>{e.compute(ar(e.inputs[0],"Cosh","cosh"))},Bn=e=>it(e),Il=(e,t)=>{let r=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},Rn=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Ol=e=>{let t=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Rn(t)))},Fl=e=>{e.compute(ar(e.inputs[0],"Exp","exp"))},ro=e=>{e.compute(ar(e.inputs[0],"Floor","floor"))},Dl=e=>{let t=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Rn(t)))},Ll=(e,t)=>{let r=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},so=e=>{e.compute(ar(e.inputs[0],"Not",t=>`!${t}`))},zl=e=>{e.compute(ar(e.inputs[0],"Neg",t=>`-${t}`))},Bl=e=>{e.compute(ar(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Rl=e=>{let t=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Nl=e=>{e.compute(ar(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},no=e=>it(e),jl=(e,t)=>{let r=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ul=e=>{e.compute(ar(e.inputs[0],"Sin","sin"))},Wl=e=>{e.compute(ar(e.inputs[0],"Sinh","sinh"))},Vl=e=>{e.compute(ar(e.inputs[0],"Sqrt","sqrt"))},io=e=>{e.compute(ar(e.inputs[0],"Tan","tan"))},oo=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Gl=e=>{e.compute(ar(e.inputs[0],"Tanh",oo))},ao=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${oo("v")};
}
`,lo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,uo=e=>{let t=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"FastGelu",lo,ao(t),void 0,e.inputs[0].dataType))},Kl=(e,t)=>{let r=_r(e.inputs[0].dataType);return e.compute(ar(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Hl=e=>{e.compute(ar(e.inputs[0],"Log","log"))},ql=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Xl=e=>`quick_gelu_impl(${e})`,co=(e,t)=>{let r=_r(e.inputs[0].dataType);e.compute(ar(e.inputs[0],"QuickGelu",Xl,ql(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),Ql,ho,Yl,Ic=w(()=>{Dt(),qt(),po(),Ql=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ho=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=Le("input",e[0].dataType,e[0].dims,4),n=Le("bias",e[0].dataType,[e[0].dims[2]],4),i=gt("output",e[0].dataType,t,4),a=Se.size(t)/4,o=Zt(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:d=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${d.declareVariables(r,n,i)}

  ${Rn(o)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Yl=e=>{Ql(e.inputs),e.compute(ho(e.inputs))}}),mo,Jl,ps,fo,Zl,eu,_o,tu,ru,di,su,nu,go,iu=w(()=>{zt(),Dt(),qt(),mo=(e,t,r,n,i,a,o,d,p,h,C,k)=>{let u,B;typeof d=="string"?u=B=(X,me)=>`${d}((${X}),(${me}))`:typeof d=="function"?u=B=d:(u=d.scalar,B=d.vector);let R=gt("outputData",C,n.length,4),j=Le("aData",p,t.length,4),ee=Le("bData",h,r.length,4),re;if(i)if(a){let X=Se.size(t)===1,me=Se.size(r)===1,pe=t.length>0&&t[t.length-1]%4===0,Me=r.length>0&&r[r.length-1]%4===0;X||me?re=R.setByOffset("global_idx",B(X?`${j.type.value}(${j.getByOffset("0")}.x)`:j.getByOffset("global_idx"),me?`${ee.type.value}(${ee.getByOffset("0")}.x)`:ee.getByOffset("global_idx"))):re=`
            let outputIndices = ${R.offsetToIndices("global_idx * 4u")};
            let offsetA = ${j.broadcastedIndicesToOffset("outputIndices",R)};
            let offsetB = ${ee.broadcastedIndicesToOffset("outputIndices",R)};
            ${R.setByOffset("global_idx",B(o||pe?j.getByOffset("offsetA / 4u"):`${j.type.value}(${j.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||Me?ee.getByOffset("offsetB / 4u"):`${ee.type.value}(${ee.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else re=R.setByOffset("global_idx",B(j.getByOffset("global_idx"),ee.getByOffset("global_idx")));else{if(!a)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let X=(me,pe,Me="")=>{let $e=`aData[indexA${pe}][componentA${pe}]`,Ie=`bData[indexB${pe}][componentB${pe}]`;return`
            let outputIndices${pe} = ${R.offsetToIndices(`global_idx * 4u + ${pe}u`)};
            let offsetA${pe} = ${j.broadcastedIndicesToOffset(`outputIndices${pe}`,R)};
            let offsetB${pe} = ${ee.broadcastedIndicesToOffset(`outputIndices${pe}`,R)};
            let indexA${pe} = offsetA${pe} / 4u;
            let indexB${pe} = offsetB${pe} / 4u;
            let componentA${pe} = offsetA${pe} % 4u;
            let componentB${pe} = offsetB${pe} % 4u;
            ${me}[${pe}] = ${Me}(${u($e,Ie)});
          `};C===9?re=`
            var data = vec4<u32>(0);
            ${X("data",0,"u32")}
            ${X("data",1,"u32")}
            ${X("data",2,"u32")}
            ${X("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:re=`
            ${X("outputData[global_idx]",0)}
            ${X("outputData[global_idx]",1)}
            ${X("outputData[global_idx]",2)}
            ${X("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(j,ee,R)}

        ${k??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${re}
      }`},Jl=(e,t,r,n,i,a,o=r.dataType)=>{let d=r.dims.map(j=>Number(j)??1),p=n.dims.map(j=>Number(j)??1),h=!Se.areEqual(d,p),C=d,k=Se.size(d),u=!1,B=!1,R=[h];if(h){let j=nr.calcShape(d,p,!1);if(!j)throw new Error("Can't perform binary op on the given tensors");C=j.slice(),k=Se.size(C);let ee=Se.size(d)===1,re=Se.size(p)===1,X=d.length>0&&d[d.length-1]%4===0,me=p.length>0&&p[p.length-1]%4===0;R.push(ee),R.push(re),R.push(X),R.push(me);let pe=1;for(let Me=1;Me<C.length;Me++){let $e=d[d.length-Me],Ie=p[p.length-Me];if($e===Ie)pe*=$e;else break}pe%4===0?(B=!0,u=!0):(ee||re||X||me)&&(u=!0)}else u=!0;return R.push(u),{name:e,shaderCache:{hint:t+R.map(j=>j.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:j=>mo(j,d,p,C,u,h,B,i,r.dataType,n.dataType,o,a),getRunData:()=>({outputs:[{dims:C,dataType:o}],dispatchGroup:{x:Math.ceil(k/64/4)},programUniforms:[{type:12,data:Math.ceil(Se.size(C)/4)},...Tt(d,p,C)]})}},ps=(e,t,r,n,i,a)=>{e.compute(Jl(t,i??"",e.inputs[0],e.inputs[1],r,n,a))},fo=e=>{ps(e,"Add",(t,r)=>`${t}+${r}`)},Zl=e=>{ps(e,"Div",(t,r)=>`${t}/${r}`)},eu=e=>{ps(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},_o=e=>{ps(e,"Mul",(t,r)=>`${t}*${r}`)},tu=e=>{let t=Le("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ps(e,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},ru=e=>{ps(e,"Sub",(t,r)=>`${t}-${r}`)},di=e=>{ps(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},su=e=>{ps(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},nu=e=>{ps(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},go=e=>{ps(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),ou,wo,au,lu,uu,yo,Oc=w(()=>{zt(),Dt(),Ct(),qt(),ou=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,n=e[r],i=n.dataType,a=n.dims.length;e.forEach((o,d)=>{if(d!==r){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==a)throw new Error("input tensors should have the same shape");o.dims.forEach((p,h)=>{if(h!==t&&p!==n.dims[h])throw new Error("non concat dimensions must match")})}})},wo=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,au=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let a=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?n.push(a):i===0?n.push(`if (inputIndex == ${i}u) { ${a} }`):i===r-1?n.push(`else { ${a} }`):n.push(`else if (inputIndex == ${i}) { ${a} }`)}return n.join(`
`)},lu=(e,t,r,n)=>{let i=Se.size(r),a=new Array(e.length),o=new Array(e.length),d=0,p=[],h=[],C=[{type:12,data:i}];for(let j=0;j<e.length;++j)d+=e[j].dims[t],a[j]=d,h.push(e[j].dims.length),o[j]=Le(`input${j}`,n,h[j]),p.push("rank"),C.push({type:12,data:a[j]});for(let j=0;j<e.length;++j)C.push(...Tt(e[j].dims));C.push(...Tt(r));let k=gt("output",n,r.length),u=k.indicesGet("indices",t),B=Array.from(Array(a.length).keys()).map(j=>`uniforms.sizeInConcatAxis${j}`).join(","),R=j=>`

  ${(()=>{j.registerUniform("outputSize","u32");for(let ee=0;ee<e.length;ee++)j.registerUniform(`sizeInConcatAxis${ee}`,"u32");return j.declareVariables(...o,k)})()}

  ${wo(a.length,B)}

  ${j.mainStart()}
    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${k.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${u});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${a.length}u>(${B});
      ${u} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${au(o,k)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:C}),getShaderSource:R}},uu=(e,t)=>{let r=e.inputs,n=r[0].dims,i=Se.normalizeAxis(t.axis,n.length);ou(r,i);let a=n.slice();a[i]=r.reduce((d,p)=>d+(p.dims.length>i?p.dims[i]:0),0);let o=r.filter(d=>Se.size(d.dims)>0);e.compute(lu(o,i,a,r[0].dataType),{inputs:o})},yo=e=>it({axis:e.axis})}),Js,Zs,Ns,bo,en=w(()=>{zt(),Dt(),Js=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Zs=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Ns=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},bo=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[r,n]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=(e==null?void 0:e.activation_params)||[Qr,Jr];return{activation:t,clipMax:n,clipMin:r}}else if(t==="LeakyRelu"){let[r]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:r}}return{activation:t}}}),Wr,du,Mo=w(()=>{Wr=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},du=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),vo,Fc=w(()=>{vo=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Nn,ci,To=w(()=>{zt(),Dt(),qt(),en(),Nn=(e,t,r,n,i)=>{let a=n-r;return`
      ${Array.from({length:r}).map((o,d)=>`
      if (${bt(t.shape,d,t.rank)} != 1) {
        ${t.indicesSet(e,d,bt(i,d+a,n))}
      } else {
        ${t.indicesSet(e,d,0)}
      }`).join("")}
`},ci=(e,t,r,n,i=!1,a)=>{let o=e[0].dims,d=e[1].dims,p=o[o.length-2],h=d[d.length-1],C=o[o.length-1],k=or(h),u=or(C),B=or(p),R=Se.size(r)/k/B,j=e.length>2,ee=n?n.slice(0,-2):r.slice(0,-2),re=[Se.size(ee),p,h],X=[{type:12,data:R},{type:12,data:p},{type:12,data:h},{type:12,data:C}];Zs(t,X),X.push(...Tt(ee,o,d)),j&&X.push(...Tt(e[2].dims)),X.push(...Tt(re));let me=pe=>{let Me=Qs("batch_dims",e[0].dataType,ee.length),$e=Le("a",e[0].dataType,o.length,u),Ie=Le("b",e[1].dataType,d.length,k),Ue=gt("output",e[0].dataType,re.length,k),at=Zt(Ue.type.tensor),Et=Js(t,Ue.type.value,at),Kt=[$e,Ie],Yt="";if(j){let $t=i?k:1;Kt.push(Le("bias",e[2].dataType,e[2].dims.length,$t)),Yt=`${i?`value += bias[col / ${$t}];`:`value += ${Ue.type.value}(bias[row + i]);`}`}let kt=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ns(t,kt);let Jt=()=>{let $t=`var a_data: ${$e.type.value};`;for(let jt=0;jt<u;jt++)$t+=`
              let b_data${jt} = b[(b_offset + (k + ${jt}) * uniforms.N + col) / ${k}];`;for(let jt=0;jt<B;jt++){$t+=`a_data = a[(a_offset + (row + ${jt}) * uniforms.K + k) / ${u}];`;for(let Mr=0;Mr<u;Mr++)$t+=`
            values[${jt}] = fma(${Ie.type.value}(a_data${u===1?"":`[${Mr}]`}), b_data${Mr}, values[${jt}]);
`}return $t};return`
  ${pe.registerUniforms(kt).registerInternalVariables(Me).declareVariables(...Kt,Ue)}
  ${pe.mainStart()}
    ${pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${k})) * ${k};
    var index1 = global_idx / (uniforms.N / ${k});
    let stride1 = uniforms.M / ${B};
    let row = (index1 % stride1) * ${B};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${Me.offsetToIndices("batch")};`}

    var a_indices: ${$e.type.indices};
    ${Nn("a_indices",$e,$e.rank-2,Me.rank,"batch_indices")}
    ${$e.indicesSet("a_indices",$e.rank-2,0)}
    ${$e.indicesSet("a_indices",$e.rank-1,0)}
    let a_offset = ${$e.indicesToOffset("a_indices")};

    var b_indices: ${Ie.type.indices};
    ${Nn("b_indices",Ie,Ie.rank-2,Me.rank,"batch_indices")}
    ${Ie.indicesSet("b_indices",Ie.rank-2,0)}
    ${Ie.indicesSet("b_indices",Ie.rank-1,0)}
    let b_offset = ${Ie.indicesToOffset("b_indices")};
    var values: array<${Ue.type.value}, ${B}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${u}) {
      ${Jt()}
    }
    for (var i = 0u; i < ${B}u; i++) {
      var value = values[i];
      ${Yt}
      ${Et}
      let cur_indices = ${Ue.type.indices}(batch, row + i, col);
      let offset = ${Ue.indicesToOffset("cur_indices")};
      ${Ue.setByOffset(`offset / ${k}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${k};${u};${B};${i}`,inputDependencies:j?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:a?a(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:X}),getShaderSource:me}}}),cu,xo,Eo,Po,Co,ko,pu,pi,So=w(()=>{zt(),Dt(),qt(),en(),To(),Mo(),cu=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,xo=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Eo=(e,t,r="f32",n,i=!1,a=32,o=!1,d=32)=>{let p=t[1]*e[1],h=t[0]*e[0],C=i?p:a,k=i?a:p,u=C/t[0],B=a/t[1];if(!((i&&u===4&&e[1]===4||!i&&(u===3||u===4))&&C%t[0]===0&&a%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${u} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${u} must be 3 or 4.
  tileAWidth ${C} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${u}<${r}>, ${C/u}>, ${k}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${a}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${u};
const tileInner = ${a};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${p};

  let num_tiles = ${o?`${Math.ceil(d/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${d}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${B};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${cu(i,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${B}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${u===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${xo(i,u)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Po=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Co=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ko=(e,t,r="f32",n,i=!1,a=32,o=!1,d=32,p=!1)=>{let h=e[1]*t[1],C=e[0]*t[0],k=i?h:a,u=i?a:h;if(!(u%t[1]===0&&k%t[0]===0&&a%t[1]===0))throw new Error(`tileAHight ${u} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${k} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);let B=u/t[1],R=k/t[0],j=a/t[1],ee=p?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${h};
    let globalColStart = i32(workgroupId.x) * ${C};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${k}; inputCol = inputCol + ${t[0]}) {
          ${Po(i,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${C}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${h};

let tileRowA = i32(localId.y) * ${B};
let tileColA = i32(localId.x) * ${R};
let tileRowB = i32(localId.y) * ${j};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${B}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${R}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Po(i,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${j}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Co(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${k}>, ${u}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${C}>, ${a}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${a};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(d/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${d}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${ee}
  }
`},pu=(e,t,r,n,i=!1)=>{let[a,o,d,p]=n,h=Zt(n[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${Wr(e,h)} {
      var value = ${Wr(e,h)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${Nn("aIndices",o,o.rank-2,a.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${Wr(e,h)} {
      var value = ${Wr(e,h)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${d.type.indices};
        ${Nn("bIndices",d,d.rank-2,a.rank,"batchIndices")}
        ${d.indicesSet("bIndices",d.rank-2,"u32(row)")}
        ${d.indicesSet("bIndices",d.rank-1,"u32(colIn)")}
        value = ${d.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Wr(e,h)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${i?"bias[colIn]":`${Wr(e,h)}(bias[row])`};`:""}
        ${r}
        ${p.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},pi=(e,t,r,n,i=!1,a)=>{let o=e[0].dims,d=e[1].dims,p=o.slice(0,-2),h=d.slice(0,-2),C=n?n.slice(0,-2):r.slice(0,-2),k=Se.size(C),u=o[o.length-2],B=o[o.length-1],R=d[d.length-1],j=B%4===0&&R%4===0,ee=u<=8?[4,1,1]:[4,4,1],re=[8,8,1],X=[Math.ceil(R/re[0]/ee[0]),Math.ceil(u/re[1]/ee[1]),Math.ceil(k/re[2]/ee[2])],me=j?4:1,pe=[...p,u,B/me],Me=pe.length,$e=[...h,B,R/me],Ie=$e.length,Ue=[k,u,R/me],at=[{type:6,data:u},{type:6,data:R},{type:6,data:B}];Zs(t,at),at.push(...Tt(C,pe,$e));let Et=["rank","rank"],Kt=e.length>2;Kt&&(at.push(...Tt(e[2].dims)),Et.push("rank")),at.push(...Tt(Ue));let Yt=kt=>{let Jt=C.length,$t=Qs("batchDims",e[0].dataType,Jt,1),jt=Zt(e[0].dataType),Mr=Le("a",e[0].dataType,Me,me),Ht=Le("b",e[1].dataType,Ie,me),Gt=gt("result",e[0].dataType,Ue.length,me),Pr=[Mr,Ht];if(Kt){let ms=i?me:1;Pr.push(Le("bias",e[2].dataType,e[2].dims.length,ms))}let nt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ns(t,nt);let Pt=Zt(Gt.type.tensor),cr=Js(t,Gt.type.value,Pt),Lr=pu(me,Kt,cr,[$t,Mr,Ht,Gt],i);return`
  ${kt.registerUniforms(nt).registerInternalVariables($t).declareVariables(...Pr,Gt)}
  ${Lr}
  ${j?Eo(ee,re,jt,$t):ko(ee,re,jt,$t)}
                   `};return{name:"MatMul",shaderCache:{hint:`${ee};${t.activation};${j};${i}`,inputDependencies:Et},getRunData:()=>({outputs:[{dims:a?a(r):r,dataType:e[0].dataType}],dispatchGroup:{x:X[0],y:X[1],z:X[2]},programUniforms:at}),getShaderSource:Yt}}}),hi,hu,Dc=w(()=>{zt(),ts(),qt(),en(),Mo(),Fc(),So(),hi=(e,t,r,n,i=!1,a,o=4,d=4,p=4,h="f32")=>{let C=at=>{switch(at){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${at} is not supported.`)}},k=at=>{switch(at){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${at} is not supported.`)}},u=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,B=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,R=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",j=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",ee=e?"row":"col",re=e?"col":"row",X=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${ee} / outWidth;
    let outCol = ${ee} % outWidth;

    let WRow = ${re} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${re} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${re} % inChannels;
    var resData = ${Wr(o,h)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${R} && xCol >= 0 && xCol < ${j}) {
      ${u}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${C(o)}
    }
    return resData;`,me=e?t&&n?`
    let col = colIn * ${o};
    ${X}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${X}
    }
    return ${Wr(o,h)}(0.0);`:n&&r?`
    let col = colIn * ${o};
    ${X}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${X}
    }
    return ${Wr(o,h)}(0.0);`,pe=`${k(d)}`,Me=Wr(p,h),$e=Wr(e?o:d,h),Ie=Wr(e?d:o,h),Ue=Js(a,Me,h);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${$e} {
      ${e?me:pe}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Ie} {
      ${e?pe:me}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${Me}) {
      let col = colIn * ${p};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${B}
      ${du(i)}
      ${Ue}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},hu=(e,t,r,n,i,a,o,d,p)=>{let h=t.format==="NHWC",C=h?e[0].dims[3]:e[0].dims[1],k=r[0],u=h?r[2]:r[3],B=h?r[1]:r[2],R=h?r[3]:r[1],j=h&&(C%4===0||C%3===0)&&R%4===0,ee=h?R:u*B,re=h?u*B:R,X=[8,8,1],me=n<=8?[4,1,1]:[4,4,1],pe=[Math.ceil(ee/X[0]/me[0]),Math.ceil(re/X[1]/me[1]),Math.ceil(k/X[2]/me[2])];ir("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${pe}`);let Me=j?h&&C%4!==0?3:4:1,$e=X[1]*me[1],Ie=X[0]*me[0],Ue=Math.max(X[0]*Me,X[1]),at=n%$e===0,Et=i%Ie===0,Kt=a%Ue===0,Yt=j?[Me,4,4]:[1,1,1],kt=[{type:6,data:n},{type:6,data:i},{type:6,data:a},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Zs(t,kt),kt.push(...Tt(e[0].dims,e[1].dims));let Jt=["rank","rank"];o&&(kt.push(...Tt(e[2].dims)),Jt.push("rank")),kt.push(...Tt(r));let $t=jt=>{let Mr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ns(t,Mr);let Ht=j?4:1,Gt=Zt(e[0].dataType),Pr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${j?`vec4<${Gt}>`:Gt}) {
        result[flatIndex] = ${j?`vec4<${Gt}>`:Gt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${j?`vec4<${Gt}>`:Gt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${j?"/ 4":""}, value);
      }`,nt=Le("x",e[0].dataType,e[0].dims.length,Me===3?1:Me),Pt=Le("w",e[1].dataType,e[1].dims.length,Ht),cr=[nt,Pt],Lr=gt("result",e[0].dataType,r.length,Ht);if(o){let ms=Le("bias",e[2].dataType,e[2].dims.length,Ht);cr.push(ms),Pr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${j?`vec4<${Gt}>`:Gt} {
          return bias[coords.${h?"w":"y"}${j?"/ 4":""}];
        }`}return`
        ${vo("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${jt.registerUniforms(Mr).declareVariables(...cr,Lr)}
        ${Pr}
        ${hi(h,at,Et,Kt,o,t,Yt[0],Yt[1],Yt[2],Gt)}
        ${j?Eo(me,X,Gt,void 0,!h,Ue):ko(me,X,Gt,void 0,!h,Ue,!1,void 0,d)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${Me};${j};${at};${Et};${Kt};${$e};${Ie};${Ue}`,inputDependencies:Jt},getRunData:()=>({outputs:[{dims:p?p(r):r,dataType:e[0].dataType}],dispatchGroup:{x:pe[0],y:pe[1],z:pe[2]},programUniforms:kt}),getShaderSource:$t}}}),mu,$o,jn,Ao,Io,fu,Oo,_u,Lc=w(()=>{zt(),ts(),Dt(),qt(),en(),Mo(),mu=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},$o=e=>typeof e=="number"?[e,e,e]:e,jn=(e,t)=>t<=1?e:e+(e-1)*(t-1),Ao=(e,t,r,n=1)=>{let i=jn(t,n);return Math.floor((e[0]*(r-1)-r+i)/2)},Io=(e,t,r,n,i)=>{i==null&&(i=Ao(e,t[0],n[0]));let a=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*i>=t[o]&&(a[o]=Math.trunc((e[o]-t[o]+2*i)/n[o]+1));return a},fu=(e,t,r,n,i,a,o,d,p,h)=>{let C,k,u,B;if(e==="VALID"&&(e=0),typeof e=="number"){C={top:e,bottom:e,left:e,right:e,front:e,back:e};let R=Io([t,r,n,1],[d,p,h],1,[i,a,o],e);k=R[0],u=R[1],B=R[2]}else if(Array.isArray(e)){if(!e.every((j,ee,re)=>j===re[0]))throw Error(`Unsupported padding parameter: ${e}`);C={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let R=Io([t,r,n,1],[d,p,h],1,[i,a,o],e[0]);k=R[0],u=R[1],B=R[2]}else if(e==="SAME_UPPER"){k=Math.ceil(t/i),u=Math.ceil(r/a),B=Math.ceil(n/o);let R=(k-1)*i+d-t,j=(u-1)*a+p-r,ee=(B-1)*o+h-n,re=Math.floor(R/2),X=R-re,me=Math.floor(j/2),pe=j-me,Me=Math.floor(ee/2),$e=ee-Me;C={top:me,bottom:pe,left:Me,right:$e,front:re,back:X}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:C,outDepth:k,outHeight:u,outWidth:B}},Oo=(e,t,r,n,i,a=!1,o="channelsLast")=>{let d,p,h,C,k;if(o==="channelsLast")[d,p,h,C,k]=e;else if(o==="channelsFirst")[d,k,p,h,C]=e;else throw new Error(`Unknown dataFormat ${o}`);let[u,,B,R,j]=t,[ee,re,X]=$o(r),[me,pe,Me]=$o(n),$e=jn(B,me),Ie=jn(R,pe),Ue=jn(j,Me),{padInfo:at,outDepth:Et,outHeight:Kt,outWidth:Yt}=fu(i,p,h,C,ee,re,X,$e,Ie,Ue),kt=a?u*k:u,Jt=[0,0,0,0,0];return o==="channelsFirst"?Jt=[d,kt,Et,Kt,Yt]:o==="channelsLast"&&(Jt=[d,Et,Kt,Yt,kt]),{batchSize:d,dataFormat:o,inDepth:p,inHeight:h,inWidth:C,inChannels:k,outDepth:Et,outHeight:Kt,outWidth:Yt,outChannels:kt,padInfo:at,strideDepth:ee,strideHeight:re,strideWidth:X,filterDepth:B,filterHeight:R,filterWidth:j,effectiveFilterDepth:$e,effectiveFilterHeight:Ie,effectiveFilterWidth:Ue,dilationDepth:me,dilationHeight:pe,dilationWidth:Me,inShape:e,outShape:Jt,filterShape:t}},_u=(e,t,r,n,i,a)=>{let o=a==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let d=[64,1,1],p={x:r.map((ee,re)=>re)},h=[Math.ceil(mu(p.x.map(ee=>r[ee]))/d[0]),1,1];ir("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let C=1,k=Se.size(r),u=[{type:12,data:k},{type:12,data:n},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];Zs(t,u),u.push(...Tt(e[0].dims,e[1].dims));let B=["rank","rank"],R=e.length===3;R&&(u.push(...Tt(e[2].dims)),B.push("rank")),u.push(...Tt(r));let j=ee=>{let re=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Ns(t,re);let X=1,me=Zt(e[0].dataType),pe=Le("x",e[0].dataType,e[0].dims.length,C),Me=Le("W",e[1].dataType,e[1].dims.length,X),$e=[pe,Me],Ie=gt("result",e[0].dataType,r.length,X),Ue="";if(R){let Kt=Le("bias",e[2].dataType,e[2].dims.length,X);$e.push(Kt),Ue+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${me} {
          return bias[${o?bt("coords",4,5):bt("coords",1,5)}];
        }`}let at=Wr(C,me),Et=Js(t,at,me);return`
            ${Ue}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${pe.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${Me.getByIndices("aIndices")};
            }
          ${ee.registerUniforms(re).declareVariables(...$e,Ie)}
          ${ee.mainStart()}
          ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Ie.offsetToIndices("global_idx")};
              let batch = ${bt("coords",0,pe.rank)};
              let d2 = ${o?bt("coords",pe.rank-1,pe.rank):bt("coords",1,pe.rank)};
              let xFRCCorner = vec3<u32>(${o?bt("coords",1,pe.rank):bt("coords",2,pe.rank)},
              ${o?bt("coords",2,pe.rank):bt("coords",3,pe.rank)},
              ${o?bt("coords",3,pe.rank):bt("coords",4,pe.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?bt("uniforms.x_shape",1,pe.rank):bt("uniforms.x_shape",2,pe.rank)};
              let xShapeZ = ${o?bt("uniforms.x_shape",2,pe.rank):bt("uniforms.x_shape",3,pe.rank)};
              let xShapeW = ${o?bt("uniforms.x_shape",3,pe.rank):bt("uniforms.x_shape",4,pe.rank)};
              let xShapeU = ${o?bt("uniforms.x_shape",4,pe.rank):bt("uniforms.x_shape",1,pe.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${R?"value = value + getBiasByOutputCoords(coords)":""};
              ${Et}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${o};${C};${R}`,inputDependencies:B},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:u}),getShaderSource:j}}}),gu,wu,yu=w(()=>{zt(),Dt(),qt(),en(),gu=(e,t,r,n)=>{let i=e.length>2,a=i?"value += b[output_channel];":"",o=e[0].dims,d=e[1].dims,p=t.format==="NHWC",h=p?r[3]:r[1],C=h/t.group,k=p&&C>=4?or(h):1,u=Se.size(r)/k,B=[{type:12,data:u},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:C}];Zs(t,B),B.push(...Tt(o,[d[0],d[1],d[2],d[3]/k]));let R=i?["rank","rank","rank"]:["rank","rank"];B.push(...Tt([r[0],r[1],r[2],r[3]/k]));let j=ee=>{let re=gt("output",e[0].dataType,r.length,k),X=Zt(re.type.tensor),me=Js(t,re.type.value,X),pe=Le("x",e[0].dataType,o.length),Me=Le("w",e[1].dataType,d.length,k),$e=[pe,Me];i&&$e.push(Le("b",e[2].dataType,e[2].dims,k));let Ie=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Ns(t,Ie);let Ue=p?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${pe.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${Me.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${pe.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${Me.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${ee.registerUniforms(Ie).declareVariables(...$e,re)}

  ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${re.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${p?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${k} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${p?2:1}];

    var value: ${re.type.value} = ${re.type.value}(0);
    ${Ue}
    ${a}
    ${me}
    ${re.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${k}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:B}),getShaderSource:j}},wu=(e,t,r,n)=>{let i=e.length>2,a=or(r[3]),o=or(r[2]),d=Se.size(r)/a/o,p=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/a],h=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/a],C=[r[0],r[1],r[2],r[3]/a],k=[{type:12,data:d},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Zs(t,k),k.push(...Tt(p,h,C));let u=(o-1)*t.strides[1]+h[1],B=R=>{let j=gt("output",e[0].dataType,C.length,a),ee=Zt(j.type.tensor),re=Js(t,j.type.value,ee),X=Le("x",e[0].dataType,p.length,a),me=Le("w",e[1].dataType,h.length,a),pe=[X,me];i&&pe.push(Le("b",e[2].dataType,e[2].dims,a));let Me=i?"value += b[output_channel];":"",$e=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ns(t,$e),`
  ${R.registerUniforms($e).declareVariables(...pe,j)}
  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${X.type.value}, ${u}>;
    var values: array<${j.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${h[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${u}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${X.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${X.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${h[1]}; w_width++) {
          let w_val = ${me.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${Me}
      ${re}
      ${j.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${a};${o};${u};${h[0]};${h[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:k}),getShaderSource:B}}}),bu,mi,Fo,fi,Do,_i,Mu,vu,gi,zc=w(()=>{Dt(),Dc(),Lc(),So(),yu(),en(),To(),Rs(),bu=(e,t,r,n,i,a)=>{let o=e[0],d=e.slice(a?1:2,a?3:4),p=d.length,h=t[0],C=t.slice(2).map((u,B)=>u+(u-1)*(r[B]-1)),k=d.map((u,B)=>u+n[B]+n[B+p]).map((u,B)=>Math.floor((u-C[B]+i[B])/i[B]));return k.splice(0,0,o),k.splice(a?3:1,0,h),k},mi=[2,3,1,0],Fo=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},fi=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let a=2;a<t[1].dims.length;++a)r[a-2]===0&&(r[a-2]=t[1].dims[a]);let n=e.pads.slice();yr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},Do=e=>{let t=bo(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,a=e.group,o=e.kernel_shape,d=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:a,kernelShape:o,pads:d,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},_i=(e,t,r,n)=>{let i=r.format==="NHWC",a=bu(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i);if(r.group!==1){let $e=[t[0]];if(i){let Ie=e.kernelCustomData.wT??e.compute(ss(t[1],mi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ie),$e.push(Ie)}else $e.push(t[1]);t.length===3&&$e.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(wu($e,r,a,n),{inputs:$e}):e.compute(gu($e,r,a,n),{inputs:$e});return}let o=t.length===3,d=t[0].dims[i?1:2],p=t[0].dims[i?2:3],h=t[0].dims[i?3:1],C=t[1].dims[2],k=t[1].dims[3],u=a[i?1:2],B=a[i?2:3],R=a[i?3:1],j=i&&C===d&&k===p&&r.pads[0]===0&&r.pads[1]===0;if(j||C===1&&k===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let $e=a[0],Ie,Ue,at,Et=[];if(i){let kt=e.kernelCustomData.wT??e.compute(ss(t[1],mi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=kt),j){let Jt=d*p*h;Ie=t[0].reshape([1,$e,Jt]),Ue=kt.reshape([1,Jt,R]),at=[1,$e,R]}else Ie=t[0].reshape([$e,d*p,h]),Ue=kt.reshape([1,h,R]),at=[$e,u*B,R];Et.push(Ie),Et.push(Ue)}else Ie=t[0].reshape([$e,h,d*p]),Ue=t[1].reshape([1,R,h]),at=[$e,R,u*B],Et.push(Ue),Et.push(Ie);o&&Et.push(t[2]);let Kt=at[2],Yt=Et[0].dims[Et[0].dims.length-1];Kt<8&&Yt<8?e.compute(ci(Et,r,a,at,i,n),{inputs:Et}):e.compute(pi(Et,r,a,at,i,n),{inputs:Et});return}let ee=!0,re=e.kernelCustomData.wT??e.compute(ss(t[1],mi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=re);let X=[t[0],re];o&&X.push(t[2]);let me=i?u*B:R,pe=i?R:u*B,Me=C*k*h;e.compute(hu(X,r,a,me,pe,Me,o,ee,n),{inputs:X})},Mu=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],a=[1].concat(t.strides),o=[1].concat(t.dilations),d=[1].concat(t.kernelShape),p=fi({...t,pads:i,strides:a,dilations:o,kernelShape:d},n);_i(e,n,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},vu=(e,t,r)=>{let n=r.format==="NHWC"?"channelsLast":"channelsFirst",i=fi(r,t),a=r.autoPad==="NOTSET"?r.pads:r.autoPad,o=Oo(t[0].dims,t[1].dims,r.strides,r.dilations,a,!1,n);e.compute(_u(t,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],n))},gi=(e,t)=>{if(Fo(e.inputs,t),e.inputs[0].dims.length===3)Mu(e,t);else if(e.inputs[0].dims.length===5)vu(e,e.inputs,t);else{let r=fi(t,e.inputs);_i(e,e.inputs,r)}}}),Tu,Bc=w(()=>{zt(),ts(),Dt(),qt(),Tu=(e,t,r)=>{let n=e.length>2,i=t.outputShape,a=t.format==="NHWC",o=t.group,d=e[1].dims,p=d[2]/o,h=d[3],C=a?or(h):1,k=Se.size(i)/C,u=[Math.ceil(k/64),1,1];ir("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let B=["rank","rank"],R=[t.strides[0],t.strides[1]],j=[t.kernelShape[a?1:2],t.kernelShape[a?2:3]],ee=[t.dilations[0],t.dilations[1]],re=[j[0]+(t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)),j[1]+(t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1))],X=[re[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),re[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],me=[{type:12,data:k},{type:12,data:R},{type:12,data:j},{type:12,data:ee},{type:12,data:re},{type:6,data:X},{type:12,data:p},{type:12,data:h},...Tt(e[0].dims,e[1].dims)];n&&(me.push(...Tt(e[2].dims)),B.push("rank")),me.push(...Tt(i));let pe=Me=>{let $e=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:R.length},{name:"filter_dims",type:"u32",length:j.length},{name:"dilations",type:"u32",length:j.length},{name:"effective_filter_dims",type:"u32",length:re.length},{name:"pads",type:"i32",length:X.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Ie=Zt(e[0].dataType),Ue=a?1:2,at=a?2:3,Et=a?3:1,Kt=Le("W",e[1].dataType,e[1].dims.length,C),Yt=Le("Dy",e[0].dataType,e[0].dims.length),kt=[Yt,Kt];n&&kt.push(Le("bias",e[2].dataType,[i[Et]].length,C));let Jt=gt("result",e[0].dataType,i.length,C),$t=`
            let outputIndices = ${Jt.offsetToIndices(`global_idx * ${C}`)};
            let batch = ${Jt.indicesGet("outputIndices",0)};
            let d1 = ${Jt.indicesGet("outputIndices",Et)};
            let r = ${Jt.indicesGet("outputIndices",Ue)};
            let c = ${Jt.indicesGet("outputIndices",at)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${Jt.type.value}(0.0);
            for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${Ie}(dyRCorner) + ${Ie}(wR)) / ${Ie}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${Ie}(uniforms.Dy_shape[${Ue}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);

              for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${Ie}(dyCCorner) + ${Ie}(wC)) / ${Ie}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${Ie}(uniforms.Dy_shape[${at}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                  let xValue = ${a?Yt.get("batch","idyR","idyC","inputChannel"):Yt.get("batch","inputChannel","idyR","idyC")};
                  let w_offset = ${Kt.indicesToOffset(`${Kt.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
                  let wValue = ${Kt.getByOffset(`w_offset / ${C}`)};
                  dotProd = dotProd + xValue * wValue;
                  inputChannel = inputChannel + 1;
                }
              }
            }
            let value = dotProd${n?` + bias[d1 / ${C}]`:""};
            ${Jt.setByOffset("global_idx","value")};
          `;return`
    ${Me.registerUniforms($e).declareVariables(...kt,Jt)}
      ${Me.mainStart()}
      ${Me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${$t}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${C}`,inputDependencies:B},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:me}),getShaderSource:pe}}}),xu,Eu,Pu,wi,Cu,ku,yi,Su,$u,tn=w(()=>{Bc(),en(),Rs(),xu=(e,t,r,n,i,a)=>(e-1)*t+r+(n-1)*i+1-a,Eu=(e,t,r,n,i)=>{let a=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=a,r[i]=e-a):t==="SAME_LOWER"&&(r[n]=e-a,r[i]=a)},Pu=(e,t,r,n,i,a,o,d,p,h)=>{let C=e.length-2,k=h.length===0;p.length<C&&p.push(...Array(C-p.length).fill(0));let u=e[0],B=t[d?3:1]*i;for(let R=0,j=e.length-C-(d?1:0);R<C;++R,++j){let ee=e[j],re=k?ee*o[R]:h[R],X=xu(ee,o[R],a[R],t[j],r[R],re);Eu(X,n,a,R,R+C),k&&h.push(o[R]*(ee-1)+p[R]+(t[j]-1)*r[R]+1-a[R]-a[R+C])}h.splice(0,0,u),h.splice(d?3:1,0,B)},wi=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((k,u)=>k*u,1)===0){r.length=0;for(let k=2;k<t[1].dims.length;++k)r.push(t[1].dims[k])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),a=e.outputShape.slice(),o=e.outputPadding.slice(),d=t[0].dims,p=e.dilations.slice();if(p.reduce((k,u)=>k+u,0)===0){let k=t[0].dims.length-2;p=new Array(k).fill(1)}let h=e.strides.slice();if(h.reduce((k,u)=>k+u,0)===0){let k=t[0].dims.length-2;h=new Array(k).fill(1)}Pu(d,r,p,e.autoPad,e.group,i,h,n,o,a);let C=Object.assign({},e);return Object.assign(C,{kernelShape:r,pads:i,outputPadding:o,outputShape:a,dilations:p,strides:h}),C},Cu=e=>{let t=bo(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,a=e.group,o=e.kernelShape,d=e.pads,p=e.strides,h=e.wIsConst(),C=e.outputPadding,k=e.outputShape;return{autoPad:n,format:r,dilations:i,group:a,kernelShape:o,outputPadding:C,outputShape:k,pads:d,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},ku=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let a=e[0].dims.length-2;if(t.dilations.reduce((o,d)=>o+d,0)>0&&t.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(t.strides.reduce((o,d)=>o+d,0)>0&&t.strides.length!==a)throw new Error(`strides should be ${a}D`);if(t.pads.reduce((o,d)=>o+d,0)>0&&t.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(t.outputPadding.length!==a&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${a}D`);if(t.kernelShape.reduce((o,d)=>o+d,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},yi=(e,t,r,n)=>{let i=e.kernelCustomData.wT??e.compute(ss(t[1],[2,3,0,1]),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i);let a=[t[0],i];t.length===3&&a.push(t[2]),e.compute(Tu(a,r,n),{inputs:a})},Su=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let a=t.dilations;(a.length===0||a[0]===0)&&(a=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let d=t.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],o=[1].concat(o),a=[1].concat(a),i=[1].concat(i);let p=wi({...t,pads:d,strides:o,dilations:a,kernelShape:i},n);yi(e,n,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},$u=(e,t)=>{if(ku(e.inputs,t),e.inputs[0].dims.length===3)Su(e,t);else{let r=wi(t,e.inputs);yi(e,e.inputs,r)}}}),Au,Iu,Ou,Rc=w(()=>{zt(),Dt(),Ct(),qt(),Au=(e,t,r,n)=>{let i=Se.size(t),a=t.length,o=Le("input",e,a),d=gt("output",e,a),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=Se.normalizeAxis(p,a),C=k=>{let u=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,B=bt("uniforms.input_shape","uniforms.axis",a),R=n.reverse?u+(n.exclusive?" + 1":""):"0",j=n.reverse?B:u+(n.exclusive?"":" + 1");return`
                ${k.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,d)}
                ${k.mainStart()}
                  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${d.offsetToIndices("global_idx")};
                  var sum = ${d.type.value}(0);
                  let first : i32 = ${R};
                  let last : i32 = ${j};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${d.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Tt(t,t)]}),getShaderSource:C}},Iu=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(Au(n,r,i,t),{inputs:[0]})},Ou=e=>{let t=e.exclusive===1,r=e.reverse===1;return it({exclusive:t,reverse:r})}}),Lo,Fu,Du,Lu,zu,zo=w(()=>{zt(),Dt(),Ct(),qt(),Lo=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Fu=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let a=0;a<t;++a)i.push(r.indicesSet("a",e[a],`i[${a}]`));return i.push("return a;}"),i.join(`
`)},Du=(e,t)=>{let r,n,i,a,o,d,p=t.format==="NHWC",h=t.blocksize,C=t.mode==="DCR";p?([r,n,i,a]=e.dims,o=C?[r,n,i,h,h,a/h**2]:[r,n,i,a/h**2,h,h],d=C?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,i,a]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=C?[r,h,h,a/h**2,n,i]:[r,a/h**2,h,h,n,i],d=C?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let k=e.reshape(o),u=k.dims.length,B=e.dataType,R=Le("a",B,u),j=gt("output",B,u),ee=re=>`
  ${re.registerUniform("output_size","u32").declareVariables(R,j)}

  ${Fu(d,u,R,j)}

  ${re.mainStart()}
    ${re.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${j.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${j.setByOffset("global_idx",R.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:re=>{let X=p?[r,n*h,i*h,a/h**2]:[r,a/h**2,n*h,i*h],me=Se.size(X),pe=k.dims,Me=Se.sortBasedOnPerm(pe,d);return{outputs:[{dims:X,dataType:re[0].dataType}],dispatchGroup:{x:Math.ceil(me/64)},programUniforms:[{type:12,data:me},...Tt(pe,Me)]}},getShaderSource:ee}},Lu=(e,t)=>{Lo(e.inputs),e.compute(Du(e.inputs[0],t))},zu=e=>it({blocksize:e.blocksize,mode:e.mode,format:e.format})}),bi,Un,Bo,Wn,Bu,Ru,Nu,Ro,Mi,ju,Uu,Nc=w(()=>{zt(),Dt(),Ct(),qt(),bi="[a-zA-Z]|\\.\\.\\.",Un="("+bi+")+",Bo="^"+Un+"$",Wn="("+Un+",)*"+Un,Bu="^"+Wn+"$",Ru=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},Nu=class{constructor(e,t){var i;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(Bu)))throw new Error("Invalid LHS term");if(r.split(",").forEach((a,o)=>{let d=e[o].dims.slice();if(!a.match(RegExp(Bo)))throw new Error("Invalid LHS term");let p=this.processTerm(a,!0,d,o);this.lhs.push(p)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([a,o])=>o.count===1||a==="...").map(([a])=>a).join("");else if(!n.match(RegExp(Un)))throw new Error("Invalid RHS");(i=n.match(RegExp(bi,"g")))==null||i.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(a);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let i=r.length,a=!1,o=[],d=0;if(!e.match(RegExp(Bo))&&!t&&e!=="")throw new Error("Invalid LHS term");let p=e.match(RegExp(bi,"g")),h=new Ru(n);return p==null||p.forEach((C,k)=>{if(C==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let u=i-p.length+1;if(u<0)throw new Error("Ellipsis out of bounds");if(o=r.slice(d,d+u),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let B=0;B<o.length;B++){let R=String.fromCharCode(48+B);h.addSymbol(R,k+B),this.addSymbol(R,r[d++],n)}}else h.addSymbol(C,k+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(C,r[d++],n)}),h}},Ro=e=>e+"_max",Mi=(e,t,r,n)=>{let i=e.map(h=>h.length).map((h,C)=>Le(`input${C}`,t,h)),a=Se.size(n),o=gt("output",t,n.length),d=[...r.symbolToInfo.keys()].filter(h=>!r.rhs.symbolToIndices.has(h)),p=h=>{let C=[],k="var prod = 1.0;",u="var sum = 0.0;",B="sum += prod;",R=[],j=[],ee=[],re=[],X=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((pe,Me)=>{var $e;if(r.rhs.symbolToIndices.has(Me)){let Ie=($e=r.rhs.symbolToIndices.get(Me))==null?void 0:$e[0];Ie!==void 0&&r.lhs.forEach((Ue,at)=>{if(pe.inputIndices.includes(at)){let Et=Ue.symbolToIndices.get(Me);if(Et===void 0)throw new Error("Invalid symbol error");Et.forEach(Kt=>{C.push(`${i[at].indicesSet(`input${at}Indices`,Kt,o.indicesGet("outputIndices",Ie))}`)})}})}else r.lhs.forEach((Ie,Ue)=>{if(pe.inputIndices.includes(Ue)){let at=Ie.symbolToIndices.get(Me);if(at===void 0)throw new Error("Invalid symbol error");at.forEach(Et=>{R.push(`${i[Ue].indicesSet(`input${Ue}Indices`,Et,`${Me}`)}`)}),re.push(`prod *= ${i[Ue].getByIndices(`input${Ue}Indices`)};`)}}),j.push(`for(var ${Me}: u32 = 0; ${Me} < uniforms.${Ro(Me)}; ${Me}++) {`),ee.push("}")});let me=X?[...C,`let sum = ${i.map((pe,Me)=>pe.getByIndices(`input${Me}Indices`)).join(" * ")};`]:[...C,u,...j,...R,k,...re,B,...ee];return`
            ${h.registerUniforms(d.map(pe=>({name:`${Ro(pe)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((pe,Me)=>`var input${Me}Indices: ${i[Me].type.indices};`).join(`
`)}
            ${me.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=d.filter(k=>r.symbolToInfo.has(k)).map(k=>{var u;return{type:12,data:((u=r.symbolToInfo.get(k))==null?void 0:u.dimValue)||0}});h.push({type:12,data:a});let C=e.map((k,u)=>[...Tt(k)]).reduce((k,u)=>k.concat(u),h);return C.push(...Tt(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:C}},getShaderSource:p}},ju=(e,t)=>{let r=new Nu(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((a,o)=>a.dims);e.compute(Mi(i,e.inputs[0].dataType,r,n))},Uu=e=>{let t=e.equation.replace(/\s+/g,"");return it({equation:t})}}),jc,No,Wu,Vu,vn,Uc=w(()=>{zt(),Dt(),qt(),jc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},No=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},Wu=(e,t)=>e.length>t.length?No(e,t):No(t,e),Vu=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=Wu(t,r),i=e[0].dataType,a=i===9||Se.size(t)===1,o=i===9||t.length>0&&t[t.length-1]%4===0?4:1,d=a||n.length>0&&n[n.length-1]%4===0?4:1,p=Math.ceil(Se.size(n)/d),h=k=>{let u=Le("input",i,t.length,o),B=gt("output",i,n.length,d),R;if(i===9){let j=(ee,re,X="")=>`
          let outputIndices${re} = ${B.offsetToIndices(`outputOffset + ${re}u`)};
          let offset${re} = ${u.broadcastedIndicesToOffset(`outputIndices${re}`,B)};
          let index${re} = offset${re} / 4u;
          let component${re} = offset${re} % 4u;
          ${ee}[${re}] = ${X}(${u.getByOffset(`index${re}`)}[component${re}]);
        `;R=`
        let outputOffset = global_idx * ${d};
        var data = vec4<u32>(0);
        ${j("data",0,"u32")}
        ${j("data",1,"u32")}
        ${j("data",2,"u32")}
        ${j("data",3,"u32")}
        ${B.setByOffset("global_idx","data")}
      }`}else R=`
        let outputIndices = ${B.offsetToIndices(`global_idx * ${d}`)};
        let inputOffset = ${u.broadcastedIndicesToOffset("outputIndices",B)};
        let data = ${B.type.value}(${u.getByOffset(`inputOffset / ${o}`)});
        ${B.setByOffset("global_idx","data")}
      }`;return`
    ${k.registerUniform("vec_size","u32").declareVariables(u,B)}
    ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${R}`},C=[{type:12,data:p},...Tt(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length};${o}${d}`,inputDependencies:["rank"]},getShaderSource:h,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:C})}},vn=e=>{jc(e.inputs),e.compute(Vu(e.inputs),{inputs:[0]})}}),Gu,Ku,Wc=w(()=>{zt(),Dt(),qt(),po(),Gu=e=>{let t=e[0].dataType,r=Se.size(e[0].dims),n=Se.size(e[1].dims),i=n%4===0,a=o=>{let d=Le("x",t,[1],4),p=Le("bias",t,[1],4),h=gt("y",t,[1],4),C=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],k=B=>`
      let bias${B}_offset: u32 = (global_idx * 4 + ${B}) % uniforms.bias_size;
      let bias${B} = ${p.getByOffset(`bias${B}_offset / 4`)}[bias${B}_offset % 4];`,u=i?`
      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${k(0)}${k(1)}${k(2)}${k(3)}
      let bias = ${d.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(C).declareVariables(d,p,h)}

    ${ao(_r(t))}

    ${o.mainStart(Rr)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${d.getByOffset("global_idx")};
      ${u}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",lo("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:a,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/Rr/4)}})}},Ku=e=>{e.inputs.length<2||Se.size(e.inputs[1].dims)===0?uo(e):e.compute(Gu(e.inputs))}}),Hu,vi,Vc,qu,Gc=w(()=>{zt(),Dt(),Ct(),qt(),Hu=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},vi=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,a=Se.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(a,1,...n);let d=r[a],p=e[0].dataType===9?4:1,h=Math.ceil(Se.size(o)/p),C=[{type:12,data:h},{type:6,data:d},{type:12,data:a},...Tt(e[0].dims,e[1].dims,o)],k=u=>{let B=Le("data",e[0].dataType,e[0].dims.length,p),R=Le("inputIndices",e[1].dataType,e[1].dims.length),j=gt("output",e[0].dataType,o.length,p),ee=X=>{let me=n.length,pe=`var indicesIndices${X}  = ${R.type.indices}(0);`;for(let Me=0;Me<me;Me++)pe+=`${me>1?`indicesIndices${X}[${Me}]`:`indicesIndices${X}`} = ${o.length>1?`outputIndices${X}[uniforms.axis + ${Me}]`:`outputIndices${X}`};`;pe+=`
          var idx${X} = ${R.getByIndices(`indicesIndices${X}`)};
          if (idx${X} < 0) {
            idx${X} = idx${X} + uniforms.axisDimLimit;
          }
          var dataIndices${X} : ${B.type.indices};
        `;for(let Me=0,$e=0;Me<i;Me++)Me===a?(pe+=`${i>1?`dataIndices${X}[${Me}]`:`dataIndices${X}`} = u32(idx${X});`,$e+=me):(pe+=`${i>1?`dataIndices${X}[${Me}]`:`dataIndices${X}`} = ${o.length>1?`outputIndices${X}[${$e}]`:`outputIndices${X}`};`,$e++);return pe},re;if(e[0].dataType===9){let X=(me,pe,Me="")=>`
          let outputIndices${pe} = ${j.offsetToIndices(`outputOffset + ${pe}u`)};
          ${ee(pe)};
          let offset${pe} = ${B.indicesToOffset(`dataIndices${pe}`)};
          let index${pe} = offset${pe} / 4u;
          let component${pe} = offset${pe} % 4u;
          ${me}[${pe}] = ${Me}(${B.getByOffset(`index${pe}`)}[component${pe}]);
        `;re=`
        let outputOffset = global_idx * ${p};
        var value = vec4<u32>(0);
        ${X("value",0,"u32")}
        ${X("value",1,"u32")}
        ${X("value",2,"u32")}
        ${X("value",3,"u32")}
        ${j.setByOffset("global_idx","value")}
      `}else re=`
      let outputIndices = ${j.offsetToIndices("global_idx")};
      ${ee("")};
      let value = ${B.getByIndices("dataIndices")};
      ${j.setByOffset("global_idx","value")};
      `;return`
      ${u.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(B,R,j)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${re}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:C}),getShaderSource:k}},Vc=e=>it({axis:e.axis}),qu=(e,t)=>{let r=e.inputs;Hu(r),e.compute(vi(e.inputs,t))}}),Xu,Qu,Yu,Ju=w(()=>{zt(),Dt(),qt(),Xu=(e,t,r,n,i,a,o,d,p)=>{let h=[{type:12,data:a},{type:12,data:n},{type:12,data:i},{type:12,data:r},{type:12,data:o},{type:12,data:d},{type:12,data:p}],C=[a];h.push(...Tt(t.dims,C));let k=u=>{let B=Le("indices_data",t.dataType,t.dims.length),R=gt("input_slice_offsets_data",12,1,1),j=[B,R],ee=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:i.length},{name:"sizes_from_slice_dims_data",type:"u32",length:r.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${u.registerUniforms(ee).declareVariables(...j)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${i.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${r.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${i.length}_${r.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:C,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:h}),getShaderSource:k},{inputs:[t],outputs:[-1]})[0]},Qu=(e,t)=>{let r=e.inputs,n=r[0].dims,i=r[0].dataType,a=r[1].dims,o=a[a.length-1],d=Se.sizeToDimension(a,a.length-1),p=Se.sizeFromDimension(n,t.batchDims+o),h=Se.sizeToDimension(n,t.batchDims),C=Se.sizeFromDimension(n,t.batchDims),k=d/h,u=new Array(o),B=p;for(let pe=0;pe<o;++pe)u[o-1-pe]=B,B*=n[t.batchDims+o-1-pe];let R=Xu(e,r[1],u,t.batchDims,n,d,k,C,o),j=t.batchDims+o;if(j>n.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let ee=a.slice(0,-1).concat(n.slice(j)),re=Se.size(ee),X=[{type:12,data:re},{type:12,data:p},...Tt(r[0].dims,R.dims,ee)],me=pe=>{let Me=Le("data",r[0].dataType,r[0].dims.length),$e=Le("slice_offsets",12,R.dims.length),Ie=gt("output",r[0].dataType,ee.length);return`
          ${pe.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(Me,$e,Ie)}
            ${pe.mainStart()}
            ${pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:ee,dataType:i}],dispatchGroup:{x:Math.ceil(re/64)},programUniforms:X}),getShaderSource:me},{inputs:[r[0],R]})},Yu=e=>({batchDims:e.batch_dims,cacheKey:""})}),Zu,ed,jo,td,Kc=w(()=>{zt(),Dt(),Ct(),qt(),Zu=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=Se.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,i=e[0],a=e[2],o=e.length===4?e[3]:void 0;if(a.dims.length!==i.dims.length||!i.dims.map((d,p)=>p===r?Math.ceil(d/n)===a.dims[p]:d===a.dims[p]).reduce((d,p)=>d&&p,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==a.dims.length||!o.dims.map((d,p)=>d===a.dims[p]).reduce((d,p)=>d&&p,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},ed=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,a=Se.normalizeAxis(t.gatherAxis,i),o=Se.normalizeAxis(t.quantizeAxis,i),d=r.slice(0);d.splice(a,1,...n);let p=Se.size(d),h=e[2].dataType,C=e[0].dataType===22,k=[{type:12,data:p},{type:12,data:o},{type:12,data:a},{type:12,data:t.blockSize},...Tt(...e.map((B,R)=>B.dims),d)],u=B=>{let R=Le("data",e[0].dataType,e[0].dims.length),j=Le("inputIndices",e[1].dataType,e[1].dims.length),ee=Le("scales",e[2].dataType,e[2].dims.length),re=e.length>3?Le("zeroPoint",e[3].dataType,e[3].dims.length):void 0,X=gt("output",h,d.length),me=[R,j,ee];re&&me.push(re);let pe=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${B.registerUniforms(pe).declareVariables(...me,X)}
        ${B.mainStart()}
        let output_indices = ${X.offsetToIndices("global_idx")};
        var indices_indices = ${j.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${X.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${j.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${X.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${R.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${X.indicesGet("output_indices","i")};
          ${R.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${j.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[a]};
        }
        ${R.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${d.length}; i++) {
          let index = ${X.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${R.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${R.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${R.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${C?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${ee.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${ee.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${ee.getByIndices("scale_indices")};
        ${re?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${re.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${re.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${C?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${_r(h)}(quantized_data - zero_point) * scale;
        ${X.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((B,R)=>R!==1).map(B=>B.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(B,R)=>"rank")},getRunData:()=>({outputs:[{dims:d,dataType:h}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:k}),getShaderSource:u}},jo=(e,t)=>{let r=e.inputs;Zu(r,t),e.compute(ed(e.inputs,t))},td=e=>it({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Uo,rd,sd,Ti,Hc=w(()=>{zt(),Dt(),Ct(),qt(),Uo=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},rd=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,a=e[1].dims,o=e[1].dataType,d=Se.normalizeAxis(t.axis,i),p=r[d],h=a.slice(0),C=Se.size(h),k=Le("input",n,i),u=Le("indicesInput",o,a.length),B=gt("output",n,h.length),R=[{type:12,data:C},{type:6,data:p},{type:12,data:d}];return R.push(...Tt(r,a,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:R}),getShaderSource:j=>`
      ${j.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(k,u,B)}
      ${j.mainStart()}
      ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${B.offsetToIndices("global_idx")};

      var idx = ${u.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${k.type.indices}(outputIndices);
      ${k.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${k.getByIndices("inputIndices")};

      ${B.setByOffset("global_idx","value")};
  }`}},sd=e=>it({axis:e.axis}),Ti=(e,t)=>{let r=e.inputs;Uo(r),e.compute(rd(e.inputs,t))}}),nd,id,od,Wo,Vo=w(()=>{zt(),Dt(),qt(),nd=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},id=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,a,o]=Fr.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),d=[i,a];if(!d)throw new Error("Can't use gemm on the given tensors");let p=16,h=Math.ceil(a/p),C=Math.ceil(i/p),k=!0,u=Se.size(d),B=[{type:12,data:k?h:u},{type:12,data:i},{type:12,data:a},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],R=["type","type"];e.length===3&&(B.push(...Tt(e[2].dims)),R.push("rank")),B.push(...Tt(d));let j=re=>{let X="";t.transA&&t.transB?X="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?X="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?X="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(X="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let me=t.alpha===1?"":"value *= uniforms.alpha;",pe=Le("a",e[0].dataType,e[0].dims),Me=Le("b",e[1].dataType,e[1].dims),$e=pe.type.value,Ie=null,Ue=[pe,Me];e.length===3&&(Ie=Le("c",e[2].dataType,e[2].dims.length),Ue.push(Ie));let at=gt("output",e[0].dataType,d.length);Ue.push(at);let Et=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${re.registerUniforms(Et).declareVariables(...Ue)}

  ${re.mainStart()}
    ${re.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${$e}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${X}
    }

    ${me}
    ${Ie!=null?`let cOffset = ${Ie.broadcastedIndicesToOffset("vec2(m, n)",at)}; value += ${$e}(uniforms.beta) * ${Ie.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},ee=re=>{let X=Le("a",e[0].dataType,e[0].dims),me=Le("b",e[1].dataType,e[1].dims),pe=null,Me=[X,me];e.length===3&&(pe=Le("c",e[2].dataType,e[2].dims.length),Me.push(pe));let $e=gt("output",e[0].dataType,d.length);Me.push($e);let Ie=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],Ue="",at="";t.transA&&t.transB?(at=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${X.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${me.type.value}(0);
      }
      `,Ue="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(at=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${X.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${me.type.value}(0);
      }
      `,Ue="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(at=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${X.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${me.type.value}(0);
      }
      `,Ue="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(at=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${X.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${me.type.value}(0);
      }
      `,Ue="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let Et=t.alpha===1?"":"value *= uniforms.alpha;";return`
  ${re.registerUniforms(Ie).declareVariables(...Me)}
  var<workgroup> tile_a: array<array<${X.type.storage}, ${p}>, ${p}>;
  var<workgroup> tile_b: array<array<${me.type.storage}, ${p}>, ${p}>;
  ${re.mainStart([p,p,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${p};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${p};
    let num_tiles = (uniforms.K - 1) / ${p} + 1;
    var k_start = 0u;
    var value = ${$e.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${at}
      k_start = k_start + ${p};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${p}; k++) {
        ${Ue}
      }
      workgroupBarrier();
    }

    ${Et}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${pe!=null?`let cOffset = ${pe.broadcastedIndicesToOffset("vec2(m, n)",$e)}; value += ${$e.type.value}(uniforms.beta) * ${pe.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return k?{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:h*C},programUniforms:B}),getShaderSource:ee}:{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:B}),getShaderSource:j}},od=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Wo=(e,t)=>{nd(e.inputs),e.compute(id(e.inputs,t))}}),Ss,$s,rn,js,ad,ld,Go,ud,dd,Ko,qc,Xc,Ho,qo,Qc=w(()=>{zt(),Dt(),Ct(),qt(),[Ss,$s,rn,js]=[0,1,2,3],ad=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},ld=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,Go=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,ud=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,dd=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,Ko=(e,t,r)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {
     var pixel = ${t}(0);
     var indices = vec4<u32>(0);
     indices[${Ss}] = batch;
     indices[${$s}] = channel;`+(()=>{switch(r.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${rn}] = u32(r);
            indices[${js}] = u32(c);
          }
        `;case"border":return`
          indices[${rn}] = u32(clamp(r, 0, H - 1));
          indices[${js}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${rn}] = gs_reflect(r, border[1], border[3]);
          indices[${js}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${r.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,qc=(e,t,r)=>(()=>{switch(r.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Ss}], indices[${$s}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Ss}], indices[${$s}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Ss}], indices[${$s}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Ss}], indices[${$s}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Ss}], indices[${$s}], border);

          let dx2 = ${t}(f32(x2) - x);
          let dx1 = ${t}(x - f32(x1));
          let dy2 = ${t}(f32(y2) - y);
          let dy1 = ${t}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${t}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Ss}], indices[${$s}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${r.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Xc=(e,t)=>{let r=Le("x",e[0].dataType,e[0].dims.length),n=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],i=Le("grid",e[1].dataType,n.length,2),a=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];t.format==="NHWC"&&(a=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Ss,$s,rn,js]=[0,3,1,2]);let o=gt("output",e[0].dataType,a.length),d=r.type.value,p=Se.size(a),h=[{type:12,data:p},...Tt(e[0].dims,n,a)],C=k=>`
  ${k.registerUniform("output_size","u32").declareVariables(r,i,o)}
  ${ld}
  ${Go(d)}
  ${ud(t)}
  ${dd(t)}
  ${Ko(r,d,t)}

  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${rn}]);
      let W_in = i32(uniforms.x_shape[${js}]);

      ${t.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Ss}], indices[${rn}], indices[${js}]);
      let nxy = ${i.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${qc(o,d,t)}
  }`;return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:k=>{let u=Se.size(a);return{outputs:[{dims:a,dataType:k[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:h}},getShaderSource:C}},Ho=(e,t)=>{ad(e.inputs),e.compute(Xc(e.inputs,t))},qo=e=>it({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Yr,Xo,cd,Qo,Yo,Vn,pd,Jo=w(()=>{zt(),Dt(),Ct(),Xs(),Xi(),qt(),Rs(),Yr=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,Xo=(e,t)=>{let r=e[0],n=Yr(e,1),i=Yr(e,2),a=Yr(e,3),o=Yr(e,4),d=Yr(e,5),p=Yr(e,6),h=Yr(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let C=r.dims[0],k=r.dims[1],u=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],B=k,R=0,j=0,ee=Math.floor(u/t.numHeads);if(p&&h&&Se.size(p.dims)&&Se.size(h.dims)){if(p.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(p.dims[0]!==C||p.dims[1]!==t.numHeads||p.dims[3]!==ee)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[0]!==C||h.dims[1]!==t.numHeads||h.dims[3]!==ee)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(p.dims[2]!==h.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(h.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');R=p.dims[2],j=p.dims[2]}else if(p&&Se.size(p.dims)||h&&Se.size(h.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let re;if(n&&Se.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');re=2,B=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==ee)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');re=5,B=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==ee)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');re=0,B=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');re=3}if(a&&Se.size(a.dims)>0){if(a.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let X=R+B,me=0;if(o&&Se.size(o.dims)>0){me=8;let Ie=o.dims;throw Ie.length===1?Ie[0]===C?me=1:Ie[0]===3*C+2&&(me=3):Ie.length===2&&Ie[0]===C&&Ie[1]===X&&(me=5),me===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let pe=!1,Me=u;if(i&&Se.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(B!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Me=i.dims[2]}else{if(B!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');Me=i.dims[1]*i.dims[3],pe=!0}}let $e=!1;if(o&&Se.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(d&&Se.size(d.dims)>0){if(d.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(d.dims[0]!==C||d.dims[1]!==t.numHeads||d.dims[2]!==k||d.dims[3]!==X)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:C,sequenceLength:k,pastSequenceLength:R,kvSequenceLength:B,totalSequenceLength:X,maxSequenceLength:j,inputHiddenSize:0,hiddenSize:u,vHiddenSize:Me,headSize:ee,vHeadSize:Math.floor(Me/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:me,scale:t.scale,broadcastResPosBias:$e,passPastInKv:pe,qkvFormat:re}},cd=e=>it({...e}),Qo=it({perm:[0,2,1,3]}),Yo=(e,t,r,n,i,a,o)=>{let d=[n,i,a],p=Se.size(d),h=[{type:12,data:p},{type:12,data:o},{type:12,data:a}],C=k=>{let u=gt("qkv_with_bias",t.dataType,d),B=Le("qkv",t.dataType,d),R=Le("bias",r.dataType,d),j=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${k.registerUniforms(j).declareVariables(B,R,u)}
  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:C},{inputs:[t,r],outputs:[-1]})[0]},Vn=(e,t,r,n,i,a,o,d)=>{let p=a;if(o&&Se.size(o.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=Yo(e,a,o,t,n,r*i,d),p=p.reshape([t,n,r,i]),r===1||n===1?p:e.compute(ss(p,Qo.perm),{inputs:[p],outputs:[-1]})[0]}else return a.dims.length===3&&(p=a.reshape([t,n,r,i])),r===1||n===1?p:e.compute(ss(p,Qo.perm),{inputs:[p],outputs:[-1]})[0]},pd=(e,t)=>{let r=Xo(e.inputs,t),n=e.inputs[0],i=Yr(e.inputs,1),a=Yr(e.inputs,2),o=Yr(e.inputs,3),d=Yr(e.inputs,4),p=Yr(e.inputs,5),h=Yr(e.inputs,6),C=Yr(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let k=i&&a&&i.dims.length===4&&a.dims.length===4,u=Vn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,o,0);if(k)return zn(e,u,i,a,d,void 0,h,C,p,r);if(!i||!a)throw new Error("key and value must be provided");let B=Vn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,o,r.hiddenSize),R=Vn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,a,o,2*r.hiddenSize);zn(e,u,B,R,d,void 0,h,C,p,r)}}),hd,md,fd,_d,Zo,gd,wd,yd=w(()=>{zt(),Dt(),Ct(),qt(),hd=e=>{if(!e||e.length<1)throw new Error("too few inputs")},md=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),it({numOutputs:n,axis:t.axis,splitSizes:r})},fd=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${bt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,_d=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Zo=(e,t)=>{let r=e[0].dims,n=Se.size(r),i=e[0].dataType,a=Se.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),d=Le("input",i,r.length),p=new Array(t.numOutputs),h=[],C=[],k=0,u=[{type:12,data:n}];for(let R=0;R<t.numOutputs;R++){k+=t.splitSizes[R],p[R]=k;let j=r.slice();j[a]=t.splitSizes[R],C.push(j),o[R]=gt(`output${R}`,i,j.length),h.push({dims:C[R],dataType:e[0].dataType})}u.push({type:12,data:p},...Tt(r,...C));let B=R=>`
  ${R.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(d,...o)}
  ${fd(p.length)}
  ${_d(o)}

  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${d.offsetToIndices("global_idx")};
    var index = ${d.indicesGet("indices",a)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${bt("uniforms.size_in_split_axis","output_number - 1u",p.length)};
      ${d.indicesSet("indices",a,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:B,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:u})}},gd=(e,t)=>{hd(e.inputs);let r=e.inputs.length===1?t:md(e.inputs,t);e.compute(Zo(e.inputs,r),{inputs:[0]})},wd=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return it({axis:t,numOutputs:n,splitSizes:r})}}),bd,ea,ta,Md,vd=w(()=>{Ct(),Xi(),Jo(),yd(),Rs(),bd=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],n=e[1],i=e[2],a=e[3],o=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=r.dims[0],h=r.dims[1],C=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],k=h,u=0,B=!n||n.dims.length===0,R=Math.floor(B?C/(t.numHeads+2*t.kvNumHeads):C/t.numHeads);B&&(C=R*t.numHeads);let j=a&&a.dims.length!==0,ee=o&&o.dims.length!==0;if(j&&a.dims.length===4&&a.dims[0]===p&&a.dims[1]!==t.kvNumHeads&&a.dims[2]===t.kvNumHeads&&a.dims[3]===R)throw new Error("BSNH pastKey/pastValue is not supported");if(j&&ee){if(a.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');u=a.dims[2]}else if(j||ee)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let re=1;if(n&&n.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');k=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==R)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');k=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==R)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');k=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');re=3}let X=0,me=!1,pe=t.kvNumHeads?R*t.kvNumHeads:C;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(k!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');pe=i.dims[2]}else{if(k!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');pe=i.dims[1]*i.dims[3],me=!0}}let Me=e.length>4?e[5]:void 0;if(Me&&Me.dims.length!==1&&Me.dims[0]!==p)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:p,sequenceLength:h,pastSequenceLength:u,kvSequenceLength:k,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:C,vHiddenSize:pe,headSize:R,vHeadSize:Math.floor(pe/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:X,scale:t.scale,broadcastResPosBias:!1,passPastInKv:me,qkvFormat:re}},ea=it({perm:[0,2,1,3]}),ta=(e,t,r)=>{let n=t,i=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(n=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize]),n=e.compute(ss(n,ea.perm),{inputs:[n],outputs:[-1]})[0]),n},Md=(e,t)=>{var ee;let r=bd(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((ee=e.inputs[1])==null?void 0:ee.dims.length)===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,a=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,d=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,p=e.inputs.length>4?e.inputs[5]:void 0,h=e.inputs.length>5?e.inputs[6]:void 0,C=r.kvNumHeads?r.kvNumHeads:r.numHeads,k=it({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,C*r.headSize,C*r.headSize]}),[u,B,R]=!i&&!a?e.compute(Zo([n],k),{inputs:[n],outputs:[-1,-1,-1]}):[n,i,a],j=Vn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,u,void 0,0);zn(e,j,ta(e,B,r),ta(e,R,r),void 0,void 0,o,d,void 0,r,p,h)}}),ra,Td,gr,Yc,Fp=w(()=>{zt(),Dt(),Rs(),qt(),ra=(e,t,r,n,i,a,o,d)=>{let p=or(a),h=p===1?"f32":`vec${p}f`,C=p===1?"vec2f":`mat2x${p}f`,k=i*o,u=64;k===1&&(u=256);let B=[i,o,a/p],R=[i,o,2],j=["rank","type","type"],ee=[];ee.push(...Tt(B,R));let re=X=>{let me=Le("x",t.dataType,3,p),pe=Le("scale",r.dataType,r.dims),Me=Le("bias",n.dataType,n.dims),$e=gt("output",1,3,2),Ie=[me,pe,Me,$e];return`
  var<workgroup> workgroup_shared : array<${C}, ${u}>;
  const workgroup_size = ${u}u;
  ${X.declareVariables(...Ie)}
  ${X.mainStart(u)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${h}(0);
    var squared_sum = ${h}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${h}(${me.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${C}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${qr("workgroup_shared[0][0]",p)} / f32(hight * ${p});
      let squared_sum_final = ${qr("workgroup_shared[0][1]",p)} / f32(hight * ${p});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${d}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${d};${u}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:R,dataType:1}],dispatchGroup:{x:k},programUniforms:ee}),getShaderSource:re},{inputs:[t,r,n],outputs:[-1]})[0]},Td=(e,t,r)=>{let n=t[0].dims,i=n,a=2,o=n[0],d=n[1],p=Se.sizeFromDimension(n,a),h=or(p),C=Se.size(i)/h,k=ra(e,t[0],t[1],t[2],o,p,d,r.epsilon),u=[o,d,p/h],B=[o,d],R=["type","none"],j=ee=>{let re=Le("x",t[0].dataType,u.length,h),X=Le("scale_shift",1,B.length,2),me=gt("output",t[0].dataType,u.length,h),pe=[re,X,me];return`
  ${ee.registerUniform("output_size","u32").declareVariables(...pe)}
  ${ee.mainStart()}
  ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${me.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${X.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${re.getByOffset("global_idx")} * ${me.type.value}(scale_shift.x) + ${me.type.value}(scale_shift.y);
      ${me.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},...Tt(u,B,u)]}),getShaderSource:j},{inputs:[t[0],k]})},gr=(e,t,r)=>{let n=t[0].dims,i=n,a=n[0],o=n[n.length-1],d=Se.sizeFromDimension(n,1)/o,p=or(o),h=Se.size(i)/p,C=[{type:12,data:d},{type:12,data:Math.floor(o/p)}],k=["type","type"],u=!1,B=[0,n.length-1];for(let re=0;re<n.length-2;re++)u=u||n[re+1]!==1,B.push(re+1);u=u&&n[n.length-1]!==1;let R=u?e.compute(ss(e.inputs[0],B),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:n.length},(re,X)=>n[B[X]])),j=ra(e,R,t[1],t[2],a,d,o,r.epsilon),ee=re=>{let X=Zt(t[0].dataType),me=p===1?"vec2f":`mat${p}x2f`,pe=Ie=>{let Ue=Ie===0?"x":"y",at=p===1?"f32":`vec${p}f`;switch(p){case 1:return`${X}(${at}(scale.${Ue}))`;case 2:return`vec2<${X}>(${at}(scale[0].${Ue}, scale[1].${Ue}))`;case 4:return`vec4<${X}>(${at}(scale[0].${Ue}, scale[1].${Ue}, scale[2].${Ue}, scale[3].${Ue}))`;default:throw new Error(`Not supported compoents ${p}`)}},Me=Le("input",t[0].dataType,t[0].dims,p),$e=gt("output",t[0].dataType,i,p);return`
  @group(0) @binding(0) var<storage, read> input : array<${Me.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${me}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${$e.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${re.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${pe(0)}, ${pe(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:C}),getShaderSource:ee},{inputs:[t[0],j]})},Yc=(e,t)=>{t.format==="NHWC"?gr(e,e.inputs,t):Td(e,e.inputs,t)}}),Jc,sa,xd,Zc=w(()=>{zt(),Dt(),qt(),Jc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},sa=(e,t,r)=>{let n=t.simplified,i=e[0].dims,a=e[1],o=!n&&e[2],d=i,p=Se.normalizeAxis(t.axis,i.length),h=Se.sizeToDimension(i,p),C=Se.sizeFromDimension(i,p),k=Se.size(a.dims),u=o?Se.size(o.dims):0;if(k!==C||o&&u!==C)throw new Error(`Size of X.shape()[axis:] == ${C}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${k} and bias size of ${u}`);let B=[];for(let Me=0;Me<i.length;++Me)Me<p?B.push(i[Me]):B.push(1);let R=or(C),j=["type","type"],ee=[{type:12,data:h},{type:1,data:C},{type:12,data:Math.floor(C/R)},{type:1,data:t.epsilon}];o&&j.push("type");let re=r>1,X=r>2,me=Me=>{let $e=Zt(e[0].dataType),Ie=[Le("x",e[0].dataType,e[0].dims,R),Le("scale",a.dataType,a.dims,R)];o&&Ie.push(Le("bias",o.dataType,o.dims,R)),Ie.push(gt("output",e[0].dataType,d,R)),re&&Ie.push(gt("mean_data_output",1,B)),X&&Ie.push(gt("inv_std_output",1,B));let Ue=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${Me.registerUniforms(Ue).declareVariables(...Ie)}
  ${Me.mainStart()}
    ${Me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${bs("f32",R)};
    var mean_square_vector = ${bs("f32",R)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Dr($e,R,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${qr("mean_vector",R)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${qr("mean_square_vector",R)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Dr($e,R,"x[j + offset]")};
      let f32scale = ${Dr($e,R,"scale[j]")};
      output[j + offset] = ${Ie[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${Dr($e,R,"bias[j]")}`:""}
      );
    }

    ${re?"mean_data_output[global_idx] = mean":""};
    ${X?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},pe=[{dims:d,dataType:e[0].dataType}];return re&&pe.push({dims:B,dataType:1}),X&&pe.push({dims:B,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${R};${r};${n}`,inputDependencies:j},getRunData:()=>({outputs:pe,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:ee}),getShaderSource:me}},xd=(e,t)=>{Jc(e.inputs),e.compute(sa(e.inputs,t,e.outputCount))}}),Ed,Pd,Cd=w(()=>{Dt(),To(),So(),Ed=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Pd=e=>{Ed(e.inputs);let t=nr.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];if(r<8&&n<8)e.compute(ci(e.inputs,{activation:""},t));else{let i=t[t.length-2],a=Se.size(e.inputs[0].dims.slice(0,-2)),o=Se.size(e.inputs[1].dims.slice(0,-2));if(a!==1&&i===1&&o===1){let d=e.inputs[0].reshape([1,a,n]),p=e.inputs[1].reshape([1,n,r]),h=[1,a,r],C=[d,p];e.compute(pi(C,{activation:""},t,h),{inputs:C})}else e.compute(pi(e.inputs,{activation:""},t))}}}),na,ep,kd,Sd,ia,Dp=w(()=>{zt(),Dt(),Ct(),qt(),na=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),a=t.blockSize/8*t.bits,o=e[1];if(!Se.areEqual(o.dims,[t.n,i,a]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let d=e[2].dims;if(Se.size(d)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let p=e[3].dims,h=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(Se.size(p)!==h)throw new Error("zeroPoints input size error.")}},ep=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],a=t.k,o=t.n,d=r.slice(0,n-2),p=Se.size(d),h=e[1].dims[2]/4,C=e[0].dataType,k=or(t.k),u=or(h),B=or(o),R=d.concat([i,o]),j=i>1&&o/B%2===0?2:1,ee=Se.size(R)/B/j,re=64,X=[],me=[p,i,a/k],pe=Se.convertShape(e[1].dims).slice();pe.splice(-1,1,h/u),X.push(...Tt(me)),X.push(...Tt(pe)),X.push(...Tt(e[2].dims)),e.length===4&&X.push(...Tt(Se.convertShape(e[3].dims)));let Me=[p,i,o/B];X.push(...Tt(Me));let $e=Ie=>{let Ue=me.length,at=Le("a",e[0].dataType,Ue,k),Et=Le("b",12,pe.length,u),Kt=Le("scales",e[2].dataType,e[2].dims.length),Yt=[at,Et,Kt],kt=e.length===4?Le("zero_points",12,e[3].dims.length):void 0;kt&&Yt.push(kt);let Jt=Me.length,$t=gt("output",e[0].dataType,Jt,B),jt=Zt(e[0].dataType),Mr=(()=>{switch(k){case 1:return`array<${jt}, 8>`;case 2:return`mat4x2<${jt}>`;case 4:return`mat2x4<${jt}>`;default:throw new Error(`${k}-component is not supported.`)}})(),Ht=()=>{let nt=`
          // reuse a data
            var input_offset = ${at.indicesToOffset(`${at.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Mr};
            for (var j: u32 = 0; j < ${8/k}; j++) {
              a_data[j] = ${at.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Pt=0;Pt<B*j;Pt++)nt+=`
            b_value = ${u===1?`b${Pt}_data`:`b${Pt}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Mr}(${Array.from({length:4},(cr,Lr)=>`${jt}(b_value_lower[${Lr}]), ${jt}(b_value_upper[${Lr}])`).join(", ")});
            b_dequantized_values = ${k===1?`${Mr}(${Array.from({length:8},(cr,Lr)=>`(b_quantized_values[${Lr}] - ${kt?`zero_point${Pt}`:"zero_point"}) * scale${Pt}`).join(", ")});`:`(b_quantized_values - ${Mr}(${Array(8).fill(`${kt?`zero_point${Pt}`:"zero_point"}`).join(",")})) * scale${Pt};`};
            workgroup_shared[local_id.x * ${j} + ${Math.floor(Pt/B)}]${B>1?`[${Pt%B}]`:""} += ${Array.from({length:8/k},(cr,Lr)=>`${k===1?`a_data[${Lr}] * b_dequantized_values[${Lr}]`:`dot(a_data[${Lr}], b_dequantized_values[${Lr}])`}`).join(" + ")};
          `;return nt},Gt=()=>{let nt=`
            var col_index = col * ${B};
            ${kt?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${jt}(8);`}
            `;for(let Pt=0;Pt<B*j;Pt++)nt+=`
            let scale${Pt} = ${Kt.getByOffset("col_index * nBlocksPerCol + block")};
            ${kt?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${kt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Pt} = ${jt}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return nt},Pr=()=>{let nt=`col_index = col * ${B};`;for(let Pt=0;Pt<B*j;Pt++)nt+=`
            let b${Pt}_data = ${Et.getByIndices(`${Et.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return nt+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Mr};
            var b_dequantized_values: ${Mr};`,nt};return`
        var<workgroup> workgroup_shared: array<${$t.type.value}, ${j*re}>;
        ${Ie.declareVariables(...Yt,$t)}
        ${Ie.mainStart([re,1,1])}
          let output_indices = ${$t.offsetToIndices(`(global_idx / ${re}) * ${j}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${re}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/k};
            ${Gt()}
            for (var word: u32 = 0; word < ${h}; word += ${u}) {
              ${Pr()}
              for (var i: u32 = 0; i < ${u}; i++) {
                ${Ht()}
                word_offset += ${8/k};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${j}) {
            var output_value: ${$t.type.value} = ${$t.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${re}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${j};
            }
            ${$t.setByIndices(`${$t.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${k};${u};${B};${j};${re}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:R,dataType:C}],dispatchGroup:{x:ee},programUniforms:X}),getShaderSource:$e}},kd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],a=t.k,o=t.n,d=r.slice(0,n-2),p=Se.size(d),h=e[1].dims[2]/4,C=e[0].dataType,k=or(t.k),u=or(h),B=d.concat([i,o]),R=128,j=o%8===0?8:o%4===0?4:1,ee=R/j,re=ee*u*8,X=re/k,me=re/t.blockSize,pe=Se.size(B)/j,Me=[],$e=[p,i,a/k],Ie=Se.convertShape(e[1].dims).slice();Ie.splice(-1,1,h/u),Me.push(...Tt($e)),Me.push(...Tt(Ie)),Me.push(...Tt(e[2].dims)),e.length===4&&Me.push(...Tt(Se.convertShape(e[3].dims)));let Ue=[p,i,o];Me.push(...Tt(Ue));let at=Et=>{let Kt=$e.length,Yt=Le("a",e[0].dataType,Kt,k),kt=Le("b",12,Ie.length,u),Jt=Le("scales",e[2].dataType,e[2].dims.length),$t=[Yt,kt,Jt],jt=e.length===4?Le("zero_points",12,e[3].dims.length):void 0;jt&&$t.push(jt);let Mr=Ue.length,Ht=gt("output",e[0].dataType,Mr),Gt=Zt(e[0].dataType),Pr=()=>{switch(k){case 1:return`
          let a_data0 = vec4<${Gt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Gt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Gt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Gt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${k}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Yt.type.value}, ${X}>;
        var<workgroup> inter_results: array<array<${Ht.type.value}, ${ee}>, ${j}>;
        ${Et.declareVariables(...$t,Ht)}
        ${Et.mainStart([ee,j,1])}
          let output_indices = ${Ht.offsetToIndices(`workgroup_index * ${j}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${me} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${X};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${X}; a_offset += ${R})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Yt.getByIndices(`${Yt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Yt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${me} + local_id.x;
            ${jt?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${jt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Gt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Gt}(8);`}
            let scale = ${Jt.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${kt.getByIndices(`${kt.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/k};
            for (var i: u32 = 0; i < ${u}; i++) {
              ${Pr()}
              let b_value = ${u===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Gt}>(${Array.from({length:4},(nt,Pt)=>`${Gt}(b_value_lower[${Pt}]), ${Gt}(b_value_upper[${Pt}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Gt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(nt,Pt)=>`${`dot(a_data${Pt}, b_dequantized_values[${Pt}])`}`).join(" + ")};
              word_offset += ${8/k};
            }
            workgroupBarrier();
          }

          if (local_idx < ${j}) {
            var output_value: ${Ht.type.value} = ${Ht.type.value}(0);
            for (var b = 0u; b < ${ee}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${Ht.setByIndices(`${Ht.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${k};${u};${ee};${j}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:B,dataType:C}],dispatchGroup:{x:pe},programUniforms:Me}),getShaderSource:at}},Sd=(e,t)=>{na(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(kd(e.inputs,t)):e.compute(ep(e.inputs,t))},ia=e=>it(e)}),tp,$d,Ad,Id,Od,Fd,Dd,Ld,zd,rp=w(()=>{zt(),Dt(),qt(),tp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},$d=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
            k = i32(${e.indicesGet("indices",i)}) - ${bt("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${bt("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${bt("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},Ad=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${bt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${bt("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${bt("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${bt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Id=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${bt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${bt("uniforms.x_shape",i,t)})) {
                  k = i32(${bt("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${bt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Od=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${bt("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${bt("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${bt("uniforms.x_shape",i,t)})) {
                  k -= i32(${bt("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${bt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Fd=(e,t,r)=>{switch(r.mode){case 0:return $d(e,t,r.pads.length);case 1:return Ad(e,t,r.pads.length);case 2:return Id(e,t,r.pads.length);case 3:return Od(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Dd=(e,t)=>{let r=Se.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=Se.size(r),a=[{type:12,data:i},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;t.mode===0&&a.push({type:o?e[2].dataType:1,data:t.value}),a.push(...Tt(e[0].dims,r));let d=["rank"],p=h=>{let C=gt("output",e[0].dataType,r.length),k=Le("x",e[0].dataType,n.length),u=k.type.value,B=Fd(C,n.length,t),R=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&R.push({name:"constant_value",type:o?u:"f32"}),`
            ${h.registerUniforms(R).declareVariables(k,C)}
            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${C.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${B}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Se.size(r)/64)},programUniforms:a}),getShaderSource:p}},Ld=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,a=new Int32Array(2*i).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let p=0;p<d.length;p++)a[Number(d[p])]=Number(r[p]),a[Number(d[p])+i]=Number(r[p+d.length])}else r.forEach((d,p)=>a[Number(p)]=Number(d));let o=[];return a.forEach(d=>o.push(d)),{mode:t.mode,value:n,pads:o}}else return t},zd=(e,t)=>{tp(e.inputs);let r=Ld(e.inputs,t);e.compute(Dd(e.inputs,r),{inputs:[0]})}}),Gn,oa,aa,Bd,la,Rd,Nd,ua,da,jd,sp,xi,Ud,Wd,ca,Vd,Gd,Kd,Hd,np=w(()=>{He(),zt(),Dt(),qt(),Gn=e=>{if(T.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},oa=(e,t,r)=>{let n=t.format==="NHWC",i=e.dims.slice();n&&i.splice(1,0,i.pop());let a=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),d=t.strides.slice(),p=a?t.dilations.slice():[],h=t.pads.slice();yr.adjustPoolAttributes(r,i,o,d,p,h);let C=yr.computePoolOutputShape(r,i,d,p,o,h,t.autoPad),k=Object.assign({},t);a?Object.assign(k,{kernelShape:o,strides:d,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(k,{kernelShape:o,strides:d,pads:h,cacheKey:t.cacheKey});let u=C.slice();return u.push(u.splice(1,1)[0]),[k,n?u:C]},aa=(e,t)=>{let r=t.format==="NHWC",n=Se.size(e),i=Se.size(t.kernelShape),a=[{type:12,data:n},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let d=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],C=t.pads[t.pads.length-1],k=!!(h+C);a.push({type:12,data:d},{type:12,data:p},{type:12,data:h},{type:12,data:C}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(t.kernelShape.length===2){let B=t.kernelShape[t.kernelShape.length-2],R=t.strides[t.strides.length-2],j=t.pads[t.pads.length/2-2],ee=t.pads[t.pads.length-2];u=!!(j+ee),a.push({type:12,data:B},{type:12,data:R},{type:12,data:j},{type:12,data:ee}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[a,o,!0,k,u]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let d=Se.computeStrides(t.kernelShape);a.push({type:12,data:d},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:d.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,C)=>h+C);return[a,o,!!p,!1,!1]}},Bd=(e,t,r,n,i,a,o,d,p,h,C,k)=>{let u=i.format==="NHWC",B=t.type.value,R=gt("output",t.type.tensor,n);if(i.kernelShape.length<=2){let j="",ee="",re="",X=r-(u?2:1);if(C?j=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${X}] = indices[${X}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${X}] < 0 || xIndices[${X}]
                      >= uniforms.x_shape[${X}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${a}
                }`:j=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${X}] = indices[${X}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${a}
                }`,i.kernelShape.length===2){let me=r-(u?3:2);k?ee=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${me}] = indices[${me}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${me}] < 0 || xIndices[${me}] >= uniforms.x_shape[${me}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:ee=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${me}] = indices[${me}] * uniforms.sh - uniforms.phStart + j;
                `,re=`
              }
            `}return`
            ${e.registerUniforms(p).declareVariables(t,R)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${R.offsetToIndices("global_idx")};
              var xIndices = ${R.offsetToIndices("global_idx")};

              var value = ${B}(${d});
              var pad = 0;
              ${ee}
              ${j}
              ${re}
              ${o}

              output[global_idx] = value;
            }`}else{if(u)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let j=i.kernelShape.length,ee=i.pads.length,re="";return h?re=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${a}
              }`:re=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${a}
            `,`
            ${e.registerUniforms(p).declareVariables(t,R)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${R.offsetToIndices("global_idx")};
              var xIndices = ${R.offsetToIndices("global_idx")};

              var offsets: array<u32, ${j}>;

              var value = ${B}(${d});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${j-1}u; j++) {
                  offsets[j] = offset / ${bt("uniforms.kernelStrides","j",j)};
                  offset -= offsets[j] * ${bt("uniforms.kernelStrides","j",j)};
                }
                offsets[${j-1}] = offset;

                isPad = false;
                for (var j = ${r-j}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${bt("uniforms.strides",`j - ${r-j}u`,j)}
                    + offsets[j - ${r-j}u] - ${bt("uniforms.pads","j - 2u",ee)};
                  ${re}
              }
              ${o}

              output[global_idx] = value;
            }`}},la=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Rd=e=>`${la(e)};${e.countIncludePad}`,Nd=e=>`${la(e)};${e.storageOrder};${e.dilations}`,ua=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),da=(e,t,r,n)=>{let[i,a]=oa(t,n,r),o=Le("x",t.dataType,t.dims.length),d=o.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${d}(uniforms.kernelSize);`:h+=`value /= ${d}(i32(uniforms.kernelSize) - pad);`;let[C,k,u,B,R]=aa(a,i);C.push(...Tt(t.dims,a));let j=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${u};${B};${R}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Se.size(a)/64)},programUniforms:C}),getShaderSource:ee=>Bd(ee,o,t.dims.length,a.length,i,p,h,0,k,u,B,R)}},jd=e=>{let t=e.count_include_pad!==0,r=ua(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:Rd(n)}},sp=(e,t)=>{Gn(e.inputs),e.compute(da("AveragePool",e.inputs[0],!1,t))},xi={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Ud=e=>{let t=e.format;return{format:t,...xi,cacheKey:t}},Wd=(e,t)=>{Gn(e.inputs),e.compute(da("GlobalAveragePool",e.inputs[0],!0,t))},ca=(e,t,r,n)=>{let[i,a]=oa(t,n,r),o=`
      value = max(x_val, value);
    `,d="",p=Le("x",t.dataType,t.dims.length),h=["rank"],[C,k,u,B,R]=aa(a,i);return C.push(...Tt(t.dims,a)),{name:e,shaderCache:{hint:`${n.cacheKey};${u};${B};${R}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Se.size(a)/64)},programUniforms:C}),getShaderSource:j=>Bd(j,p,t.dims.length,a.length,i,o,d,t.dataType===10?-65504:-1e5,k,u,B,R)}},Vd=(e,t)=>{Gn(e.inputs),e.compute(ca("MaxPool",e.inputs[0],!1,t))},Gd=e=>{let t=e.storage_order,r=e.dilations,n=ua(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...n,cacheKey:""};return{...i,cacheKey:Nd(i)}},Kd=e=>{let t=e.format;return{format:t,...xi,cacheKey:t}},Hd=(e,t)=>{Gn(e.inputs),e.compute(ca("GlobalMaxPool",e.inputs[0],!0,t))}}),qd,Xd,Qd,Yd,ip=w(()=>{zt(),Dt(),Ct(),qt(),qd=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,a)=>a===t.axis||i===e[0].dims[a]).reduce((i,a)=>i&&a,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Xd=(e,t)=>{let r=Se.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,i=n===3,a=e[0].dims,o=e[1].dataType,d=Se.size(a),p=n===3||n===2,h=p?[Math.ceil(Se.size(e[0].dims)/4)]:e[0].dims,C=e[1].dims,k=e.length>2?e[2]:void 0,u=k?p?[Math.ceil(Se.size(k.dims)/4)]:k.dims:void 0,B=C.length===0||C.length===1&&C[0]===1,R=B===!1&&C.length===1,j=or(d),ee=B&&(!p||j===4),re=ee?j:1,X=ee&&!p?j:1,me=Le("input",p?12:n,h.length,X),pe=Le("scale",o,C.length),Me=k?Le("zero_point",p?12:n,u.length):void 0,$e=gt("output",o,a.length,re),Ie=[me,pe];Me&&Ie.push(Me);let Ue=[h,C];k&&Ue.push(u);let at=[{type:12,data:d/re},{type:12,data:r},{type:12,data:t.blockSize},...Tt(...Ue,a)],Et=Kt=>{let Yt=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${Kt.registerUniforms(Yt).declareVariables(...Ie,$e)}
      ${Kt.mainStart()}
          ${Kt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${$e.offsetToIndices("global_idx")};

          // Set input x
          ${p?`
            let input = ${me.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${re===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${me.getByOffset("global_idx")};`};

          // Set scale input
          ${B?`let scale_value= ${pe.getByOffset("0")}`:R?`
            let scale_index = ${$e.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${pe.getByOffset("scale_index")};`:`
            var scale_indices: ${pe.type.indices} = output_indices;
            let index = ${pe.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${pe.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${pe.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${Me?B?p?`
                let zero_point_input = ${Me.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${Me.getByOffset("0")}`:R?p?`
                let zero_point_index = ${$e.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${Me.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${$e.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${Me.getByOffset("zero_point_index")};`:p?`
                let zero_point_offset = ${pe.indicesToOffset("scale_indices")};
                let zero_point_input = ${Me.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${Me.getByIndices("scale_indices")};`:`let zero_point_value = ${p?i?"i32":"u32":me.type.value}(0);`};
      // Compute and write output
      ${$e.setByOffset("global_idx",`${$e.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:Me?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Et,getRunData:()=>({outputs:[{dims:a,dataType:o}],dispatchGroup:{x:Math.ceil(d/re/64),y:1,z:1},programUniforms:at})}},Qd=(e,t)=>{qd(e.inputs,t),e.compute(Xd(e.inputs,t))},Yd=e=>it({axis:e.axis,blockSize:e.blockSize})}),Jd,Zd,ec,op=w(()=>{He(),zt(),qt(),Jd=(e,t,r)=>{let n=e===t,i=e<t&&r<0,a=e>t&&r>0;if(n||i||a)throw new Error("Range these inputs' contents are invalid.")},Zd=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),a=[i],o=i,d=[{type:12,data:o},{type:n,data:e},{type:n,data:r},...Tt(a)],p=h=>{let C=gt("output",n,a.length),k=C.type.value,u=[{name:"outputSize",type:"u32"},{name:"start",type:k},{name:"delta",type:k}];return`
        ${h.registerUniforms(u).declareVariables(C)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${k}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d})}},ec=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),T.webgpu.validateInputContent&&Jd(t,r,n),e.compute(Zd(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),tc,rc,sc,nc,ap=w(()=>{zt(),Dt(),Ct(),qt(),tc=(e,t,r,n)=>{if(e!=="none"&&n!=="i32"&&n!=="u32"&&n!=="f32")throw new Error(`Input ${n} is not supported with reduction ${e}.`);let i=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,a=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${t}=${r};`;case"add":return n==="i32"||n==="u32"?`atomicAdd(&${t}, bitcast<${n}>(${r}));`:`
              ${i}bitcast<${n}>(oldValue) + (${r})${a}`;case"max":return n==="i32"||n==="u32"?`atomicMax(&${t}, bitcast<${n}>(${r}));`:`
                ${i}max(bitcast<f32>(oldValue), (${r}))${a}`;case"min":return n==="i32"||n==="u32"?`atomicMin(&${t}, bitcast<${n}>(${r}));`:`${i}min(bitcast<${n}>(oldValue), (${r}))${a}`;case"mul":return`${i}(bitcast<${n}>(oldValue) * (${r}))${a}`;default:throw new Error(`Reduction ${e} is not supported.`)}},rc=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r,a=1,o=Math.ceil(Se.size(n)/a),d=n[n.length-1],p=Se.sizeFromDimension(r,d),h=[{type:12,data:o},{type:12,data:d},{type:12,data:p},...Tt(e[1].dims,e[2].dims,i)],C=k=>{let u=Le("indices",e[1].dataType,e[1].dims.length),B=Le("updates",e[2].dataType,e[2].dims.length,a),R=t.reduction!=="none"&&t.reduction!==""?rs("output",e[0].dataType,i.length):gt("output",e[0].dataType,i.length,a);return`
      ${k.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(u,B,R)}
      ${k.mainStart()}
        ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${tc(t.reduction,"output[data_offset + i]","value",R.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:h}),getShaderSource:C}},sc=e=>it({reduction:e.reduction}),nc=(e,t)=>{e.compute(rc(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),ic,oc,ac,lc,uc,dc,lp,Qt,cc,Ur,Vr,Gr,sn,up,pc,hc,f,P,z,Te=w(()=>{zt(),Dt(),Ct(),qt(),ic=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},oc=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((i,a)=>n[i]=e[a]),n},ac=(e,t,r,n,i,a)=>{let[o,d,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(C=>a.push(C));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length===1&&e[d].dims[0]>0){if(e[d].getFloat32Array().forEach(C=>n.push(C)),n.length!==0&&n.length!==h&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");ic(n,t),t.axes.length>0&&oc(n,t.axes,h).forEach((C,k)=>n[k]=C)}if(p>0&&e.length>p&&e[p].dims.length===1&&e[p].dims[0]>0&&(e[p].getBigInt64Array().forEach(C=>i.push(Number(C))),i.length!==0&&i.length!==h&&r>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof i<"u"&&n.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},lc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",uc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",dc=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((a,o)=>{n[a]=i[o],n[o+r]=i[t.length+o]}),n):i},lp=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(a=>i.push(a)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((a,o)=>i[a]=r[o])}else r.forEach(a=>i.push(a));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((a,o)=>Math.round(a*t[o]))}return i},Qt=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(a=>t[a]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(a=>t[a]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(a=>t[a]=n),r.axes.forEach(a=>i[a]=Math.round(e[a]*t[a]))):(t.fill(n,0,t.length),i.forEach((a,o)=>i[o]=Math.round(a*t[o]))),i},cc=(e,t,r,n,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${bt("uniforms.scales","i",n)};
        var roi_low = ${bt("uniforms.roi","i",i)};
        var roi_hi = ${bt("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${bt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${bt("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Ur=(e,t,r,n,i,a,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${bt("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${bt("uniforms.roi","i",a)};
          var roi_hi = ${bt("uniforms.roi",`i + ${r.length}`,a)};
          var input_shape_i = ${bt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${bt("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,Vr=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${bt("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Gr=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",sn=(e,t,r,n,i)=>{let[a,o,d,p]=r.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",d,`max(0, min(col, ${r[d]} - 1))`)};
      ${Gr(e,p,a,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${h} = originalIndices[${o}];
      var col:${h} = originalIndices[${d}];
      ${n?`if (row < 0 || row > (${r[o]} - 1) || col < 0 || col > (${r[d]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[d]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${p}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};
      var x11: ${h} = getInputValue(batch, channel, row1, col1);
      var x12: ${h} = getInputValue(batch, channel, row1, col2);
      var x21: ${h} = getInputValue(batch, channel, row2, col1);
      var x22: ${h} = getInputValue(batch, channel, row2, col2);
      var dx1: ${h} = abs(row - ${h}(row1));
      var dx2: ${h} = abs(${h}(row2) - row);
      var dy1: ${h} = abs(col - ${h}(col1));
      var dy2: ${h} = abs(${h}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},up=(e,t,r,n,i,a,o,d,p,h)=>{let C=r.length===2,[k,u]=C?[0,1]:[2,3],B=e.type.value,R=j=>{let ee=j===k?"row":"col";return`
      fn ${ee}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${B} {
        var output_index = ${t.indicesGet("output_indices",j)};
        var originalIdx: ${B} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[j]},
        ${n[j]}, ${r[j]}, ${a[j]}, ${a[j]} + ${r.length});
        var fractOriginalIdx: ${B} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${d} && (originalIdx < 0 || originalIdx > (${r[j]} - 1))) {
          return ${p};
        }
        var data: array<${B}, 4> = array<${B}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${ee}: ${B} = originalIdx + ${B}(i);
          if (${ee} < 0 || ${ee} >= ${r[j]}) {
            ${h?`coefs[i + 1] = 0.0;
                        continue;`:d?`return ${p};`:`${ee} = max(0, min(${ee}, ${r[j]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",j,`u32(${ee})`)};
          data[i + 1] = ${j===k?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${R(k)};
    ${R(u)};
  fn getCubicInterpolationCoefs(s: ${B}) -> array<${B}, 4> {
    var absS = abs(s);
    var coeffs: array<${B}, 4> = array<${B}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${B} = 1.0 - absS;
    var twoMinusAbsS: ${B} = 2.0 - absS;
    var onePlusAbsS: ${B} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${B}, 4>, coefs: array<${B}, 4>) -> ${B} {
    var coefsSum: ${B} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${B} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},pc=(e,t,r,n,i)=>{let[a,o,d,p,h]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],C=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${C} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",d,`max(0, min(height, ${r[d]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(width, ${r[p]} - 1))`)};
      ${Gr(e,h,a,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${C} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${C} = originalIndices[${o}];
      var height:${C} = originalIndices[${d}];
      var width:${C} = originalIndices[${p}];
      ${n?`if (depth < 0 || depth > (${r[o]} - 1) || height < 0 || height > (${r[d]} - 1) || width < 0 || (width > ${r[p]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[o]} - 1));
      height = max(0, min(height, ${r[d]} - 1));
      width = max(0, min(width, ${r[p]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};

      var x111: ${C} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${C} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${C} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${C} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${C} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${C} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${C} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${C} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${C} = abs(depth - ${C}(depth1));
      var dx2: ${C} = abs(${C}(depth2) - depth);
      var dy1: ${C} = abs(height - ${C}(height1));
      var dy2: ${C} = abs(${C}(height2) - height);
      var dz1: ${C} = abs(width - ${C}(width1));
      var dz2: ${C} = abs(${C}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},hc=(e,t,r,n,i,a)=>{let o=e.dims,d=dc(a,t.axes,o.length),p=lp(o,n,i,t.axes),h=n.slice();n.length===0&&(h=o.map((X,me)=>X===0?1:p[me]/X),t.keepAspectRatioPolicy!=="stretch"&&(p=Qt(o,h,t)));let C=gt("output",e.dataType,p.length),k=Le("input",e.dataType,o.length),u=Se.size(p),B=o.length===p.length&&o.every((X,me)=>X===p[me]),R=t.coordinateTransformMode==="tf_crop_and_resize",j=t.extrapolationValue,ee=k.type.value,re=X=>`
      ${B?"":`
      ${lc(t.coordinateTransformMode,ee)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${Vr(k,o)};
              ${uc(t.nearestMode,r,ee)};
              ${Ur(k,C,o,p,h.length,d.length,R)};
              `;case"linear":return`
              ${cc(C,o,p,h.length,d.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${sn(k,C,o,R,j)}`;if(o.length===3||o.length===5)return`${pc(k,C,o,R,j)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${up(k,C,o,p,h,d,t.cubicCoeffA,R,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${X.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",d.length).declareVariables(k,C)}
      ${X.mainStart()}
        ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${B?"output[global_idx] = input[global_idx];":`
        let output_indices = ${C.offsetToIndices("global_idx")};
        var input_indices: ${k.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${k.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${d.length>0?d:""}|${B}|${o}`,inputDependencies:["rank"]},getShaderSource:re,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},{type:1,data:h},{type:1,data:d},...Tt(o,p)]})}},f=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},P=(e,t)=>{let r=[],n=[],i=[],a=f(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");ac(e.inputs,t,a,r,n,i),e.compute(hc(e.inputs[0],t,a,r,n,i),{inputs:[0]})},z=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,a=e.excludeOutside!==0,o=e.extrapolationValue,d=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return it({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:a,extrapolationValue:o,keepAspectRatioPolicy:d,mode:p,nearestMode:h})}}),Fe,Ae,Qe,tt=w(()=>{zt(),Dt(),Ct(),qt(),Fe=(e,t)=>{let[r,n,i,a]=e,{numHeads:o,rotaryEmbeddingDim:d}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!Se.areEqual(n.dims,[])&&!Se.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(!Se.areEqual(i.dims,a.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(d>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],C=i.dims[0],k=Se.sizeFromDimension(r.dims,1)/h,u=d===0?i.dims[1]*2:k/o;if(d>u)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(p!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(h!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(u/2!==i.dims[1]&&d/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>C)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Ae=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:i,scale:a}=t,o=e[0].dims[0],d=Se.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=d/p,C=e[2].dims[1],k=i===0?C*2:h/n,u=new Array(o,p,h/k,k-C),B=Se.computeStrides(u),R=[{type:1,data:a},{type:12,data:u},{type:12,data:B},...e[0].dims.length===3?new Array({type:12,data:[d,h,k,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[d,k,p*k,1]}):[],...Tt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],j=ee=>{let re=Le("input",e[0].dataType,e[0].dims.length),X=Le("position_ids",e[1].dataType,e[1].dims.length),me=Le("cos_cache",e[2].dataType,e[2].dims.length),pe=Le("sin_cache",e[3].dataType,e[3].dims.length),Me=gt("output",e[0].dataType,e[0].dims.length);return ee.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:u.length},{name:"global_strides",type:"u32",length:B.length},{name:"input_output_strides",type:"u32",length:B.length}]),`
        ${ee.declareVariables(re,X,me,pe,Me)}

        ${ee.mainStart(Rr)}
          let half_rotary_emb_dim = uniforms.${me.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${ee.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${X.broadcastedIndicesToOffset("bsnh.xy",gt("",X.type.tensor,2))};
            let position_id =
                u32(${X.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${re.getByOffset("i")} * ${me.get("position_id","bsnh[3]")} -
                ${re.getByOffset("j")} * ${pe.get("position_id","bsnh[3]")};
            ${Me.setByOffset("i","re")}
            let im = ${re.getByOffset("i")} * ${pe.get("position_id","bsnh[3]")} +
                ${re.getByOffset("j")} * ${me.get("position_id","bsnh[3]")};
            ${Me.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${Me.setByOffset("k",re.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:it({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:j,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Se.size(u)/Rr)},programUniforms:R})}},Qe=(e,t)=>{Fe(e.inputs,t),e.compute(Ae(e.inputs,t))}}),ft,vt,Rt,Vt=w(()=>{zt(),Dt(),qt(),ft=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==a)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},vt=(e,t,r,n)=>{let i=t.simplified,a=e[0].dims,o=Se.size(a),d=a,p=o,h=a.slice(-1)[0],C=n?a.slice(0,-1).concat(1):[],k=!i&&e.length>3,u=e.length>4,B=n&&r>1,R=n&&r>2,j=r>3,ee=64,re=or(h),X=[{type:12,data:p},{type:12,data:re},{type:12,data:h},{type:1,data:t.epsilon}],me=Me=>{let $e=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Ie=[Le("x",e[0].dataType,e[0].dims,re),Le("skip",e[1].dataType,e[1].dims,re),Le("gamma",e[2].dataType,e[2].dims,re)];k&&Ie.push(Le("beta",e[3].dataType,e[3].dims,re)),u&&Ie.push(Le("bias",e[4].dataType,e[4].dims,re)),Ie.push(gt("output",e[0].dataType,d,re)),B&&Ie.push(gt("mean_output",1,C)),R&&Ie.push(gt("inv_std_output",1,C)),j&&Ie.push(gt("input_skip_bias_sum",e[0].dataType,d,re));let Ue=Zt(e[0].dataType),at=Zt(1,re);return`

      ${Me.registerUniforms($e).declareVariables(...Ie)}
      var<workgroup> sum_shared : array<${at}, ${ee}>;
      var<workgroup> sum_squared_shared : array<${at}, ${ee}>;

      ${Me.mainStart([ee,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${ee};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${ee};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${ee-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${u?"bias[offset1d + i]":Ue+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${j?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Dr(Ue,re,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${ee};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${qr("sum",re)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${qr("square_sum",re)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${B?"mean_output[global_idx] = mean;":""}
        ${R?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${Ue}(mean)`}) *
            ${Ue}(inv_std_dev) * gamma[offset1d + i]
            ${k?"+ beta[offset1d + i]":""};
        }
      }`},pe=[{dims:d,dataType:e[0].dataType}];return r>1&&pe.push({dims:C,dataType:1}),r>2&&pe.push({dims:C,dataType:1}),r>3&&pe.push({dims:a,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${re};${B};${R};${j}`,inputDependencies:e.map((Me,$e)=>"type")},getShaderSource:me,getRunData:()=>({outputs:pe,dispatchGroup:{x:Math.ceil(p/h)},programUniforms:X})}},Rt=(e,t)=>{ft(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(vt(e.inputs,t,e.outputCount,!1),{outputs:r})}}),Bt,Ut,er,tr,Xt,lr,kr,vr,mr=w(()=>{zt(),Dt(),Ct(),qt(),Bt=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},Ut=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},er=(e,t)=>{if(e.length>1){let r=Ut(e,1),n=Ut(e,2),i=Ut(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),it({starts:r,ends:n,axes:i})}else return t},tr=(e,t,r,n,i)=>{let a=e;return e<0&&(a+=r[n[t]]),i[t]<0?Math.max(0,Math.min(a,r[n[t]]-1)):Math.max(0,Math.min(a,r[n[t]]))},Xt=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${bt("uniforms.input_shape","i",r.length)};
            let steps_i = ${bt("uniforms.steps","i",r.length)};
            let signs_i = ${bt("uniforms.signs","i",r.length)};
            let starts_i = ${bt("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,lr=(e,t)=>{let r=e[0].dims,n=Se.size(r),i=t.axes.length>0?Se.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],a=Ut(e,4);a.forEach(re=>re!==0||(()=>{throw new Error("step cannot be 0")})),a.length===0&&(a=Array(i.length).fill(1));let o=t.starts.map((re,X)=>tr(re,X,r,i,a)),d=t.ends.map((re,X)=>tr(re,X,r,i,a));if(i.length!==o.length||i.length!==d.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let re=0;re<r.length;++re)i.includes(re)||(o.splice(re,0,0),d.splice(re,0,r[re]),a.splice(re,0,1));let p=a.map(re=>Math.sign(re));a.forEach((re,X,me)=>{if(re<0){let pe=(d[X]-o[X])/re,Me=o[X],$e=Me+pe*a[X];o[X]=$e,d[X]=Me,me[X]=-re}});let h=r.slice(0);i.forEach((re,X)=>{h[re]=Math.ceil((d[re]-o[re])/a[re])});let C={dims:h,dataType:e[0].dataType},k=gt("output",e[0].dataType,h.length),u=Le("input",e[0].dataType,e[0].dims.length),B=Se.size(h),R=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:a.length}],j=[{type:12,data:B},{type:12,data:o},{type:6,data:p},{type:12,data:a},...Tt(e[0].dims,h)],ee=re=>`
      ${re.registerUniforms(R).declareVariables(u,k)}
        ${Xt(u,k,r)}
        ${re.mainStart()}
          ${re.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${k.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${k.setByOffset("global_idx",u.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${o.length}_${a.length}`,inputDependencies:["rank"]},getShaderSource:ee,getRunData:()=>({outputs:[C],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:j})}},kr=(e,t)=>{Bt(e.inputs,t);let r=er(e.inputs,t);e.compute(lr(e.inputs,r),{inputs:[0]})},vr=e=>{let t=e.starts,r=e.ends,n=e.axes;return it({starts:t,ends:r,axes:n})}}),xr,$r,Kr,Nr,vs=w(()=>{zt(),Dt(),Ct(),Rs(),qt(),xr=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},$r=(e,t)=>{let r=e.inputs[0],n=r.dims,i=Se.size(n),a=n.length,o=Se.normalizeAxis(t.axis,a),d=o<n.length-1,p,h=[];d?(h=Array.from({length:a},(Ie,Ue)=>Ue),h[o]=a-1,h[a-1]=o,p=e.compute(ss(r,h),{inputs:[r],outputs:[-1]})[0]):p=r;let C=p.dims,k=C[a-1],u=i/k,B=or(k),R=k/B,j=64;u===1&&(j=256);let ee=(Ie,Ue)=>Ue===4?`max(max(${Ie}.x, ${Ie}.y), max(${Ie}.z, ${Ie}.w))`:Ue===2?`max(${Ie}.x, ${Ie}.y)`:Ue===3?`max(max(${Ie}.x, ${Ie}.y), ${Ie}.z)`:Ie,re=Le("x",p.dataType,p.dims,B),X=gt("result",p.dataType,p.dims,B),me=re.type.value,pe=Zt(p.dataType)==="f32"?`var threadMax = ${me}(-3.402823e+38f);`:`var threadMax = ${me}(-65504.0h);`,Me=Ie=>`
      var<workgroup> rowMaxShared : ${me};
      var<workgroup> rowSumShared : ${me};
      var<workgroup> threadShared : array<${me}, ${j}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${me} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${me}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Ie.registerUniform("packedCols","i32").declareVariables(re,X)}
      ${Ie.mainStart(j)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${j};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${pe}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${me}(${ee("threadShared[0]",B)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${me}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${me}(${qr("threadShared[0]",B)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,$e=e.compute({name:"Softmax",shaderCache:{hint:`${B};${j}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:C,dataType:p.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:R}]}),getShaderSource:Me},{inputs:[p],outputs:[d?-1:0]})[0];d&&e.compute(ss($e,h),{inputs:[$e]})},Kr=(e,t)=>{xr(e.inputs),$r(e,t)},Nr=e=>it({axis:e.axis})}),nn,pa,ns,Ts,ha,ma=w(()=>{zt(),Dt(),qt(),nn=e=>Array.from(e.getBigInt64Array(),Number),pa=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(nn(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ns=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},Ts=(e,t)=>{let r=e[0].dims,n=t??nn(e[1]),i=ns(r,n),a=Se.size(i),o=e[0].dataType,d=Le("input",o,r.length),p=gt("output",o,i.length),h=C=>`
      const inputShape = ${d.indices(...r)};
      ${C.registerUniform("output_size","u32").declareVariables(d,p)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${p.offsetToIndices("global_idx")};
      var input_indices: ${d.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${p.indicesGet("output_indices","i")}  % input_dim_i;

        ${d.indicesSet("input_indices","i","input_dim_value")}
      }
      ${p.setByOffset("global_idx",d.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...Tt(e[0].dims,i)]}),getShaderSource:h}},ha=e=>{pa(e.inputs),e.compute(Ts(e.inputs),{inputs:[0]})}}),Ei,Pi,Er,jr=w(()=>{zt(),Dt(),qt(),Ei=(e,t,r,n,i)=>{let a=gt("output_data",i,r.length,4),o=Le("a_data",t[1].dataType,t[1].dims.length,4),d=Le("b_data",t[2].dataType,t[2].dims.length,4),p=Le("c_data",t[0].dataType,t[0].dims.length,4),h,C=(k,u,B)=>`select(${u}, ${k}, ${B})`;if(!n)h=a.setByOffset("global_idx",C(o.getByOffset("global_idx"),d.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let k=(u,B,R="")=>{let j=`a_data[index_a${B}][component_a${B}]`,ee=`b_data[index_b${B}][component_b${B}]`,re=`bool(c_data[index_c${B}] & (0xffu << (component_c${B} * 8)))`;return`
            let output_indices${B} = ${a.offsetToIndices(`global_idx * 4u + ${B}u`)};
            let offset_a${B} = ${o.broadcastedIndicesToOffset(`output_indices${B}`,a)};
            let offset_b${B} = ${d.broadcastedIndicesToOffset(`output_indices${B}`,a)};
            let offset_c${B} = ${p.broadcastedIndicesToOffset(`output_indices${B}`,a)};
            let index_a${B} = offset_a${B} / 4u;
            let index_b${B} = offset_b${B} / 4u;
            let index_c${B} = offset_c${B} / 4u;
            let component_a${B} = offset_a${B} % 4u;
            let component_b${B} = offset_b${B} % 4u;
            let component_c${B} = offset_c${B} % 4u;
            ${u}[${B}] = ${R}(${C(j,ee,re)});
          `};i===9?h=`
            var data = vec4<u32>(0);
            ${k("data",0,"u32")}
            ${k("data",1,"u32")}
            ${k("data",2,"u32")}
            ${k("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`
            ${k("output_data[global_idx]",0)}
            ${k("output_data[global_idx]",1)}
            ${k("output_data[global_idx]",2)}
            ${k("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(p,o,d,a)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${h}
      }`},Pi=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,a=!(Se.areEqual(t,r)&&Se.areEqual(r,n)),o=t,d=Se.size(t);if(a){let h=nr.calcShape(nr.calcShape(t,r,!1),n,!1);if(!h)throw new Error("Can't perform where op on the given tensors");o=h,d=Se.size(o)}let p=Math.ceil(d/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Ei(h,e,o,a,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:p},...Tt(n,t,r,o)]})}},Er=e=>{e.compute(Pi(e.inputs))}}),Us,Tn=w(()=>{$c(),Xi(),wl(),Ac(),Ic(),iu(),Oc(),zc(),tn(),Rc(),zo(),Nc(),Uc(),Wc(),Gc(),Ju(),Kc(),Hc(),Vo(),Qc(),vd(),Fp(),Zc(),Cd(),Dp(),Jo(),rp(),np(),ip(),op(),ap(),Ki(),Te(),tt(),Vt(),mr(),vs(),yd(),ma(),Rs(),po(),jr(),Us=new Map([["Abs",[vl]],["Acos",[Tl]],["Acosh",[xl]],["Add",[fo]],["ArgMax",[dl,ui]],["ArgMin",[ul,ui]],["Asin",[El]],["Asinh",[Ji]],["Atan",[Pl]],["Atanh",[Cl]],["Attention",[qi]],["AveragePool",[sp,jd]],["BatchNormalization",[gl]],["BiasAdd",[Yi]],["BiasSplitGelu",[Yl]],["Cast",[kl,Zi]],["Ceil",[$l]],["Clip",[eo]],["Concat",[uu,yo]],["Conv",[gi,Do]],["ConvTranspose",[$u,Cu]],["Cos",[Al]],["Cosh",[to]],["CumSum",[Iu,Ou]],["DepthToSpace",[Lu,zu]],["DequantizeLinear",[Qd,Yd]],["Div",[Zl]],["Einsum",[ju,Uu]],["Elu",[Il,Bn]],["Equal",[eu]],["Erf",[Ol]],["Exp",[Fl]],["Expand",[vn]],["FastGelu",[Ku]],["Floor",[ro]],["FusedConv",[gi,Do]],["Gather",[qu,Vc]],["GatherElements",[Ti,sd]],["GatherBlockQuantized",[jo,td]],["GatherND",[Qu,Yu]],["Gelu",[Dl]],["Gemm",[Wo,od]],["GlobalAveragePool",[Wd,Ud]],["GlobalMaxPool",[Hd,Kd]],["Greater",[di]],["GreaterOrEqual",[nu]],["GridSample",[Ho,qo]],["GroupQueryAttention",[Md]],["HardSigmoid",[jl,no]],["InstanceNormalization",[Yc]],["LayerNormalization",[xd]],["LeakyRelu",[Ll,Bn]],["Less",[su]],["LessOrEqual",[go]],["Log",[Hl]],["MatMul",[Pd]],["MatMulNBits",[Sd,ia]],["MaxPool",[Vd,Gd]],["Mul",[_o]],["MultiHeadAttention",[pd,cd]],["Neg",[zl]],["Not",[so]],["Pad",[zd]],["Pow",[tu]],["QuickGelu",[co,Bn]],["Range",[ec]],["Reciprocal",[Bl]],["ReduceMin",[Vi]],["ReduceMean",[rl]],["ReduceMax",[il]],["ReduceSum",[al]],["ReduceProd",[ol]],["ReduceL1",[sl]],["ReduceL2",[Wi]],["ReduceLogSum",[ll]],["ReduceLogSumExp",[nl]],["ReduceSumSquare",[Gi]],["Relu",[Rl]],["Resize",[P,z]],["RotaryEmbedding",[Qe]],["ScatterND",[nc,sc]],["Sigmoid",[Nl]],["Sin",[Ul]],["Sinh",[Wl]],["Slice",[kr,vr]],["SkipLayerNormalization",[Rt]],["Split",[gd,wd]],["Sqrt",[Vl]],["Softmax",[Kr,Nr]],["Sub",[ru]],["Tan",[io]],["Tanh",[Gl]],["ThresholdedRelu",[Kl,Bn]],["Tile",[ha]],["Transpose",[ni,Ia]],["Where",[Er]]])}),xn,fa=w(()=>{He(),ts(),qt(),xn=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,i){Xe(e.programInfo.name);let a=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let d=[];for(let h of t)d.push({binding:d.length,resource:{buffer:h.buffer}});for(let h of r)d.push({binding:d.length,resource:{buffer:h.buffer}});i&&d.push({binding:d.length,resource:i});let p=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:d,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let h={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:p,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(h)}o.setPipeline(e.computePipeline),o.setBindGroup(0,p),o.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Be(e.programInfo.name)}dispose(){}build(e,t){Xe(e.name);let r=this.backend.device,n=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(h=>{r.features.has(h.feature)&&n.push(`enable ${h.extension};`)});let i=ka(t,this.backend.device.limits),a=e.getShaderSource(i),o=`${n.join(`
`)}
${i.additionalImplementations}
${a}`,d=r.createShaderModule({code:o,label:e.name});ir("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let p=r.createComputePipeline({compute:{module:d,entryPoint:"main"},layout:"auto",label:e.name});return Be(e.name),{programInfo:e,computePipeline:p,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&n<=i)return[t,r,n];let a=t*r*n,o=Math.ceil(Math.sqrt(a));if(o>i){if(o=Math.ceil(Math.cbrt(a)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),_a,ga,wa,dp,ya,ba=w(()=>{He(),zt(),ts(),Dn(),_t(),Tn(),fa(),_a=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let a=e[n].dims.length;r.push(`${i};${a}`);break}case"dims":{let a=e[n].dims.join(",");r.push(`${i};${a}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},ga=(e,t,r)=>{var i,a;let n=e.name;return(i=e.shaderCache)!=null&&i.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${_a(t,((a=e.shaderCache)==null?void 0:a.inputDependencies)??new Array(t.length).fill("dims"))}`,n},wa=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},dp=class{constructor(e){this.subgroupsSupported=e.features.has("subgroups"),this.subgroupsF16Supported=e.features.has("subgroups");let t=e.limits;!this.subgroupsSupported||!t.minSubgroupSize||!t.maxSubgroupSize?this.subgroupSizeRange=void 0:this.subgroupSizeRange=[t.minSubgroupSize,t.maxSubgroupSize]}},ya=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r},i=a=>t.features.has(a)&&r.push(a)&&!0;i("chromium-experimental-timestamp-query-inside-passes")||i("timestamp-query"),i("shader-f16"),i("subgroups")&&i("subgroups-f16"),this.device=await t.requestDevice(n),this.deviceInfo=new dp(this.device),this.adapterInfo=new wa(t.info||await t.requestAdapterInfo()),this.gpuDataManager=ut(this),this.programManager=new xn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,yn(e.logLevel,!!e.debug),this.device.onuncapturederror=a=>{a.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${a.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Xe(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var n;let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let i=0;i<t.length/2;i++){let a=r[i],o=a.kernelId,d=this.kernels.get(o),p=d.kernelType,h=d.kernelName,C=a.programName,k=a.inputTensorViews,u=a.outputTensorViews,B=t[i*2],R=t[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=B);let j=Number(B-this.queryTimeBase),ee=Number(R-this.queryTimeBase);if(!Number.isSafeInteger(j)||!Number.isSafeInteger(ee))throw new RangeError("incorrect timestamp range");if((n=this.env.webgpu.profiling)!=null&&n.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:k.map(re=>({dims:re.dims,dataType:ws(re.dataType)})),outputsMetadata:u.map(re=>({dims:re.dims,dataType:ws(re.dataType)})),kernelId:o,kernelType:p,kernelName:h,programName:C,startTime:j,endTime:ee});else{let re="";k.forEach((me,pe)=>{re+=`input[${pe}]: [${me.dims}] | ${ws(me.dataType)}, `});let X="";u.forEach((me,pe)=>{X+=`output[${pe}]: [${me.dims}] | ${ws(me.dataType)}, `}),console.log(`[profiling] kernel "${o}|${p}|${h}|${C}" ${re}${X}execution time: ${ee-j} ns`)}Ze("GPU",`${C}::${B}::${R}`)}e.unmap(),this.pendingQueries.delete(e)}),Be()}run(e,t,r,n,i,a){Xe(e.name);let o=[];for(let X=0;X<t.length;++X){let me=t[X].data;if(me===0)continue;let pe=this.gpuDataManager.get(me);if(!pe)throw new Error(`no GPU data for input: ${me}`);o.push(pe)}let{outputs:d,dispatchGroup:p,programUniforms:h}=e.getRunData(t),C=r.length===0?d.map((X,me)=>me):r;if(C.length!==d.length)throw new Error(`Output size ${C.length} must be equal to ${d.length}.`);let k=[],u=[];for(let X=0;X<d.length;++X){if(!Number.isInteger(C[X])||C[X]<-3||C[X]>=a)throw new Error(`Invalid output index: ${C[X]}`);if(C[X]===-3)continue;let me=C[X]===-1,pe=C[X]===-2,Me=me||pe?i(d[X].dataType,d[X].dims):n(C[X],d[X].dataType,d[X].dims);if(k.push(Me),Me.data===0)continue;let $e=this.gpuDataManager.get(Me.data);if(!$e)throw new Error(`no GPU data for output: ${Me.data}`);if(me&&this.temporaryData.push($e),pe){let Ie=this.kernelPersistentData.get(this.currentKernelId);Ie||(Ie=[],this.kernelPersistentData.set(this.currentKernelId,Ie)),Ie.push($e)}u.push($e)}if(o.length!==t.length||u.length!==k.length){if(u.length===0)return Be(e.name),k;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let B;if(h){let X=0,me=[];h.forEach(Ie=>{let Ue=typeof Ie.data=="number"?[Ie.data]:Ie.data;if(Ue.length===0)return;let at=Ie.type===10?2:4,Et,Kt;Ie.type===10?(Kt=Ue.length>4?16:Ue.length>2?8:Ue.length*at,Et=Ue.length>4?16:at*Ue.length):(Kt=Ue.length<=2?Ue.length*at:16,Et=16),X=Math.ceil(X/Kt)*Kt,me.push(X);let Yt=Ie.type===10?8:4;X+=Ue.length>4?Math.ceil(Ue.length/Yt)*Et:Ue.length*at});let pe=16;X=Math.ceil(X/pe)*pe;let Me=new ArrayBuffer(X);h.forEach((Ie,Ue)=>{let at=me[Ue],Et=typeof Ie.data=="number"?[Ie.data]:Ie.data;if(Ie.type===6)new Int32Array(Me,at,Et.length).set(Et);else if(Ie.type===12)new Uint32Array(Me,at,Et.length).set(Et);else if(Ie.type===10)new Uint16Array(Me,at,Et.length).set(Et);else if(Ie.type===1)new Float32Array(Me,at,Et.length).set(Et);else throw new Error(`Unsupported uniform type: ${ws(Ie.type)}`)});let $e=this.gpuDataManager.create(X,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer($e.buffer,0,Me,0,X),this.gpuDataManager.release($e.id),B={offset:0,size:X,buffer:$e.buffer}}let R=this.programManager.normalizeDispatchGroupSize(p),j=R[1]===1&&R[2]===1,ee=ga(e,t,j),re=this.programManager.getArtifact(ee);if(re||(re=this.programManager.build(e,R),this.programManager.setArtifact(ee,re),ir("info",()=>`[artifact] key: ${ee}, programName: ${e.name}`)),h&&re.uniformVariablesInfo){if(h.length!==re.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${re.uniformVariablesInfo.length}, got ${h.length} in program "${re.programInfo.name}".`);for(let X=0;X<h.length;X++){let me=h[X],pe=me.type,Me=typeof me.data=="number"?1:me.data.length,[$e,Ie]=re.uniformVariablesInfo[X];if(pe!==$e||Me!==Ie)throw new Error(`Uniform variable ${X} mismatch: expect type ${$e} with size ${Ie}, got type ${pe} with size ${Me} in program "${re.programInfo.name}".`)}}if(ir("info",()=>`[ProgramManager] run "${e.name}" (key=${ee}) with ${R[0]}x${R[1]}x${R[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let X={kernelId:this.currentKernelId,programName:re.programInfo.name,inputTensorViews:t,outputTensorViews:k};this.pendingKernels.push(X),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(X)}return this.programManager.run(re,o,u,R,B),Be(e.name),k}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let i=Us.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let a={kernelType:e,kernelName:n,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,a)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let i=n.kernelType,a=n.kernelName,o=n.kernelEntry,d=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${a}" is not allowed to be called recursively`);this.currentKernelId=e,d[0]&&(d[1]=d[0](d[1]),d[0]=void 0),ir("info",()=>`[WebGPU] Start to run kernel "[${i}] ${a}"...`);let p=this.env.debug;this.temporaryData=[];try{return p&&this.device.pushErrorScope("validation"),o(t,d[1]),0}catch(h){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${a}" failed. ${h}`)),1}finally{p&&r.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${i}] ${a}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let a=i.get(t),o=this.gpuDataManager.registerExternalBuffer(r,n,a);return i.set(t,[o,r]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await Pe(this,e,t);return bn(n.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ir("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ir("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ir("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let i=this.getComputePassEncoder(),a=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(a.computePipeline),i.setBindGroup(0,a.bindGroup),i.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Ma,va,Ta,Kn,mc,fc,cp,on,xs=w(()=>{ts(),Ma=1,va=()=>Ma++,Ta=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Kn=(e,t)=>{let r=Ta.get(e);if(!r)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce((n,i)=>n*i)*r/8):0},mc=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Kn(this.dataType,this.tensorShape)}destroy(){ir("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(e,t){return this.dataType===e&&this.tensorShape.length===t.length&&this.tensorShape.every((r,n)=>r===t[n])}},fc=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,r){if(this.wrapper){if(this.wrapper.sameTypeAndShape(e,t))return this.wrapper.tensor;if(r){if(this.wrapper.byteLength!==Kn(e,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let n=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,t,n,!0,!0),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper)if(e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else ir("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},cp=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=va();return this.tensorTrackersById.set(e,new fc(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,n){ir("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(t,r,n)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){ir("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t==null?void 0:t.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,n){let i=va(),a=new mc({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:n});return this.tensorTrackersById.set(i,new fc(this,a)),this.externalTensors.add(a),i}async getCachedTensor(e,t,r,n,i){let a=this.backend.currentSessionId;for(let[p,h]of this.freeTensors.entries())if(h.sameTypeAndShape(e,t)){ir("verbose",()=>`[WebNN] Reusing tensor {dataType: ${e}, shape: ${t}}`);let C=this.freeTensors.splice(p,1)[0];return C.sessionId=a,C}let o=this.backend.currentContext;ir("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let d=await o.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:i});return new mc({sessionId:a,context:o,tensor:d,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},on=(...e)=>new cp(...e)}),Lp,kh,Sh,Af=w(()=>{zt(),It(),Dn(),xs(),ts(),Lp=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),kh=(e,t)=>{if(e===t)return!0;if(e===void 0||t===void 0)return!1;let r=Object.keys(e).sort(),n=Object.keys(t).sort();return r.length===n.length&&r.every((i,a)=>i===n[a]&&e[i]===t[i])},Sh=class{constructor(e){this.tensorManager=on(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],yn(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}async createMLContext(e){if(e instanceof GPUDevice){let r=this.mlContextCache.findIndex(n=>n.gpuDevice===e);if(r!==-1)return this.mlContextCache[r].mlContext;{let n=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:n}),n}}else if(e===void 0){let r=this.mlContextCache.findIndex(n=>n.options===void 0&&n.gpuDevice===void 0);if(r!==-1)return this.mlContextCache[r].mlContext;{let n=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:n}),n}}let t=this.mlContextCache.findIndex(r=>kh(r.options,e));if(t!==-1)return this.mlContextCache[t].mlContext;{let r=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:r}),r}}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);if(r.delete(e),r.size===0){this.sessionIdsByMLContext.delete(t);let n=this.mlContextCache.findIndex(i=>i.mlContext===t);n!==-1&&this.mlContextCache.splice(n,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){ir("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,n){let i=Lp.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,r,n)}uploadTensor(e,t){if(!dt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");ir("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return bn(r,t)}}registerMLTensor(e,t,r){let n=Lp.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,n,r);return ir("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,r,n,i,a){if(!a)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let d=a.get(o);if(!d)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+r>d.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let p=d.slice(t,t+r).buffer,h;switch(i.dataType){case"float32":h=new Float32Array(p);break;case"float16":h=new Uint16Array(p);break;case"int32":h=new Int32Array(p);break;case"uint32":h=new Uint32Array(p);break;case"int64":h=new BigInt64Array(p);break;case"uint64":h=new BigUint64Array(p);break;case"int8":h=new Int8Array(p);break;case"int4":case"uint4":case"uint8":h=new Uint8Array(p);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return ir("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),n.constant(i,h)}flush(){}}}),$h={};M($h,{init:()=>Ih});var pp,Ah,Ih,If=w(()=>{zt(),ba(),ts(),Dt(),Af(),pp=class _f{constructor(t,r,n,i){this.module=t,this.dataType=r,this.data=n,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Se.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Se.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Se.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=Se.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Se.size(t)!==Se.size(this.dims))throw new Error("Invalid new shape");return new _f(this.module,this.dataType,this.data,t)}},Ah=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo,this.deviceInfo=t.deviceInfo;let n=e.PTR_SIZE,i=r/e.PTR_SIZE,a=n===4?"i32":"i64";this.opKernelContext=Number(e.getValue(n*i++,a));let o=Number(e.getValue(n*i++,a));this.outputCount=Number(e.getValue(n*i++,a)),this.customDataOffset=Number(e.getValue(n*i++,"*")),this.customDataSize=Number(e.getValue(n*i++,a));let d=[];for(let p=0;p<o;p++){let h=Number(e.getValue(n*i++,a)),C=Number(e.getValue(n*i++,"*")),k=Number(e.getValue(n*i++,a)),u=[];for(let B=0;B<k;B++)u.push(Number(e.getValue(n*i++,a)));d.push(new pp(e,h,C,u))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){var o;let r=((o=t==null?void 0:t.inputs)==null?void 0:o.map(d=>typeof d=="number"?this.inputs[d]:d))??this.inputs,n=(t==null?void 0:t.outputs)??[],i=(d,p,h)=>new pp(this.module,p,this.output(d,h),h),a=(d,p)=>{let h=es(d,p);if(!h)throw new Error(`Unsupported data type: ${d}`);let C=h>0?this.backend.gpuDataManager.create(h).id:0;return new pp(this.module,d,C,p)};return this.backend.run(e,r,n,i,a,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.PTR_SIZE,i=n===4?"i32":"i64",a=this.module.stackAlloc((1+t.length)*n);this.module.setValue(a,t.length,i);for(let o=0;o<t.length;o++)this.module.setValue(a+n*(o+1),t[o],i);return this.module._JsepOutput(this.opKernelContext,e,a)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},Ih=async(e,t,r,n)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let a=new ya;await a.initialize(r,n),i("webgpu",[a,o=>a.alloc(Number(o)),o=>a.free(o),(o,d,p,h=!1)=>{if(h)ir("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(o)}, dst=${Number(d)}, size=${Number(p)}`),a.memcpy(Number(o),Number(d));else{ir("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(o)}, gpuDataId=${Number(d)}, size=${Number(p)}`);let C=t.HEAPU8.subarray(Number(o>>>0),Number(o>>>0)+Number(p));a.upload(Number(d),C)}},async(o,d,p)=>{ir("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${d}, size=${p}`),await a.download(Number(o),()=>t.HEAPU8.subarray(Number(d)>>>0,Number(d+p)>>>0))},(o,d,p)=>a.createKernel(o,Number(d),p,t.UTF8ToString(t._JsepGetNodeName(Number(d)))),o=>a.releaseKernel(o),(o,d,p,h)=>{ir("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${o}, contextDataOffset=${d}`);let C=new Ah(t,a,Number(d));return a.computeKernel(Number(o),C,h)},()=>a.captureBegin(),()=>a.captureEnd(),()=>a.replay()])}else{let a=new Sh(r);i("webnn",[a,()=>a.reserveTensorId(),o=>a.releaseTensorId(o),async(o,d,p,h)=>a.ensureTensor(o,d,p,h),(o,d)=>{a.uploadTensor(o,d)},async(o,d)=>a.downloadTensor(o,d)])}}}),Oh,zp,Bp,Hn,Fh,hp,Rp,Np,jp,Up,Wp,Vp,Dh=w(()=>{Ks(),ri(),zt(),It(),_s(),$n(),Oh=(e,t)=>{dt()._OrtInit(e,t)!==0&&rr("Can't initialize onnxruntime.")},zp=async e=>{Oh(e.wasm.numThreads,Hs(e.logLevel))},Bp=async(e,t)=>{{let r=(If(),b($h)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${a}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",dt(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",dt(),e)}}},Hn=new Map,Fh=e=>{let t=dt(),r=t.stackSave();try{let n=t.PTR_SIZE,i=t.stackAlloc(2*n);t._OrtGetInputOutputCount(e,i,i+n)!==0&&rr("Can't get session input/output count.");let a=n===4?"i32":"i64";return[Number(t.getValue(i,a)),Number(t.getValue(i+n,a))]}finally{t.stackRestore(r)}},hp=e=>{let t=dt(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Rp=async(e,t)=>{var k,u,B;let r,n,i=dt();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=hp(e);let a=0,o=0,d=0,p=[],h=[],C=[];try{if([o,p]=Sn(t),(t==null?void 0:t.externalData)&&i.mountExternalData){let Me=[];for(let $e of t.externalData){let Ie=typeof $e=="string"?$e:$e.path;Me.push(wn(typeof $e=="string"?$e:$e.data).then(Ue=>{i.mountExternalData(Ie,Ue)}))}await Promise.all(Me)}for(let Me of(t==null?void 0:t.executionProviders)??[])if((typeof Me=="string"?Me:Me.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,typeof Me!="string"){let $e=Me,Ie=$e==null?void 0:$e.context,Ue=$e==null?void 0:$e.gpuDevice,at=$e==null?void 0:$e.deviceType,Et=$e==null?void 0:$e.powerPreference;Ie?i.currentContext=Ie:Ue?i.currentContext=await i.jsepCreateMLContext(Ue):i.currentContext=await i.jsepCreateMLContext({deviceType:at,powerPreference:Et})}else i.currentContext=await i.jsepCreateMLContext();break}a=await i._OrtCreateSession(r,n,o),a===0&&rr("Can't create a session."),(k=i.jsepOnCreateSession)==null||k.call(i),i.currentContext&&(i.jsepRegisterMLContext(a,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[R,j]=Fh(a),ee=!!(t!=null&&t.enableGraphCapture),re=[],X=[],me=[];for(let Me=0;Me<R;Me++){let $e=i._OrtGetInputName(a,Me);$e===0&&rr("Can't get an input name."),h.push($e),re.push(i.UTF8ToString($e))}for(let Me=0;Me<j;Me++){let $e=i._OrtGetOutputName(a,Me);$e===0&&rr("Can't get an output name."),C.push($e);let Ie=i.UTF8ToString($e);X.push(Ie);{if(ee&&(t==null?void 0:t.preferredOutputLocation)===void 0){me.push("gpu-buffer");continue}let Ue=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((u=t==null?void 0:t.preferredOutputLocation)==null?void 0:u[Ie])??"cpu";if(Ue!=="cpu"&&Ue!=="cpu-pinned"&&Ue!=="gpu-buffer"&&Ue!=="ml-tensor")throw new Error(`Not supported preferred output location: ${Ue}.`);if(ee&&Ue!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${Ue}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);me.push(Ue)}}let pe=null;return me.some(Me=>Me==="gpu-buffer"||Me==="ml-tensor")&&(d=i._OrtCreateBinding(a),d===0&&rr("Can't create IO binding."),pe={handle:d,outputPreferredLocations:me,outputPreferredLocationsEncoded:me.map(Me=>gn(Me))}),Hn.set(a,[a,h,C,pe,ee,!1]),[a,re,X]}catch(R){throw h.forEach(j=>i._OrtFree(j)),C.forEach(j=>i._OrtFree(j)),d!==0&&i._OrtReleaseBinding(d)!==0&&rr("Can't release IO binding."),a!==0&&i._OrtReleaseSession(a)!==0&&rr("Can't release session."),R}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o)!==0&&rr("Can't release session options."),p.forEach(R=>i._free(R)),(B=i.unmountExternalData)==null||B.call(i)}},Np=e=>{var p;let t=dt(),r=Hn.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,a,o,d]=r;o&&(d&&t._OrtClearBoundOutputs(o.handle)!==0&&rr("Can't clear bound outputs."),t._OrtReleaseBinding(o.handle)!==0&&rr("Can't release IO binding.")),(p=t.jsepOnReleaseSession)==null||p.call(t,e),i.forEach(h=>t._OrtFree(h)),a.forEach(h=>t._OrtFree(h)),t._OrtReleaseSession(n)!==0&&rr("Can't release session."),Hn.delete(e)},jp=(e,t,r,n,i,a=!1)=>{if(!e){t.push(0);return}let o=dt(),d=o.PTR_SIZE,p=e[0],h=e[1],C=e[3],k,u;if(p==="string"&&(C==="gpu-buffer"||C==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(a&&C!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(C==="gpu-buffer"){let j=e[2].gpuBuffer;u=es(zs(p),h);let ee=o.jsepRegisterBuffer;if(!ee)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');k=ee(n,i,j,u)}else if(C==="ml-tensor"){let j=e[2].mlTensor;u=es(zs(p),h);let ee=o.jsepRegisterMLTensor;if(!ee)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');k=ee(j,zs(p),h)}else{let j=e[2];if(Array.isArray(j)){u=d*j.length,k=o._malloc(u),r.push(k);for(let ee=0;ee<j.length;ee++){if(typeof j[ee]!="string")throw new TypeError(`tensor data at index ${ee} is not a string`);o.setValue(k+ee*d,dr(j[ee],r),"*")}}else u=j.byteLength,k=o._malloc(u),r.push(k),o.HEAPU8.set(new Uint8Array(j.buffer,j.byteOffset,u),k)}let B=o.stackSave(),R=o.stackAlloc(4*h.length);try{h.forEach((ee,re)=>o.setValue(R+re*d,ee,d===4?"i32":"i64"));let j=o._OrtCreateTensor(zs(p),k,u,R,h.length,gn(C));j===0&&rr(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push(j)}finally{o.stackRestore(B)}},Up=async(e,t,r,n,i,a)=>{var Kt,Yt;let o=dt(),d=o.PTR_SIZE,p=Hn.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);let h=p[0],C=p[1],k=p[2],u=p[3],B=p[4],R=p[5],j=t.length,ee=n.length,re=0,X=[],me=[],pe=[],Me=[],$e=o.stackSave(),Ie=o.stackAlloc(j*d),Ue=o.stackAlloc(j*d),at=o.stackAlloc(ee*d),Et=o.stackAlloc(ee*d);try{(Kt=o.jsepOnRunStart)==null||Kt.call(o,h),[re,X]=ds(a);for(let $t=0;$t<j;$t++)jp(r[$t],me,Me,e,t[$t],B);for(let $t=0;$t<ee;$t++)jp(i[$t],pe,Me,e,j+n[$t],B);for(let $t=0;$t<j;$t++)o.setValue(Ie+$t*d,me[$t],"*"),o.setValue(Ue+$t*d,C[t[$t]],"*");for(let $t=0;$t<ee;$t++)o.setValue(at+$t*d,pe[$t],"*"),o.setValue(Et+$t*d,k[n[$t]],"*");if(u&&!R){let{handle:$t,outputPreferredLocations:jt,outputPreferredLocationsEncoded:Mr}=u;if(C.length!==j)throw new Error(`input count from feeds (${j}) is expected to be always equal to model's input count (${C.length}).`);for(let Ht=0;Ht<j;Ht++){let Gt=t[Ht];await o._OrtBindInput($t,C[Gt],me[Ht])!==0&&rr(`Can't bind input[${Ht}] for session=${e}.`)}for(let Ht=0;Ht<ee;Ht++){let Gt=n[Ht];(Yt=i[Ht])!=null&&Yt[3]?o._OrtBindOutput($t,k[Gt],pe[Ht],0)!==0&&rr(`Can't bind pre-allocated output[${Ht}] for session=${e}.`):o._OrtBindOutput($t,k[Gt],0,Mr[Gt])!==0&&rr(`Can't bind output[${Ht}] to ${jt[Ht]} for session=${e}.`)}Hn.set(e,[h,C,k,u,B,!0])}let kt;u?kt=await o._OrtRunWithBinding(h,u.handle,ee,at,re):kt=await o._OrtRun(h,Ue,Ie,j,Et,ee,at,re),kt!==0&&rr("failed to call OrtRun().");let Jt=[];for(let $t=0;$t<ee;$t++){let jt=Number(o.getValue(at+$t*d,"*"));if(jt===pe[$t]){Jt.push(i[$t]);continue}let Mr=o.stackSave(),Ht=o.stackAlloc(4*d),Gt=!1,Pr,nt=0;try{o._OrtGetTensorData(jt,Ht,Ht+d,Ht+2*d,Ht+3*d)!==0&&rr(`Can't access output tensor data on index ${$t}.`);let Pt=d===4?"i32":"i64",cr=Number(o.getValue(Ht,Pt));nt=o.getValue(Ht+d,"*");let Lr=o.getValue(Ht+d*2,"*"),ms=Number(o.getValue(Ht+d*3,Pt)),Hr=[];for(let Ar=0;Ar<ms;Ar++)Hr.push(Number(o.getValue(Lr+Ar*d,Pt)));o._OrtFree(Lr)!==0&&rr("Can't free memory for tensor dims.");let an=Hr.reduce((Ar,Tr)=>Ar*Tr,1);Pr=ws(cr);let Si=u==null?void 0:u.outputPreferredLocations[n[$t]];if(Pr==="string"){if(Si==="gpu-buffer"||Si==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Ar=[];for(let Tr=0;Tr<an;Tr++){let Xn=o.getValue(nt+Tr*d,"*"),wc=o.getValue(nt+(Tr+1)*d,"*"),Xp=Tr===an-1?void 0:wc-Xn;Ar.push(o.UTF8ToString(Xn,Xp))}Jt.push([Pr,Hr,Ar,"cpu"])}else if(Si==="gpu-buffer"&&an>0){let Ar=o.jsepGetBuffer;if(!Ar)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Tr=Ar(nt),Xn=es(cr,an);if(Xn===void 0||!_n(Pr))throw new Error(`Unsupported data type: ${Pr}`);Gt=!0,Jt.push([Pr,Hr,{gpuBuffer:Tr,download:o.jsepCreateDownloader(Tr,Xn,Pr),dispose:()=>{o._OrtReleaseTensor(jt)!==0&&rr("Can't release tensor.")}},"gpu-buffer"])}else if(Si==="ml-tensor"&&an>0){let Ar=o.jsepEnsureTensor;if(!Ar)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(es(cr,an)===void 0||!qs(Pr))throw new Error(`Unsupported data type: ${Pr}`);let Tr=await Ar(nt,cr,Hr,!1);Gt=!0,Jt.push([Pr,Hr,{mlTensor:Tr,download:o.jsepCreateMLTensorDownloader(nt,Pr),dispose:()=>{o.jsepReleaseTensorId(nt),o._OrtReleaseTensor(jt)}},"ml-tensor"])}else{let Ar=fn(Pr),Tr=new Ar(an);new Uint8Array(Tr.buffer,Tr.byteOffset,Tr.byteLength).set(o.HEAPU8.subarray(nt,nt+Tr.byteLength)),Jt.push([Pr,Hr,Tr,"cpu"])}}finally{o.stackRestore(Mr),Pr==="string"&&nt&&o._free(nt),Gt||o._OrtReleaseTensor(jt)}}return u&&!B&&(o._OrtClearBoundOutputs(u.handle)!==0&&rr("Can't clear bound outputs."),Hn.set(e,[h,C,k,u,B,!1])),Jt}finally{o.stackRestore($e),me.forEach(kt=>o._OrtReleaseTensor(kt)),pe.forEach(kt=>o._OrtReleaseTensor(kt)),Me.forEach(kt=>o._free(kt)),re!==0&&o._OrtReleaseRunOptions(re),X.forEach(kt=>o._free(kt))}},Wp=e=>{let t=dt(),r=Hn.get(e);if(!r)throw new Error("invalid session id");let n=r[0],i=t._OrtEndProfiling(n);i===0&&rr("Can't get an profile file name."),t._OrtFree(i)},Vp=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),qn,hs,xa,_c,gc,mp,Gp,fp,Ci,ki,Lh,zh,Bh,Rh,Nh,jh,Uh,Wh,Vh=w(()=>{He(),Dh(),It(),Cs(),qn=()=>!!T.wasm.proxy&&typeof document<"u",xa=!1,_c=!1,gc=!1,fp=new Map,Ci=(e,t)=>{let r=fp.get(e);r?r.push(t):fp.set(e,[t])},ki=()=>{if(xa||!_c||gc||!hs)throw new Error("worker not ready")},Lh=e=>{switch(e.data.type){case"init-wasm":xa=!1,e.data.err?(gc=!0,Gp[1](e.data.err)):(_c=!0,Gp[0]()),mp&&(URL.revokeObjectURL(mp),mp=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=fp.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},zh=async()=>{if(!_c){if(xa)throw new Error("multiple calls to 'initWasm()' detected.");if(gc)throw new Error("previous call to 'initWasm()' failed.");if(xa=!0,qn())return new Promise((e,t)=>{hs==null||hs.terminate(),Vs().then(([r,n])=>{try{hs=n,hs.onerror=a=>t(a),hs.onmessage=Lh,Gp=[e,t];let i={type:"init-wasm",in:T};hs.postMessage(i),mp=r}catch(i){t(i)}},t)});try{await ot(T.wasm),await zp(T),_c=!0}catch(e){throw gc=!0,e}finally{xa=!1}}},Bh=async e=>{if(qn())return ki(),new Promise((t,r)=>{Ci("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:T}};hs.postMessage(n)});await Bp(T,e)},Rh=async e=>qn()?(ki(),new Promise((t,r)=>{Ci("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};hs.postMessage(n,[e.buffer])})):hp(e),Nh=async(e,t)=>{if(qn()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ki(),new Promise((r,n)=>{Ci("create",[r,n]);let i={type:"create",in:{model:e,options:{...t}}},a=[];e instanceof Uint8Array&&a.push(e.buffer),hs.postMessage(i,a)})}else return Rp(e,t)},jh=async e=>{if(qn())return ki(),new Promise((t,r)=>{Ci("release",[t,r]);let n={type:"release",in:e};hs.postMessage(n)});Np(e)},Uh=async(e,t,r,n,i,a)=>{if(qn()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return ki(),new Promise((o,d)=>{Ci("run",[o,d]);let p=r,h={type:"run",in:{sessionId:e,inputIndices:t,inputs:p,outputIndices:n,options:a}};hs.postMessage(h,Vp(p))})}else return Up(e,t,r,n,i,a)},Wh=async e=>{if(qn())return ki(),new Promise((t,r)=>{Ci("end-profiling",[t,r]);let n={type:"end-profiling",in:e};hs.postMessage(n)});Wp(e)}}),Kp,Gh,Kh,Of=w(()=>{He(),Vh(),zt(),rt(),$n(),Kp=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Gh=e=>{switch(e[3]){case"cpu":return new ye(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!_n(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return ye.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}case"ml-tensor":{let t=e[0];if(!qs(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:n,dispose:i}=e[2];return ye.fromMLTensor(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Kh=class{async fetchModelAndCopyToWasmMemory(e){return Rh(await wn(e))}async loadModel(e,t){Xe();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await Nh(r,t),Be()}async dispose(){return jh(this.sessionId)}async run(e,t,r){Xe();let n=[],i=[];Object.entries(e).forEach(k=>{let u=k[0],B=k[1],R=this.inputNames.indexOf(u);if(R===-1)throw new Error(`invalid input '${u}'`);n.push(B),i.push(R)});let a=[],o=[];Object.entries(t).forEach(k=>{let u=k[0],B=k[1],R=this.outputNames.indexOf(u);if(R===-1)throw new Error(`invalid output '${u}'`);a.push(B),o.push(R)});let d=n.map((k,u)=>Kp(k,()=>`input "${this.inputNames[i[u]]}"`)),p=a.map((k,u)=>k?Kp(k,()=>`output "${this.outputNames[o[u]]}"`):null),h=await Uh(this.sessionId,i,d,o,p,r),C={};for(let k=0;k<h.length;k++)C[this.outputNames[o[k]]]=a[k]??Gh(h[k]);return Be(),C}startProfiling(){}endProfiling(){Wh(this.sessionId)}}}),Hh={};M(Hh,{OnnxruntimeWebAssemblyBackend:()=>qp,initializeFlags:()=>Hp,wasmBackend:()=>qh});var Hp,qp,qh,Ff=w(()=>{He(),Vh(),Of(),Cs(),Hp=()=>{if((typeof T.wasm.initTimeout!="number"||T.wasm.initTimeout<0)&&(T.wasm.initTimeout=0),T.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof T.wasm.proxy!="boolean"&&(T.wasm.proxy=!1),typeof T.wasm.trace!="boolean"&&(T.wasm.trace=!1),typeof T.wasm.numThreads!="number"||!Number.isInteger(T.wasm.numThreads)||T.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)T.wasm.numThreads=1;else{let e=typeof navigator>"u"?W("node:os").cpus().length:navigator.hardwareConcurrency;T.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},qp=class{async init(e){Hp(),await zh(),await Bh(e)}async createInferenceSessionHandler(e,t){let r=new Kh;return await r.loadModel(e,t),Promise.resolve(r)}},qh=new qp});He(),He(),He();var Df="1.21.0-dev.20241205-d27fecd3d3",Lf=Oe;{let e=(Ff(),b(Hh)).wasmBackend;Q("webgpu",e,5),Q("webnn",e,5),Q("cpu",e,10),Q("wasm",e,10)}Object.defineProperty(T.versions,"web",{value:Df,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(ae,$,s)=>{var _;s.r($),s.d($,{Tensor:()=>W.Tensor,createInferenceSession:()=>le,deviceToExecutionProviders:()=>Q,isONNXProxy:()=>Y,isONNXTensor:()=>N});var F=s("./src/env.js"),U=s("?2ce3"),J=s("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs"),W=s("./node_modules/onnxruntime-common/dist/esm/index.js");const w=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),M=[];let y,b;const v=Symbol.for("onnxruntime");if(v in globalThis)b=globalThis[v];else if(F.apis.IS_NODE_ENV){switch(b=U??(_||(_=s.t(U,2))),process.platform){case"win32":M.push("dml");break;case"linux":process.arch==="x64"&&M.push("cuda");break}M.push("cpu"),y=["cpu"]}else b=J,F.apis.IS_WEBNN_AVAILABLE&&M.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),F.apis.IS_WEBGPU_AVAILABLE&&M.push("webgpu"),M.push("wasm"),y=["wasm"];const D=b.InferenceSession;function Q(L=null){if(!L)return y;switch(L){case"auto":return M;case"gpu":return M.filter(A=>["webgpu","cuda","dml","webnn-gpu"].includes(A))}if(M.includes(L))return[w[L]??L];throw new Error(`Unsupported device: "${L}". Should be one of: ${M.join(", ")}.`)}let ne=null;async function le(L,A,g){ne&&await ne;const S=D.create(L,A);ne??(ne=S);const T=await S;return T.config=g,T}function N(L){return L instanceof b.Tensor}const H=b==null?void 0:b.env;H!=null&&H.wasm&&(H.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${F.env.version}/dist/`,H.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(H.wasm.numThreads=1)),H!=null&&H.webgpu&&(H.webgpu.powerPreference="high-performance");function Y(){var L;return(L=H==null?void 0:H.wasm)==null?void 0:L.proxy}F.env.backends.onnx=H},"./src/base/feature_extraction_utils.js":(ae,$,s)=>{s.r($),s.d($,{FeatureExtractor:()=>J,validate_audio_inputs:()=>W});var _=s("./src/utils/constants.js"),F=s("./src/utils/generic.js"),U=s("./src/utils/hub.js");class J extends F.Callable{constructor(M){super(),this.config=M}static async from_pretrained(M,y){const b=await(0,U.getModelJSON)(M,_.FEATURE_EXTRACTOR_NAME,!0,y);return new this(b)}}function W(w,M){var y;if(!(w instanceof Float32Array||w instanceof Float64Array))throw new Error(`${M} expects input to be a Float32Array or a Float64Array, but got ${((y=w==null?void 0:w.constructor)==null?void 0:y.name)??typeof w} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(ae,$,s)=>{s.r($),s.d($,{ImageProcessor:()=>L,post_process_instance_segmentation:()=>Y,post_process_object_detection:()=>v,post_process_panoptic_segmentation:()=>H,post_process_semantic_segmentation:()=>D});var _=s("./src/utils/generic.js"),F=s("./src/utils/tensor.js"),U=s("./src/utils/maths.js");s("./src/utils/image.js");var J=s("./src/utils/core.js"),W=s("./src/utils/hub.js"),w=s("./src/utils/constants.js");function M(A,g,S=0,T=null){const te=A/g;let Z=(0,U.bankers_round)(te)*g;return T!==null&&Z>T&&(Z=Math.floor(te)*g),Z<S&&(Z=Math.ceil(te)*g),Z}function y([A,g],S){return[Math.max(Math.floor(A/S),1)*S,Math.max(Math.floor(g/S),1)*S]}function b([A,g,S,T]){return[A-S/2,g-T/2,A+S/2,g+T/2]}function v(A,g=.5,S=null,T=!1){const te=A.logits,Z=A.pred_boxes,[de,he,we]=te.dims;if(S!==null&&S.length!==de)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ce=[];for(let xe=0;xe<de;++xe){let ze=S!==null?S[xe]:null,fe={boxes:[],classes:[],scores:[]},V=te[xe],ce=Z[xe];for(let _e=0;_e<he;++_e){let De=V[_e],Ne=[],Ke;if(T){Ke=De.sigmoid().data;for(let Je=0;Je<Ke.length;++Je)Ke[Je]>g&&Ne.push(Je)}else{let Je=(0,U.max)(De.data)[1];if(Je===we-1||(Ke=(0,U.softmax)(De.data),Ke[Je]<g))continue;Ne.push(Je)}for(const Je of Ne){let lt=ce[_e].data;lt=b(lt),ze!==null&&(lt=lt.map((Ge,oe)=>Ge*ze[(oe+1)%2])),fe.boxes.push(lt),fe.classes.push(Je),fe.scores.push(Ke[Je])}}Ce.push(fe)}return Ce}function D(A,g=null){const S=A.logits,T=S.dims[0];if(g!==null&&g.length!==T)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const te=[];for(let Z=0;Z<T;++Z){const de=g!==null?g[Z]:null;let he=S[Z];de!==null&&(he=(0,F.interpolate)(he,de,"bilinear",!1));const[we,Ce]=de??he.dims.slice(-2),xe=new F.Tensor("int32",new Int32Array(we*Ce),[we,Ce]),ze=he[0].data,fe=xe.data;for(let _e=1;_e<he.dims[0];++_e){const De=he[_e].data;for(let Ne=0;Ne<De.length;++Ne)De[Ne]>ze[Ne]&&(ze[Ne]=De[Ne],fe[Ne]=_e)}const V=new Array(he.dims[0]);for(let _e=0;_e<fe.length;++_e){const De=fe[_e];V[De]=De}const ce=V.filter(_e=>_e!==void 0);te.push({segmentation:xe,labels:ce})}return te}function Q(A,g,S,T){const te=[],Z=[],de=[];for(let he=0;he<A.dims[0];++he){const we=A[he],Ce=g[he],xe=(0,U.max)(we.data)[1];if(xe===T)continue;const fe=(0,U.softmax)(we.data)[xe];fe>S&&(te.push(Ce),Z.push(fe),de.push(xe))}return[te,Z,de]}function ne(A,g,S,T=.5,te=.8){const Z=[];let de=0,he=0;const we=g[S].data;for(let xe=0;xe<A.length;++xe)A[xe]===S&&(Z.push(xe),++de),we[xe]>=T&&++he;let Ce=de>0&&he>0;return Ce&&(Ce=de/he>te),[Ce,Z]}function le(A,g,S,T,te,Z=null,de=null){const[he,we]=de??A[0].dims,Ce=new F.Tensor("int32",new Int32Array(he*we),[he,we]),xe=[];if(de!==null)for(let _e=0;_e<A.length;++_e)A[_e]=(0,F.interpolate)(A[_e],de,"bilinear",!1);const ze=new Int32Array(A[0].data.length),fe=new Float32Array(A[0].data.length);for(let _e=0;_e<A.length;++_e){let De=g[_e];const Ne=A[_e].data;for(let Ke=0;Ke<Ne.length;++Ke)Ne[Ke]*=De,Ne[Ke]>fe[Ke]&&(ze[Ke]=_e,fe[Ke]=Ne[Ke])}let V=0;const ce=Ce.data;for(let _e=0;_e<S.length;++_e){const De=S[_e],[Ne,Ke]=ne(ze,A,_e,T,te);if(Ne){++V;for(const Je of Ke)ce[Je]=V;xe.push({id:V,label_id:De,score:g[_e]})}}return[Ce,xe]}function N(A,g,S=28,T=56*56,te=14*14*4*1280){if(A<S||g<S)throw new Error(`height:${A} or width:${g} must be larger than factor:${S}`);if(Math.max(A,g)/Math.min(A,g)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(A,g)/Math.min(A,g)}`);let Z=Math.round(A/S)*S,de=Math.round(g/S)*S;if(Z*de>te){const he=Math.sqrt(A*g/te);Z=Math.floor(A/he/S)*S,de=Math.floor(g/he/S)*S}else if(Z*de<T){const he=Math.sqrt(T/(A*g));Z=Math.ceil(A*he/S)*S,de=Math.ceil(g*he/S)*S}return[Z,de]}function H(A,g=.5,S=.5,T=.8,te=null,Z=null){te===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),te=new Set);const de=A.class_queries_logits??A.logits,we=(A.masks_queries_logits??A.pred_masks).sigmoid();let[Ce,xe,ze]=de.dims;if(ze-=1,Z!==null&&Z.length!==Ce)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let fe=[];for(let V=0;V<Ce;++V){let ce=Z!==null?Z[V]:null,_e=de[V],De=we[V],[Ne,Ke,Je]=Q(_e,De,g,ze);if(Je.length===0){let[oe,qe]=ce??De.dims.slice(-2),je=new F.Tensor("int32",new Int32Array(oe*qe).fill(-1),[oe,qe]);fe.push({segmentation:je,segments_info:[]});continue}let[lt,Ge]=le(Ne,Ke,Je,S,T,te,ce);fe.push({segmentation:lt,segments_info:Ge})}return fe}function Y(A,g=.5,S=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class L extends _.Callable{constructor(g){super(),this.image_mean=g.image_mean??g.mean,this.image_std=g.image_std??g.std,this.resample=g.resample??2,this.do_rescale=g.do_rescale??!0,this.rescale_factor=g.rescale_factor??1/255,this.do_normalize=g.do_normalize,this.do_thumbnail=g.do_thumbnail,this.size=g.size??g.image_size,this.do_resize=g.do_resize??this.size!==void 0,this.size_divisibility=g.size_divisibility??g.size_divisor,this.do_center_crop=g.do_center_crop,this.crop_size=g.crop_size,this.do_convert_rgb=g.do_convert_rgb??!0,this.do_crop_margin=g.do_crop_margin,this.pad_size=g.pad_size,this.do_pad=g.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=g.do_flip_channel_order??!1,this.config=g}async thumbnail(g,S,T=2){const te=g.height,Z=g.width,de=S.height,he=S.width;let we=Math.min(te,de),Ce=Math.min(Z,he);return we===te&&Ce===Z?g:(te>Z?Ce=Math.floor(Z*we/te):Z>te&&(we=Math.floor(te*Ce/Z)),await g.resize(Ce,we,{resample:T}))}async crop_margin(g,S=200){const T=g.clone().grayscale(),te=(0,U.min)(T.data)[0],de=(0,U.max)(T.data)[0]-te;if(de===0)return g;const he=S/255;let we=T.width,Ce=T.height,xe=0,ze=0;const fe=T.data;for(let V=0;V<T.height;++V){const ce=V*T.width;for(let _e=0;_e<T.width;++_e)(fe[ce+_e]-te)/de<he&&(we=Math.min(we,_e),Ce=Math.min(Ce,V),xe=Math.max(xe,_e),ze=Math.max(ze,V))}return g=await g.crop([we,Ce,xe,ze]),g}pad_image(g,S,T,{mode:te="constant",center:Z=!1,constant_values:de=0}={}){const[he,we,Ce]=S;let xe,ze;if(typeof T=="number"?(xe=T,ze=T):(xe=T.width,ze=T.height),xe!==we||ze!==he){const fe=new Float32Array(xe*ze*Ce);if(Array.isArray(de))for(let _e=0;_e<fe.length;++_e)fe[_e]=de[_e%Ce];else de!==0&&fe.fill(de);const[V,ce]=Z?[Math.floor((xe-we)/2),Math.floor((ze-he)/2)]:[0,0];for(let _e=0;_e<he;++_e){const De=(_e+ce)*xe,Ne=_e*we;for(let Ke=0;Ke<we;++Ke){const Je=(De+Ke+V)*Ce,lt=(Ne+Ke)*Ce;for(let Ge=0;Ge<Ce;++Ge)fe[Je+Ge]=g[lt+Ge]}}if(te==="symmetric"){if(Z)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const _e=he-1,De=we-1;for(let Ne=0;Ne<ze;++Ne){const Ke=Ne*xe,Je=(0,J.calculateReflectOffset)(Ne,_e)*we;for(let lt=0;lt<xe;++lt){if(Ne<he&&lt<we)continue;const Ge=(Ke+lt)*Ce,oe=(Je+(0,J.calculateReflectOffset)(lt,De))*Ce;for(let qe=0;qe<Ce;++qe)fe[Ge+qe]=g[oe+qe]}}}g=fe,S=[ze,xe,Ce]}return[g,S]}rescale(g){for(let S=0;S<g.length;++S)g[S]=this.rescale_factor*g[S]}get_resize_output_image_size(g,S){const[T,te]=g.size;let Z,de;if(this.do_thumbnail){const{height:he,width:we}=S;Z=Math.min(he,we)}else Number.isInteger(S)?(Z=S,de=this.config.max_size??Z):S!==void 0&&(Z=S.shortest_edge,de=S.longest_edge);if(Z!==void 0||de!==void 0){const he=Z===void 0?1:Math.max(Z/T,Z/te),we=T*he,Ce=te*he,xe=de===void 0?1:Math.min(de/we,de/Ce);let ze=Math.floor(Number((we*xe).toFixed(2))),fe=Math.floor(Number((Ce*xe).toFixed(2)));return this.size_divisibility!==void 0&&([ze,fe]=y([ze,fe],this.size_divisibility)),[ze,fe]}else if(S!==void 0&&S.width!==void 0&&S.height!==void 0){let he=S.width,we=S.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ce=we/te,xe=he/T;Math.abs(1-xe)<Math.abs(1-Ce)?Ce=xe:xe=Ce,we=M(Ce*te,this.config.ensure_multiple_of),he=M(xe*T,this.config.ensure_multiple_of)}return[he,we]}else{if(this.size_divisibility!==void 0)return y([T,te],this.size_divisibility);if(S.min_pixels!==void 0&&S.max_pixels!==void 0){const{min_pixels:he,max_pixels:we}=S,Ce=this.config.patch_size*this.config.merge_size;return N(te,T,Ce,he,we)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(S)}`)}}async resize(g){const[S,T]=this.get_resize_output_image_size(g,this.size);return await g.resize(S,T,{resample:this.resample})}async preprocess(g,{do_normalize:S=null,do_pad:T=null,do_convert_rgb:te=null,do_convert_grayscale:Z=null,do_flip_channel_order:de=null}={}){this.do_crop_margin&&(g=await this.crop_margin(g));const[he,we]=g.size;if(te??this.do_convert_rgb?g=g.rgb():Z&&(g=g.grayscale()),this.do_resize&&(g=await this.resize(g)),this.do_thumbnail&&(g=await this.thumbnail(g,this.size,this.resample)),this.do_center_crop){let V,ce;Number.isInteger(this.crop_size)?(V=this.crop_size,ce=this.crop_size):(V=this.crop_size.width,ce=this.crop_size.height),g=await g.center_crop(V,ce)}const Ce=[g.height,g.width];let xe=Float32Array.from(g.data),ze=[g.height,g.width,g.channels];if(this.do_rescale&&this.rescale(xe),S??this.do_normalize){let V=this.image_mean;Array.isArray(this.image_mean)||(V=new Array(g.channels).fill(V));let ce=this.image_std;if(Array.isArray(this.image_std)||(ce=new Array(g.channels).fill(V)),V.length!==g.channels||ce.length!==g.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${V.length}) and \`image_std\` (${ce.length}) must match the number of channels in the image (${g.channels}).`);for(let _e=0;_e<xe.length;_e+=g.channels)for(let De=0;De<g.channels;++De)xe[_e+De]=(xe[_e+De]-V[De])/ce[De]}if(T??this.do_pad){if(this.pad_size)[xe,ze]=this.pad_image(xe,[g.height,g.width,g.channels],this.pad_size);else if(this.size_divisibility){const[V,ce]=y([ze[1],ze[0]],this.size_divisibility);[xe,ze]=this.pad_image(xe,ze,{width:V,height:ce})}}if(de??this.do_flip_channel_order){if(ze[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let V=0;V<xe.length;V+=3){const ce=xe[V];xe[V]=xe[V+2],xe[V+2]=ce}}const fe=new F.Tensor("float32",xe,ze).permute(2,0,1);return{original_size:[we,he],reshaped_input_size:Ce,pixel_values:fe}}async _call(g,...S){Array.isArray(g)||(g=[g]);const T=await Promise.all(g.map(Z=>this.preprocess(Z)));return{pixel_values:(0,F.stack)(T.map(Z=>Z.pixel_values),0),original_sizes:T.map(Z=>Z.original_size),reshaped_input_sizes:T.map(Z=>Z.reshaped_input_size)}}static async from_pretrained(g,S){const T=await(0,W.getModelJSON)(g,w.IMAGE_PROCESSOR_NAME,!0,S);return new this(T)}}},"./src/base/processing_utils.js":(ae,$,s)=>{s.r($),s.d($,{Processor:()=>J});var _=s("./src/utils/constants.js"),F=s("./src/utils/generic.js"),U=s("./src/utils/hub.js");class J extends F.Callable{constructor(w,M){super(),this.config=w,this.components=M}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(w,M={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(w,{tokenize:!1,...M})}batch_decode(...w){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...w)}async _call(w,...M){for(const y of[this.image_processor,this.feature_extractor,this.tokenizer])if(y)return y(w,...M);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(w,M){const[y,b]=await Promise.all([this.uses_processor_config?(0,U.getModelJSON)(w,_.PROCESSOR_NAME,!0,M):{},Promise.all(this.classes.filter(v=>v in this).map(async v=>{const D=await this[v].from_pretrained(w,M);return[v.replace(/_class$/,""),D]})).then(Object.fromEntries)]);return new this(y,b)}}ve(J,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),ve(J,"uses_processor_config",!1)},"./src/configs.js":(ae,$,s)=>{s.r($),s.d($,{AutoConfig:()=>M,PretrainedConfig:()=>w,getKeyValueShapes:()=>W});var _=s("./src/utils/core.js"),F=s("./src/utils/hub.js");async function U(y,b){return await(0,F.getModelJSON)(y,"config.json",!0,b)}function J(y){const b={};let v={};switch(y.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":v=J(y.text_config);break;case"moondream1":v=J(y.phi_config);break;case"musicgen":v=J(y.decoder);break;case"multi_modality":v=J(y.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":b.num_heads="n_head",b.num_layers="n_layer",b.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":b.num_heads="num_attention_heads",b.num_layers="num_hidden_layers",b.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":b.num_heads="num_key_value_heads",b.num_layers="num_hidden_layers",b.hidden_size="hidden_size",b.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":b.num_heads="num_key_value_heads",b.num_layers="num_hidden_layers",b.dim_kv="head_dim";break;case"openelm":b.num_heads="num_kv_heads",b.num_layers="num_transformer_layers",b.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":b.num_heads="num_heads",b.num_layers="num_layers",b.hidden_size="hidden_size";break;case"bloom":b.num_heads="n_head",b.num_layers="n_layer",b.hidden_size="hidden_size";break;case"mpt":b.num_heads="n_heads",b.num_layers="n_layers",b.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":b.num_decoder_layers="num_decoder_layers",b.num_decoder_heads="num_heads",b.decoder_dim_kv="d_kv",b.num_encoder_layers="num_layers",b.num_encoder_heads="num_heads",b.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":b.num_decoder_layers="decoder_layers",b.num_decoder_heads="decoder_attention_heads",b.decoder_hidden_size="d_model",b.num_encoder_layers="encoder_layers",b.num_encoder_heads="encoder_attention_heads",b.encoder_hidden_size="d_model";break;case"speecht5":b.num_decoder_layers="decoder_layers",b.num_decoder_heads="decoder_attention_heads",b.decoder_hidden_size="hidden_size",b.num_encoder_layers="encoder_layers",b.num_encoder_heads="encoder_attention_heads",b.encoder_hidden_size="hidden_size";break;case"trocr":b.num_encoder_layers=b.num_decoder_layers="decoder_layers",b.num_encoder_heads=b.num_decoder_heads="decoder_attention_heads",b.encoder_hidden_size=b.decoder_hidden_size="d_model";break;case"musicgen_decoder":b.num_encoder_layers=b.num_decoder_layers="num_hidden_layers",b.num_encoder_heads=b.num_decoder_heads="num_attention_heads",b.encoder_hidden_size=b.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const Q=J(y.decoder),ne="num_decoder_layers"in Q,le=(0,_.pick)(y,["model_type","is_encoder_decoder"]);return ne?(le.num_decoder_layers=Q.num_decoder_layers,le.num_decoder_heads=Q.num_decoder_heads,le.decoder_hidden_size=Q.decoder_hidden_size,le.num_encoder_layers=Q.num_encoder_layers,le.num_encoder_heads=Q.num_encoder_heads,le.encoder_hidden_size=Q.encoder_hidden_size):(le.num_layers=Q.num_layers,le.num_heads=Q.num_heads,le.hidden_size=Q.hidden_size),le}const D={...v,...(0,_.pick)(y,["model_type","multi_query","is_encoder_decoder"])};for(const Q in b)D[Q]=y[b[Q]];return D}function W(y,{prefix:b="past_key_values",batch_size:v=1}={}){const D={},Q=y.normalized_config;if(Q.is_encoder_decoder&&"num_encoder_heads"in Q&&"num_decoder_heads"in Q){const ne=Q.encoder_dim_kv??Q.encoder_hidden_size/Q.num_encoder_heads,le=Q.decoder_dim_kv??Q.decoder_hidden_size/Q.num_decoder_heads,N=[v,Q.num_encoder_heads,0,ne],H=[v,Q.num_decoder_heads,0,le];for(let Y=0;Y<Q.num_decoder_layers;++Y)D[`${b}.${Y}.encoder.key`]=N,D[`${b}.${Y}.encoder.value`]=N,D[`${b}.${Y}.decoder.key`]=H,D[`${b}.${Y}.decoder.value`]=H}else{const ne=Q.num_heads,le=Q.num_layers,N=Q.dim_kv??Q.hidden_size/(Q.num_attention_heads??ne);if(Q.model_type==="falcon"){const H=[v*ne,0,N];for(let Y=0;Y<le;++Y)D[`${b}.${Y}.key`]=H,D[`${b}.${Y}.value`]=H}else if(Q.multi_query){const H=[v*ne,0,2*N];for(let Y=0;Y<le;++Y)D[`${b}.${Y}.key_value`]=H}else if(Q.model_type==="bloom"){const H=[v*ne,N,0],Y=[v*ne,0,N];for(let L=0;L<le;++L)D[`${b}.${L}.key`]=H,D[`${b}.${L}.value`]=Y}else if(Q.model_type==="openelm")for(let H=0;H<le;++H){const Y=[v,ne[H],0,N];D[`${b}.${H}.key`]=Y,D[`${b}.${H}.value`]=Y}else{const H=[v,ne,0,N];for(let Y=0;Y<le;++Y)D[`${b}.${Y}.key`]=H,D[`${b}.${Y}.value`]=H}}return D}class w{constructor(b){ve(this,"model_type",null);ve(this,"is_encoder_decoder",!1);ve(this,"max_position_embeddings");ve(this,"transformers.js_config");Object.assign(this,b),this.normalized_config=J(this)}static async from_pretrained(b,{progress_callback:v=null,config:D=null,cache_dir:Q=null,local_files_only:ne=!1,revision:le="main"}={}){D&&!(D instanceof w)&&(D=new w(D));const N=D??await U(b,{progress_callback:v,config:D,cache_dir:Q,local_files_only:ne,revision:le});return new this(N)}}class M{static async from_pretrained(...b){return w.from_pretrained(...b)}}},"./src/env.js":(ae,$,s)=>{var T,te;s.r($),s.d($,{apis:()=>le,env:()=>g});var _=s("?569f"),F=s("?3f59"),U=s("?154a");const J="3.1.2",W=typeof window<"u"&&typeof window.document<"u",w=typeof self<"u"&&((T=self.constructor)==null?void 0:T.name)==="DedicatedWorkerGlobalScope",M=typeof self<"u"&&"caches"in self,y=typeof navigator<"u"&&"gpu"in navigator,b=typeof navigator<"u"&&"ml"in navigator,v=typeof process<"u",D=v&&((te=process==null?void 0:process.release)==null?void 0:te.name)==="node",Q=!S(_),ne=!S(F),le=Object.freeze({IS_BROWSER_ENV:W,IS_WEBWORKER_ENV:w,IS_WEB_CACHE_AVAILABLE:M,IS_WEBGPU_AVAILABLE:y,IS_WEBNN_AVAILABLE:b,IS_PROCESS_AVAILABLE:v,IS_NODE_ENV:D,IS_FS_AVAILABLE:Q,IS_PATH_AVAILABLE:ne}),N=Q&&ne;let H="./";if(N){const Z=Object({url:self.location.href}).url;Z?H=F.dirname(F.dirname(U.fileURLToPath(Z))):typeof __dirname<"u"&&(H=F.dirname(__dirname))}const Y=N?F.join(H,"/.cache/"):null,L="/models/",A=N?F.join(H,L):L,g={version:J,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(W||w),localModelPath:A,useFS:Q,useBrowserCache:M,useFSCache:Q,cacheDir:Y,useCustomCache:!1,customCache:null};function S(Z){return Object.keys(Z).length===0}},"./src/generation/configuration_utils.js":(ae,$,s)=>{s.r($),s.d($,{GenerationConfig:()=>F});var _=s("./src/utils/core.js");class F{constructor(J){ve(this,"max_length",20);ve(this,"max_new_tokens",null);ve(this,"min_length",0);ve(this,"min_new_tokens",null);ve(this,"early_stopping",!1);ve(this,"max_time",null);ve(this,"do_sample",!1);ve(this,"num_beams",1);ve(this,"num_beam_groups",1);ve(this,"penalty_alpha",null);ve(this,"use_cache",!0);ve(this,"temperature",1);ve(this,"top_k",50);ve(this,"top_p",1);ve(this,"typical_p",1);ve(this,"epsilon_cutoff",0);ve(this,"eta_cutoff",0);ve(this,"diversity_penalty",0);ve(this,"repetition_penalty",1);ve(this,"encoder_repetition_penalty",1);ve(this,"length_penalty",1);ve(this,"no_repeat_ngram_size",0);ve(this,"bad_words_ids",null);ve(this,"force_words_ids",null);ve(this,"renormalize_logits",!1);ve(this,"constraints",null);ve(this,"forced_bos_token_id",null);ve(this,"forced_eos_token_id",null);ve(this,"remove_invalid_values",!1);ve(this,"exponential_decay_length_penalty",null);ve(this,"suppress_tokens",null);ve(this,"streamer",null);ve(this,"begin_suppress_tokens",null);ve(this,"forced_decoder_ids",null);ve(this,"guidance_scale",null);ve(this,"num_return_sequences",1);ve(this,"output_attentions",!1);ve(this,"output_hidden_states",!1);ve(this,"output_scores",!1);ve(this,"return_dict_in_generate",!1);ve(this,"pad_token_id",null);ve(this,"bos_token_id",null);ve(this,"eos_token_id",null);ve(this,"encoder_no_repeat_ngram_size",0);ve(this,"decoder_start_token_id",null);ve(this,"generation_kwargs",{});Object.assign(this,(0,_.pick)(J,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(ae,$,s)=>{s.r($),s.d($,{ClassifierFreeGuidanceLogitsProcessor:()=>N,ForcedBOSTokenLogitsProcessor:()=>w,ForcedEOSTokenLogitsProcessor:()=>M,LogitsProcessor:()=>U,LogitsProcessorList:()=>W,LogitsWarper:()=>J,MinLengthLogitsProcessor:()=>Q,MinNewTokensLengthLogitsProcessor:()=>ne,NoBadWordsLogitsProcessor:()=>le,NoRepeatNGramLogitsProcessor:()=>v,RepetitionPenaltyLogitsProcessor:()=>D,SuppressTokensAtBeginLogitsProcessor:()=>y,TemperatureLogitsWarper:()=>H,TopKLogitsWarper:()=>L,TopPLogitsWarper:()=>Y,WhisperTimeStampLogitsProcessor:()=>b});var _=s("./src/utils/generic.js");s("./src/utils/tensor.js");var F=s("./src/utils/maths.js");class U extends _.Callable{_call(g,S){throw Error("`_call` should be implemented in a subclass")}}class J extends _.Callable{_call(g,S){throw Error("`_call` should be implemented in a subclass")}}class W extends _.Callable{constructor(){super(),this.processors=[]}push(g){this.processors.push(g)}extend(g){this.processors.push(...g)}_call(g,S){let T=S;for(const te of this.processors)T=te(g,T);return T}[Symbol.iterator](){return this.processors.values()}}class w extends U{constructor(g){super(),this.bos_token_id=g}_call(g,S){for(let T=0;T<g.length;++T)if(g[T].length===1){const te=S[T].data;te.fill(-1/0),te[this.bos_token_id]=0}return S}}class M extends U{constructor(g,S){super(),this.max_length=g,this.eos_token_id=Array.isArray(S)?S:[S]}_call(g,S){for(let T=0;T<g.length;++T)if(g[T].length===this.max_length-1){const te=S[T].data;te.fill(-1/0);for(const Z of this.eos_token_id)te[Z]=0}return S}}class y extends U{constructor(g,S){super(),this.begin_suppress_tokens=g,this.begin_index=S}_call(g,S){for(let T=0;T<g.length;++T)if(g[T].length===this.begin_index){const te=S[T].data;for(const Z of this.begin_suppress_tokens)te[Z]=-1/0}return S}}class b extends U{constructor(g,S){super(),this.eos_token_id=Array.isArray(g.eos_token_id)?g.eos_token_id[0]:g.eos_token_id,this.no_timestamps_token_id=g.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=S.length,S.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=g.max_initial_timestamp_index}_call(g,S){for(let T=0;T<g.length;++T){const te=S[T].data;if(te[this.no_timestamps_token_id]=-1/0,g[T].length===this.begin_index-1){te.fill(-1/0),te[this.timestamp_begin]=0;continue}const Z=g[T].slice(this.begin_index),de=Z.length>=1&&Z[Z.length-1]>=this.timestamp_begin,he=Z.length<2||Z[Z.length-2]>=this.timestamp_begin;if(de&&(he?te.subarray(this.timestamp_begin).fill(-1/0):te.subarray(0,this.eos_token_id).fill(-1/0)),g[T].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ze=this.timestamp_begin+this.max_initial_timestamp_index;te.subarray(ze+1).fill(-1/0)}const we=(0,F.log_softmax)(te),Ce=Math.log(we.subarray(this.timestamp_begin).map(Math.exp).reduce((ze,fe)=>ze+fe)),xe=(0,F.max)(we.subarray(0,this.timestamp_begin))[0];Ce>xe&&te.subarray(0,this.timestamp_begin).fill(-1/0)}return S}}class v extends U{constructor(g){super(),this.no_repeat_ngram_size=g}getNgrams(g){const S=g.length,T=[];for(let Z=0;Z<S+1-this.no_repeat_ngram_size;++Z){const de=[];for(let he=0;he<this.no_repeat_ngram_size;++he)de.push(g[Z+he]);T.push(de.map(Number))}const te=new Map;for(const Z of T){const de=Z.slice(0,Z.length-1),he=JSON.stringify(de),we=te.get(he)??[];we.push(Z[Z.length-1]),te.set(he,we)}return te}getGeneratedNgrams(g,S){const T=S.slice(S.length+1-this.no_repeat_ngram_size,S.length);return g.get(JSON.stringify(T.map(Number)))??[]}calcBannedNgramTokens(g){const S=[];if(g.length+1<this.no_repeat_ngram_size)return S;{const T=this.getNgrams(g);return this.getGeneratedNgrams(T,g)}}_call(g,S){for(let T=0;T<g.length;++T){const te=S[T].data,Z=this.calcBannedNgramTokens(g[T]);for(const de of Z)te[de]=-1/0}return S}}class D extends U{constructor(g){super(),this.penalty=g}_call(g,S){for(let T=0;T<g.length;++T){const te=S[T].data;for(const Z of new Set(g[T])){const de=Number(Z);te[de]<0?te[de]*=this.penalty:te[de]/=this.penalty}}return S}}class Q extends U{constructor(g,S){super(),this.min_length=g,this.eos_token_id=Array.isArray(S)?S:[S]}_call(g,S){for(let T=0;T<g.length;++T)if(g[T].length<this.min_length){const te=S[T].data;for(const Z of this.eos_token_id)te[Z]=-1/0}return S}}class ne extends U{constructor(g,S,T){super(),this.prompt_length_to_skip=g,this.min_new_tokens=S,this.eos_token_id=Array.isArray(T)?T:[T]}_call(g,S){for(let T=0;T<g.length;++T)if(g[T].length-this.prompt_length_to_skip<this.min_new_tokens){const Z=S[T].data;for(const de of this.eos_token_id)Z[de]=-1/0}return S}}class le extends U{constructor(g,S){super(),this.bad_words_ids=g,this.eos_token_id=Array.isArray(S)?S:[S]}_call(g,S){for(let T=0;T<g.length;++T){const te=S[T].data,Z=g[T];for(const de of this.bad_words_ids){let he=!0;for(let we=1;we<=de.length-1&&de.length<Z.length;++we)if(de.at(-we-1)!=Z.at(-we)){he=!1;break}he&&(te[de.at(-1)]=-1/0)}}return S}}class N extends U{constructor(g){if(super(),g<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${g}.`);this.guidance_scale=g}_call(g,S){if(S.dims[0]!==2*g.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${S.dims[0]} for the logits and ${g.length} for the input ids.`);const T=g.length,te=S.slice([0,T],null),Z=S.slice([T,S.dims[0]],null);for(let de=0;de<Z.data.length;++de)Z.data[de]+=(te.data[de]-Z.data[de])*this.guidance_scale;return Z}}class H extends J{constructor(g){super(),this.temperature=g}_call(g,S){const T=S.data;for(let te=0;te<T.length;++te)T[te]/=this.temperature;return S}}class Y extends J{constructor(g,{filter_value:S=-1/0,min_tokens_to_keep:T=1}={}){if(super(),g<0||g>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${g}`);if(!Number.isInteger(T)||T<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${T}`);this.top_p=g,this.filter_value=S,this.min_tokens_to_keep=T}}class L extends J{constructor(g,{filter_value:S=-1/0,min_tokens_to_keep:T=1}={}){if(super(),!Number.isInteger(g)||g<0)throw new Error(`\`top_k\` must be a positive integer, but is ${g}`);this.top_k=Math.max(g,T),this.filter_value=S}}},"./src/generation/logits_sampler.js":(ae,$,s)=>{s.r($),s.d($,{LogitsSampler:()=>J});var _=s("./src/utils/generic.js"),F=s("./src/utils/tensor.js"),U=s("./src/utils/maths.js");s("./src/generation/configuration_utils.js");class J extends _.Callable{constructor(b){super(),this.generation_config=b}async _call(b){return this.sample(b)}async sample(b){throw Error("sample should be implemented in subclasses.")}getLogits(b,v){let D=b.dims.at(-1),Q=b.data;if(v===-1)Q=Q.slice(-D);else{let ne=v*D;Q=Q.slice(ne,ne+D)}return Q}randomSelect(b){let v=0;for(let Q=0;Q<b.length;++Q)v+=b[Q];let D=Math.random()*v;for(let Q=0;Q<b.length;++Q)if(D-=b[Q],D<=0)return Q;return 0}static getSampler(b){if(b.do_sample)return new w(b);if(b.num_beams>1)return new M(b);if(b.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${b.num_return_sequences}.`);return new W(b)}}class W extends J{async sample(b){const v=(0,U.max)(b.data)[1];return[[BigInt(v),0]]}}class w extends J{async sample(b){let v=b.dims.at(-1);this.generation_config.top_k>0&&(v=Math.min(this.generation_config.top_k,v));const[D,Q]=await(0,F.topk)(b,v),ne=(0,U.softmax)(D.data);return Array.from({length:this.generation_config.num_beams},()=>{const le=this.randomSelect(ne);return[Q.data[le],Math.log(ne[le])]})}}class M extends J{async sample(b){let v=b.dims.at(-1);this.generation_config.top_k>0&&(v=Math.min(this.generation_config.top_k,v));const[D,Q]=await(0,F.topk)(b,v),ne=(0,U.softmax)(D.data);return Array.from({length:this.generation_config.num_beams},(le,N)=>[Q.data[N],Math.log(ne[N])])}}},"./src/generation/stopping_criteria.js":(ae,$,s)=>{s.r($),s.d($,{EosTokenCriteria:()=>W,InterruptableStoppingCriteria:()=>w,MaxLengthCriteria:()=>J,StoppingCriteria:()=>F,StoppingCriteriaList:()=>U});var _=s("./src/utils/generic.js");class F extends _.Callable{_call(y,b){throw Error("StoppingCriteria needs to be subclassed")}}class U extends _.Callable{constructor(){super(),this.criteria=[]}push(y){this.criteria.push(y)}extend(y){y instanceof U?y=y.criteria:y instanceof F&&(y=[y]),this.criteria.push(...y)}_call(y,b){const v=new Array(y.length).fill(!1);for(const D of this.criteria){const Q=D(y,b);for(let ne=0;ne<v.length;++ne)v[ne]||(v[ne]=Q[ne])}return v}[Symbol.iterator](){return this.criteria.values()}}class J extends F{constructor(y,b=null){super(),this.max_length=y,this.max_position_embeddings=b}_call(y){return y.map(b=>b.length>=this.max_length)}}class W extends F{constructor(y){super(),Array.isArray(y)||(y=[y]),this.eos_token_id=y}_call(y,b){return y.map(v=>{const D=v.at(-1);return this.eos_token_id.some(Q=>D==Q)})}}class w extends F{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(y,b){return new Array(y.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(ae,$,s)=>{s.r($),s.d($,{BaseStreamer:()=>J,TextStreamer:()=>w,WhisperTextStreamer:()=>M});var _=s("./src/utils/core.js"),F=s("./src/tokenizers.js"),U=s("./src/env.js");class J{put(b){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const W=U.apis.IS_PROCESS_AVAILABLE?y=>process.stdout.write(y):y=>console.log(y);class w extends J{constructor(b,{skip_prompt:v=!1,callback_function:D=null,token_callback_function:Q=null,decode_kwargs:ne={},...le}={}){super(),this.tokenizer=b,this.skip_prompt=v,this.callback_function=D??W,this.token_callback_function=Q,this.decode_kwargs={...ne,...le},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(b){var ne;if(b.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const v=b[0];(ne=this.token_callback_function)==null||ne.call(this,v),this.token_cache=(0,_.mergeArrays)(this.token_cache,v);const D=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let Q;D.endsWith(`
`)?(Q=D.slice(this.print_len),this.token_cache=[],this.print_len=0):D.length>0&&(0,F.is_chinese_char)(D.charCodeAt(D.length-1))?(Q=D.slice(this.print_len),this.print_len+=Q.length):(Q=D.slice(this.print_len,D.lastIndexOf(" ")+1),this.print_len+=Q.length),this.on_finalized_text(Q,!1)}end(){let b;this.token_cache.length>0?(b=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):b="",this.next_tokens_are_prompt=!0,this.on_finalized_text(b,!0)}on_finalized_text(b,v){var D,Q;b.length>0&&((D=this.callback_function)==null||D.call(this,b)),v&&this.callback_function===W&&U.apis.IS_PROCESS_AVAILABLE&&((Q=this.callback_function)==null||Q.call(this,`
`))}}class M extends w{constructor(b,{skip_prompt:v=!1,callback_function:D=null,token_callback_function:Q=null,on_chunk_start:ne=null,on_chunk_end:le=null,on_finalize:N=null,time_precision:H=.02,skip_special_tokens:Y=!0,decode_kwargs:L={}}={}){super(b,{skip_prompt:v,callback_function:D,token_callback_function:Q,decode_kwargs:{skip_special_tokens:Y,...L}}),this.timestamp_begin=b.timestamp_begin,this.on_chunk_start=ne,this.on_chunk_end=le,this.on_finalize=N,this.time_precision=H,this.waiting_for_timestamp=!1}put(b){var D,Q;if(b.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const v=b[0];if(v.length===1){const ne=Number(v[0])-this.timestamp_begin;if(ne>=0){const le=ne*this.time_precision;this.waiting_for_timestamp?(D=this.on_chunk_end)==null||D.call(this,le):(Q=this.on_chunk_start)==null||Q.call(this,le),this.waiting_for_timestamp=!this.waiting_for_timestamp,b=[[]]}}return super.put(b)}end(){var b;super.end(),(b=this.on_finalize)==null||b.call(this)}}},"./src/models.js":(ae,$,s)=>{s.r($),s.d($,{ASTForAudioClassification:()=>Di,ASTModel:()=>Sa,ASTPreTrainedModel:()=>qt,AlbertForMaskedLM:()=>ir,AlbertForQuestionAnswering:()=>Fn,AlbertForSequenceClassification:()=>yn,AlbertModel:()=>On,AlbertPreTrainedModel:()=>Bs,AutoModel:()=>xi,AutoModelForAudioClassification:()=>rc,AutoModelForAudioFrameClassification:()=>nc,AutoModelForCTC:()=>tc,AutoModelForCausalLM:()=>Hd,AutoModelForDepthEstimation:()=>ac,AutoModelForDocumentQuestionAnswering:()=>ap,AutoModelForImageClassification:()=>Qd,AutoModelForImageFeatureExtraction:()=>dc,AutoModelForImageMatting:()=>ic,AutoModelForImageSegmentation:()=>Yd,AutoModelForImageToImage:()=>oc,AutoModelForMaskGeneration:()=>op,AutoModelForMaskedLM:()=>np,AutoModelForNormalEstimation:()=>lc,AutoModelForObjectDetection:()=>Zd,AutoModelForPoseEstimation:()=>uc,AutoModelForQuestionAnswering:()=>qd,AutoModelForSemanticSegmentation:()=>ip,AutoModelForSeq2SeqLM:()=>ca,AutoModelForSequenceClassification:()=>Ud,AutoModelForSpeechSeq2Seq:()=>Vd,AutoModelForTextToSpectrogram:()=>Gd,AutoModelForTextToWaveform:()=>Kd,AutoModelForTokenClassification:()=>Wd,AutoModelForUniversalSegmentation:()=>Jd,AutoModelForVision2Seq:()=>Xd,AutoModelForXVector:()=>sc,AutoModelForZeroShotObjectDetection:()=>ec,BartForConditionalGeneration:()=>Ve,BartForSequenceClassification:()=>ut,BartModel:()=>Pe,BartPretrainedModel:()=>be,BaseModelOutput:()=>je,BeitForImageClassification:()=>ru,BeitModel:()=>tu,BeitPreTrainedModel:()=>_o,BertForMaskedLM:()=>Ze,BertForQuestionAnswering:()=>Be,BertForSequenceClassification:()=>Ye,BertForTokenClassification:()=>Xe,BertModel:()=>ke,BertPreTrainedModel:()=>ye,BlenderbotForConditionalGeneration:()=>yr,BlenderbotModel:()=>Se,BlenderbotPreTrainedModel:()=>nr,BlenderbotSmallForConditionalGeneration:()=>Jr,BlenderbotSmallModel:()=>Qr,BlenderbotSmallPreTrainedModel:()=>Fr,BloomForCausalLM:()=>Al,BloomModel:()=>$l,BloomPreTrainedModel:()=>eo,CLIPModel:()=>Ba,CLIPPreTrainedModel:()=>Ys,CLIPSegForImageSegmentation:()=>oi,CLIPSegModel:()=>qa,CLIPSegPreTrainedModel:()=>as,CLIPTextModel:()=>kc,CLIPTextModelWithProjection:()=>Ra,CLIPVisionModel:()=>Ms,CLIPVisionModelWithProjection:()=>Na,CamembertForMaskedLM:()=>is,CamembertForQuestionAnswering:()=>mn,CamembertForSequenceClassification:()=>Ws,CamembertForTokenClassification:()=>Is,CamembertModel:()=>Xr,CamembertPreTrainedModel:()=>Cr,CausalLMOutput:()=>sn,CausalLMOutputWithPast:()=>up,ChineseCLIPModel:()=>Ga,ChineseCLIPPreTrainedModel:()=>Va,ClapAudioModelWithProjection:()=>id,ClapModel:()=>Hc,ClapPreTrainedModel:()=>Ti,ClapTextModelWithProjection:()=>nd,CodeGenForCausalLM:()=>al,CodeGenModel:()=>ol,CodeGenPreTrainedModel:()=>Vi,CohereForCausalLM:()=>fl,CohereModel:()=>Xi,CoherePreTrainedModel:()=>qi,ConvBertForMaskedLM:()=>He,ConvBertForQuestionAnswering:()=>Ot,ConvBertForSequenceClassification:()=>rt,ConvBertForTokenClassification:()=>ct,ConvBertModel:()=>Oe,ConvBertPreTrainedModel:()=>ue,ConvNextForImageClassification:()=>mi,ConvNextModel:()=>bu,ConvNextPreTrainedModel:()=>yu,ConvNextV2ForImageClassification:()=>Do,ConvNextV2Model:()=>fi,ConvNextV2PreTrainedModel:()=>Fo,DPTForDepthEstimation:()=>pu,DPTModel:()=>ko,DPTPreTrainedModel:()=>Co,DebertaForMaskedLM:()=>Ps,DebertaForQuestionAnswering:()=>Fs,DebertaForSequenceClassification:()=>Os,DebertaForTokenClassification:()=>Cs,DebertaModel:()=>Vs,DebertaPreTrainedModel:()=>Lt,DebertaV2ForMaskedLM:()=>ks,DebertaV2ForQuestionAnswering:()=>ot,DebertaV2ForSequenceClassification:()=>Gs,DebertaV2ForTokenClassification:()=>os,DebertaV2Model:()=>us,DebertaV2PreTrainedModel:()=>Zr,DecisionTransformerModel:()=>_d,DecisionTransformerPreTrainedModel:()=>fd,DeiTForImageClassification:()=>en,DeiTModel:()=>bo,DeiTPreTrainedModel:()=>Ns,DepthAnythingForDepthEstimation:()=>So,DepthAnythingPreTrainedModel:()=>pi,DepthProForDepthEstimation:()=>jn,DepthProPreTrainedModel:()=>$o,DetrForObjectDetection:()=>nu,DetrForSegmentation:()=>go,DetrModel:()=>su,DetrObjectDetectionOutput:()=>iu,DetrPreTrainedModel:()=>di,DetrSegmentationOutput:()=>ou,Dinov2ForImageClassification:()=>vu,Dinov2Model:()=>Mu,Dinov2PreTrainedModel:()=>_i,DistilBertForMaskedLM:()=>_s,DistilBertForQuestionAnswering:()=>rr,DistilBertForSequenceClassification:()=>dr,DistilBertForTokenClassification:()=>fs,DistilBertModel:()=>It,DistilBertPreTrainedModel:()=>dt,DonutSwinModel:()=>wu,DonutSwinPreTrainedModel:()=>gu,EfficientNetForImageClassification:()=>dd,EfficientNetModel:()=>ud,EfficientNetPreTrainedModel:()=>Go,ElectraForMaskedLM:()=>At,ElectraForQuestionAnswering:()=>Or,ElectraForSequenceClassification:()=>sr,ElectraForTokenClassification:()=>wr,ElectraModel:()=>Ft,ElectraPreTrainedModel:()=>xt,EsmForMaskedLM:()=>Ds,EsmForSequenceClassification:()=>gs,EsmForTokenClassification:()=>kn,EsmModel:()=>Ks,EsmPreTrainedModel:()=>ds,FalconForCausalLM:()=>sd,FalconModel:()=>rd,FalconPreTrainedModel:()=>Uo,FastViTForImageClassification:()=>Hl,FastViTModel:()=>Kl,FastViTPreTrainedModel:()=>uo,Florence2ForConditionalGeneration:()=>Fa,Florence2PreTrainedModel:()=>Oa,GLPNForDepthEstimation:()=>Lc,GLPNModel:()=>_u,GLPNPreTrainedModel:()=>Oo,GPT2LMHeadModel:()=>Xa,GPT2Model:()=>cs,GPT2PreTrainedModel:()=>ai,GPTBigCodeForCausalLM:()=>il,GPTBigCodeModel:()=>nl,GPTBigCodePreTrainedModel:()=>Wi,GPTJForCausalLM:()=>sl,GPTJModel:()=>rl,GPTJPreTrainedModel:()=>ls,GPTNeoForCausalLM:()=>Za,GPTNeoModel:()=>Ja,GPTNeoPreTrainedModel:()=>ji,GPTNeoXForCausalLM:()=>tl,GPTNeoXModel:()=>el,GPTNeoXPreTrainedModel:()=>Ui,Gemma2ForCausalLM:()=>bl,Gemma2Model:()=>yl,Gemma2PreTrainedModel:()=>wl,GemmaForCausalLM:()=>gl,GemmaModel:()=>_l,GemmaPreTrainedModel:()=>Qi,GraniteForCausalLM:()=>ml,GraniteModel:()=>zn,GranitePreTrainedModel:()=>Hi,GroupViTModel:()=>lo,GroupViTPreTrainedModel:()=>ao,HieraForImageClassification:()=>Mo,HieraModel:()=>du,HieraPreTrainedModel:()=>Wr,HubertForCTC:()=>Wu,HubertForSequenceClassification:()=>Vu,HubertModel:()=>No,HubertPreTrainedModel:()=>jc,IJepaForImageClassification:()=>Bl,IJepaModel:()=>zl,IJepaPreTrainedModel:()=>so,Idefics3ForConditionalGeneration:()=>Bi,Idefics3PreTrainedModel:()=>za,ImageMattingOutput:()=>pc,JAISLMHeadModel:()=>Ya,JAISModel:()=>Qa,JAISPreTrainedModel:()=>Ni,JinaCLIPModel:()=>Ka,JinaCLIPPreTrainedModel:()=>ii,JinaCLIPTextModel:()=>Ha,JinaCLIPVisionModel:()=>Sc,LlamaForCausalLM:()=>Ki,LlamaModel:()=>ll,LlamaPreTrainedModel:()=>Gi,LlavaForConditionalGeneration:()=>ni,LlavaOnevisionForConditionalGeneration:()=>Ia,LlavaPreTrainedModel:()=>ss,LongT5ForConditionalGeneration:()=>Ee,LongT5Model:()=>Mn,LongT5PreTrainedModel:()=>Xs,M2M100ForConditionalGeneration:()=>$u,M2M100Model:()=>Su,M2M100PreTrainedModel:()=>yi,MBartForCausalLM:()=>hr,MBartForConditionalGeneration:()=>it,MBartForSequenceClassification:()=>Ct,MBartModel:()=>mt,MBartPreTrainedModel:()=>_t,MPNetForMaskedLM:()=>Hs,MPNetForQuestionAnswering:()=>gn,MPNetForSequenceClassification:()=>_n,MPNetForTokenClassification:()=>qs,MPNetModel:()=>fn,MPNetPreTrainedModel:()=>es,MT5ForConditionalGeneration:()=>ie,MT5Model:()=>q,MT5PreTrainedModel:()=>E,MarianMTModel:()=>ku,MarianModel:()=>Cu,MarianPreTrainedModel:()=>wi,MaskFormerForInstanceSegmentation:()=>fu,MaskFormerModel:()=>Io,MaskFormerPreTrainedModel:()=>Ao,MaskedLMOutput:()=>Vr,MgpstrForSceneTextRecognition:()=>bd,MgpstrModelOutput:()=>wd,MgpstrPreTrainedModel:()=>yd,MistralForCausalLM:()=>ed,MistralModel:()=>Zu,MistralPreTrainedModel:()=>Ju,MobileBertForMaskedLM:()=>ri,MobileBertForQuestionAnswering:()=>ws,MobileBertForSequenceClassification:()=>zs,MobileBertModel:()=>Sn,MobileBertPreTrainedModel:()=>Ls,MobileLLMForCausalLM:()=>dl,MobileLLMModel:()=>ul,MobileLLMPreTrainedModel:()=>li,MobileNetV1ForImageClassification:()=>Yr,MobileNetV1Model:()=>Qc,MobileNetV1PreTrainedModel:()=>qo,MobileNetV2ForImageClassification:()=>Qo,MobileNetV2Model:()=>cd,MobileNetV2PreTrainedModel:()=>Xo,MobileNetV3ForImageClassification:()=>pd,MobileNetV3Model:()=>Vn,MobileNetV3PreTrainedModel:()=>Yo,MobileNetV4ForImageClassification:()=>md,MobileNetV4Model:()=>hd,MobileNetV4PreTrainedModel:()=>Jo,MobileViTForImageClassification:()=>Ql,MobileViTModel:()=>po,MobileViTPreTrainedModel:()=>co,MobileViTV2ForImageClassification:()=>Ic,MobileViTV2Model:()=>Yl,MobileViTV2PreTrainedModel:()=>ho,ModelOutput:()=>qe,Moondream1ForConditionalGeneration:()=>Rs,MptForCausalLM:()=>Il,MptModel:()=>Bn,MptPreTrainedModel:()=>to,MultiModalityCausalLM:()=>gd,MultiModalityPreTrainedModel:()=>Zo,MusicgenForCausalLM:()=>Xc,MusicgenForConditionalGeneration:()=>Ho,MusicgenModel:()=>qc,MusicgenPreTrainedModel:()=>Ko,NomicBertModel:()=>pt,NomicBertPreTrainedModel:()=>st,OPTForCausalLM:()=>Fl,OPTModel:()=>Ol,OPTPreTrainedModel:()=>Rn,Olmo2ForCausalLM:()=>hl,Olmo2Model:()=>pl,Olmo2PreTrainedModel:()=>Ln,OlmoForCausalLM:()=>cl,OlmoModel:()=>$c,OlmoPreTrainedModel:()=>ui,OpenELMForCausalLM:()=>Ml,OpenELMModel:()=>Ac,OpenELMPreTrainedModel:()=>Yi,OwlViTForObjectDetection:()=>ps,OwlViTModel:()=>Jl,OwlViTPreTrainedModel:()=>mo,Owlv2ForObjectDetection:()=>eu,Owlv2Model:()=>Zl,Owlv2PreTrainedModel:()=>fo,PaliGemmaForConditionalGeneration:()=>La,PaliGemmaPreTrainedModel:()=>Da,PatchTSMixerForPrediction:()=>Td,PatchTSMixerModel:()=>ra,PatchTSMixerPreTrainedModel:()=>vd,PatchTSTForPrediction:()=>Md,PatchTSTModel:()=>ta,PatchTSTPreTrainedModel:()=>ea,Phi3ForCausalLM:()=>Sl,Phi3Model:()=>kl,Phi3PreTrainedModel:()=>Zi,PhiForCausalLM:()=>Cl,PhiModel:()=>Pl,PhiPreTrainedModel:()=>Ji,PreTrainedModel:()=>oe,PretrainedMixin:()=>gr,PvtForImageClassification:()=>Ul,PvtModel:()=>jl,PvtPreTrainedModel:()=>no,PyAnnoteForAudioFrameClassification:()=>Du,PyAnnoteModel:()=>Fu,PyAnnotePreTrainedModel:()=>Lo,QuestionAnsweringModelOutput:()=>Gr,Qwen2ForCausalLM:()=>Tl,Qwen2Model:()=>vl,Qwen2PreTrainedModel:()=>ar,Qwen2VLForConditionalGeneration:()=>El,Qwen2VLPreTrainedModel:()=>xl,RTDetrForObjectDetection:()=>lu,RTDetrModel:()=>au,RTDetrObjectDetectionOutput:()=>uu,RTDetrPreTrainedModel:()=>wo,ResNetForImageClassification:()=>Nn,ResNetModel:()=>Fc,ResNetPreTrainedModel:()=>vo,RoFormerForMaskedLM:()=>wt,RoFormerForQuestionAnswering:()=>K,RoFormerForSequenceClassification:()=>O,RoFormerForTokenClassification:()=>se,RoFormerModel:()=>ht,RoFormerPreTrainedModel:()=>yt,RobertaForMaskedLM:()=>ys,RobertaForQuestionAnswering:()=>Tt,RobertaForSequenceClassification:()=>Zt,RobertaForTokenClassification:()=>_r,RobertaModel:()=>Rr,RobertaPreTrainedModel:()=>Dt,SamImageSegmentationOutput:()=>Pu,SamModel:()=>Eu,SamPreTrainedModel:()=>xu,SapiensForDepthEstimation:()=>Dc,SapiensForNormalEstimation:()=>mu,SapiensForSemanticSegmentation:()=>hu,SapiensPreTrainedModel:()=>hi,SegformerForImageClassification:()=>$s,SegformerForSemanticSegmentation:()=>rn,SegformerModel:()=>Ss,SegformerPreTrainedModel:()=>Vo,Seq2SeqLMOutput:()=>lp,SequenceClassifierOutput:()=>Qt,SiglipModel:()=>ja,SiglipPreTrainedModel:()=>Ri,SiglipTextModel:()=>Ua,SiglipVisionModel:()=>Wa,SpeechT5ForSpeechToText:()=>qu,SpeechT5ForTextToSpeech:()=>Gc,SpeechT5HifiGan:()=>Xu,SpeechT5Model:()=>Vc,SpeechT5PreTrainedModel:()=>vi,SqueezeBertForMaskedLM:()=>$n,SqueezeBertForQuestionAnswering:()=>In,SqueezeBertForSequenceClassification:()=>An,SqueezeBertModel:()=>wn,SqueezeBertPreTrainedModel:()=>zt,StableLmForCausalLM:()=>ld,StableLmModel:()=>ad,StableLmPreTrainedModel:()=>js,Starcoder2ForCausalLM:()=>Kc,Starcoder2Model:()=>td,Starcoder2PreTrainedModel:()=>jo,Swin2SRForImageSuperResolution:()=>Po,Swin2SRModel:()=>Eo,Swin2SRPreTrainedModel:()=>xo,SwinForImageClassification:()=>cu,SwinModel:()=>To,SwinPreTrainedModel:()=>ci,T5ForConditionalGeneration:()=>Dn,T5Model:()=>bn,T5PreTrainedModel:()=>ts,TableTransformerForObjectDetection:()=>Js,TableTransformerModel:()=>Oc,TableTransformerObjectDetectionOutput:()=>Zs,TableTransformerPreTrainedModel:()=>yo,TokenClassifierOutput:()=>Ur,TrOCRForCausalLM:()=>Yu,TrOCRPreTrainedModel:()=>Qu,UniSpeechForCTC:()=>Un,UniSpeechForSequenceClassification:()=>Bo,UniSpeechModel:()=>bi,UniSpeechPreTrainedModel:()=>zo,UniSpeechSatForAudioFrameClassification:()=>Ro,UniSpeechSatForCTC:()=>Ru,UniSpeechSatForSequenceClassification:()=>Nu,UniSpeechSatModel:()=>Bu,UniSpeechSatPreTrainedModel:()=>Wn,ViTForImageClassification:()=>Ll,ViTMAEModel:()=>Vl,ViTMAEPreTrainedModel:()=>Wl,ViTMSNForImageClassification:()=>Gl,ViTMSNModel:()=>oo,ViTMSNPreTrainedModel:()=>io,ViTModel:()=>Dl,ViTPreTrainedModel:()=>ro,VisionEncoderDecoderModel:()=>zi,VitMatteForImageMatting:()=>Xl,VitMattePreTrainedModel:()=>ql,VitPoseForPoseEstimation:()=>Nl,VitPosePreTrainedModel:()=>Rl,VitsModel:()=>Wo,VitsModelOutput:()=>hc,VitsPreTrainedModel:()=>od,Wav2Vec2BertForCTC:()=>Uu,Wav2Vec2BertForSequenceClassification:()=>Nc,Wav2Vec2BertModel:()=>ju,Wav2Vec2BertPreTrainedModel:()=>Mi,Wav2Vec2ForAudioFrameClassification:()=>Rc,Wav2Vec2ForCTC:()=>Iu,Wav2Vec2ForSequenceClassification:()=>Ou,Wav2Vec2Model:()=>Au,Wav2Vec2PreTrainedModel:()=>tn,WavLMForAudioFrameClassification:()=>Hu,WavLMForCTC:()=>Gu,WavLMForSequenceClassification:()=>Ku,WavLMForXVector:()=>Wc,WavLMModel:()=>Uc,WavLMPreTrainedModel:()=>vn,WeSpeakerResNetModel:()=>zu,WeSpeakerResNetPreTrainedModel:()=>Lu,WhisperForConditionalGeneration:()=>Aa,WhisperModel:()=>$a,WhisperPreTrainedModel:()=>Li,XLMForQuestionAnswering:()=>Sr,XLMForSequenceClassification:()=>qr,XLMForTokenClassification:()=>bt,XLMModel:()=>bs,XLMPreTrainedModel:()=>or,XLMRobertaForMaskedLM:()=>rs,XLMRobertaForQuestionAnswering:()=>ka,XLMRobertaForSequenceClassification:()=>Qs,XLMRobertaForTokenClassification:()=>si,XLMRobertaModel:()=>gt,XLMRobertaPreTrainedModel:()=>Le,XLMWithLMHeadModel:()=>Dr,XVectorOutput:()=>cc,YolosForObjectDetection:()=>Tu,YolosModel:()=>zc,YolosObjectDetectionOutput:()=>Bc,YolosPreTrainedModel:()=>gi});var _=s("./src/configs.js"),F=s("./src/backends/onnx.js"),U=s("./src/utils/dtypes.js"),J=s("./src/utils/generic.js"),W=s("./src/utils/core.js"),w=s("./src/utils/hub.js"),M=s("./src/utils/constants.js"),y=s("./src/generation/logits_process.js"),b=s("./src/generation/configuration_utils.js"),v=s("./src/utils/tensor.js"),D=s("./src/utils/image.js"),Q=s("./src/utils/maths.js"),ne=s("./src/generation/stopping_criteria.js"),le=s("./src/generation/logits_sampler.js"),N=s("./src/env.js"),H=s("./src/models/whisper/generation_whisper.js"),Y=s("./src/models/whisper/common_whisper.js");const L={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8},A=new Map,g=new Map,S=new Map;async function T(f,P,z){var vr;const Te=((vr=z.config)==null?void 0:vr["transformers.js_config"])??{};let Fe=z.device??Te.device;Fe&&typeof Fe!="string"&&(Fe.hasOwnProperty(P)?Fe=Fe[P]:(console.warn(`device not specified for "${P}". Using the default device.`),Fe=null));const Ae=Fe??(N.apis.IS_NODE_ENV?"cpu":"wasm"),Qe=(0,F.deviceToExecutionProviders)(Ae);let tt=z.dtype??Te.dtype;if(typeof tt!="string"&&(tt&&tt.hasOwnProperty(P)?tt=tt[P]:(tt=U.DEFAULT_DEVICE_DTYPE_MAPPING[Ae]??U.DATA_TYPES.fp32,console.warn(`dtype not specified for "${P}". Using the default dtype (${tt}) for this device (${Ae}).`))),tt===U.DATA_TYPES.auto){let mr=Te.dtype;typeof mr!="string"&&(mr=mr[P]),mr&&mr!==U.DATA_TYPES.auto&&U.DATA_TYPES.hasOwnProperty(mr)?tt=mr:tt=U.DEFAULT_DEVICE_DTYPE_MAPPING[Ae]??U.DATA_TYPES.fp32}const ft=tt;if(U.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(ft)){if(ft===U.DATA_TYPES.fp16&&Ae==="webgpu"&&!await(0,U.isWebGpuFp16Supported)())throw new Error(`The device (${Ae}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${ft}. Should be one of: ${Object.keys(U.DATA_TYPES).join(", ")}`);const vt=Te.kv_cache_dtype?typeof Te.kv_cache_dtype=="string"?Te.kv_cache_dtype:Te.kv_cache_dtype[ft]??"float32":void 0;if(vt&&!["float32","float16"].includes(vt))throw new Error(`Invalid kv_cache_dtype: ${vt}. Should be one of: float32, float16`);const Rt={dtype:ft,kv_cache_dtype:vt},Vt=U.DEFAULT_DTYPE_SUFFIX_MAPPING[ft],Bt=`${z.subfolder??""}/${P}${Vt}.onnx`,Ut={...z.session_options};Ut.executionProviders??(Ut.executionProviders=Qe);const er=Te.free_dimension_overrides;er?Ut.freeDimensionOverrides??(Ut.freeDimensionOverrides=er):Ae.startsWith("webnn")&&!Ut.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const tr=(0,w.getModelFile)(f,Bt,!0,z),Xt=z.use_external_data_format??Te.use_external_data_format;let lr=[];if(Xt&&(Xt===!0||typeof Xt=="object"&&Xt.hasOwnProperty(P)&&Xt[P]===!0)){if(N.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const mr=`${P}${Vt}.onnx_data`,xr=`${z.subfolder??""}/${mr}`;lr.push(new Promise(async($r,Kr)=>{const Nr=await(0,w.getModelFile)(f,xr,!0,z);$r({path:mr,data:Nr})}))}else Ut.externalData!==void 0&&(lr=Ut.externalData.map(async mr=>{if(typeof mr.data=="string"){const xr=await(0,w.getModelFile)(f,mr.data,!0,z);return{...mr,data:xr}}return mr}));if(lr.length>0&&(Ut.externalData=await Promise.all(lr)),Ae==="webgpu"){const mr=(0,_.getKeyValueShapes)(z.config,{prefix:"present"});if(Object.keys(mr).length>0&&!(0,F.isONNXProxy)()){const xr={};for(const $r in mr)xr[$r]="gpu-buffer";Ut.preferredOutputLocation=xr}}return{buffer:await tr,session_options:Ut,session_config:Rt}}async function te(f,P,z){return Object.fromEntries(await Promise.all(Object.keys(P).map(async Te=>{const{buffer:Fe,session_options:Ae,session_config:Qe}=await T(f,P[Te],z),tt=await(0,F.createInferenceSession)(Fe,Ae,Qe);return[Te,tt]})))}async function Z(f,P,z){return Object.fromEntries(await Promise.all(Object.keys(P).map(async Te=>{const Fe=await(0,w.getModelJSON)(f,P[Te],!1,z);return[Te,Fe]})))}function de(f,P){const z=Object.create(null),Te=[];for(const Qe of f.inputNames){const tt=P[Qe];if(!(tt instanceof v.Tensor)){Te.push(Qe);continue}z[Qe]=(0,F.isONNXProxy)()?tt.clone():tt}if(Te.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Te.join(", ")}.`);const Fe=Object.keys(P).length,Ae=f.inputNames.length;if(Fe>Ae){let Qe=Object.keys(P).filter(tt=>!f.inputNames.includes(tt));console.warn(`WARNING: Too many inputs were provided (${Fe} > ${Ae}). The following inputs will be ignored: "${Qe.join(", ")}".`)}return z}async function he(f,P){const z=de(f,P);try{const Te=Object.fromEntries(Object.entries(z).map(([Ae,Qe])=>[Ae,Qe.ort_tensor]));let Fe=await f.run(Te);return Fe=we(Fe),Fe}catch(Te){const Fe=Object.fromEntries(Object.entries(z).map(([Ae,{type:Qe,dims:tt,data:ft}])=>[Ae,{type:Qe,dims:tt,data:ft}]));throw console.error(`An error occurred during model execution: "${Te}".`),console.error("Inputs given to model:",Fe),Te}}function we(f){for(let P in f)(0,F.isONNXTensor)(f[P])?f[P]=new v.Tensor(f[P]):typeof f[P]=="object"&&we(f[P]);return f}function Ce(f){if(f instanceof v.Tensor)return f;if(f.length===0)throw Error("items must be non-empty");if(Array.isArray(f[0])){if(f.some(P=>P.length!==f[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new v.Tensor("int64",BigInt64Array.from(f.flat().map(P=>BigInt(P))),[f.length,f[0].length])}else return new v.Tensor("int64",BigInt64Array.from(f.map(P=>BigInt(P))),[1,f.length])}function xe(f){return new v.Tensor("bool",[f],[1])}async function ze(f,P){let{encoder_outputs:z,input_ids:Te,decoder_input_ids:Fe,...Ae}=P;if(!z){const tt=(0,W.pick)(P,f.sessions.model.inputNames);z=(await fe(f,tt)).last_hidden_state}return Ae.input_ids=Fe,Ae.encoder_hidden_states=z,f.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(Ae.encoder_attention_mask=P.attention_mask),await V(f,Ae,!0)}async function fe(f,P){const z=f.sessions.model,Te=(0,W.pick)(P,z.inputNames);if(z.inputNames.includes("inputs_embeds")&&!Te.inputs_embeds){if(!P.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Te.inputs_embeds=await f.encode_text({input_ids:P.input_ids})}return z.inputNames.includes("token_type_ids")&&!Te.token_type_ids&&(Te.token_type_ids=new v.Tensor("int64",new BigInt64Array(Te.input_ids.data.length),Te.input_ids.dims)),await he(z,Te)}async function V(f,P,z=!1){const Te=f.sessions[z?"decoder_model_merged":"model"],{past_key_values:Fe,...Ae}=P;if(Te.inputNames.includes("use_cache_branch")&&(Ae.use_cache_branch=xe(!!Fe)),Te.inputNames.includes("position_ids")&&Ae.attention_mask&&!Ae.position_ids){const tt=f.config.model_type==="paligemma"?1:0;Ae.position_ids=Ne(Ae,Fe,tt)}f.addPastKeyValues(Ae,Fe);const Qe=(0,W.pick)(Ae,Te.inputNames);return await he(Te,Qe)}function ce({image_token_id:f,inputs_embeds:P,image_features:z,input_ids:Te,attention_mask:Fe}){const Ae=Te.tolist().map(vt=>vt.reduce((Rt,Vt,Bt)=>(Vt==f&&Rt.push(Bt),Rt),[])),Qe=Ae.reduce((vt,Rt)=>vt+Rt.length,0),tt=z.dims[0];if(Qe!==tt)throw new Error(`Image features and image tokens do not match: tokens: ${Qe}, features ${tt}`);let ft=0;for(let vt=0;vt<Ae.length;++vt){const Rt=Ae[vt],Vt=P[vt];for(let Bt=0;Bt<Rt.length;++Bt)Vt[Rt[Bt]].data.set(z[ft++].data)}return{inputs_embeds:P,attention_mask:Fe}}async function _e(f,{input_ids:P=null,attention_mask:z=null,pixel_values:Te=null,position_ids:Fe=null,inputs_embeds:Ae=null,past_key_values:Qe=null,generation_config:tt=null,logits_processor:ft=null,...vt}){if(!Ae){if(Ae=await f.encode_text({input_ids:P,...vt}),Te&&P.dims[1]!==1){const Vt=await f.encode_image({pixel_values:Te,...vt});({inputs_embeds:Ae,attention_mask:z}=f._merge_input_ids_with_image_features({image_features:Vt,inputs_embeds:Ae,input_ids:P,attention_mask:z}))}else if(Qe&&Te&&P.dims[1]===1){const Vt=P.dims[1],Bt=Object.values(Qe)[0].dims.at(-2);z=(0,v.cat)([(0,v.ones)([P.dims[0],Bt]),z.slice(null,[z.dims[1]-Vt,z.dims[1]])],1)}}if(!Fe&&f.config.model_type==="qwen2_vl"){const{image_grid_thw:Vt,video_grid_thw:Bt}=vt;[Fe]=f.get_rope_index(P,Vt,Bt,z)}return await V(f,{inputs_embeds:Ae,past_key_values:Qe,attention_mask:z,position_ids:Fe,generation_config:tt,logits_processor:ft},!0)}function De(f,P=0){const[z,Te]=f.dims,Fe=f.data,Ae=new BigInt64Array(Fe.length);for(let Qe=0;Qe<z;++Qe){const tt=Qe*Te;let ft=BigInt(P);for(let vt=0;vt<Te;++vt){const Rt=tt+vt;Fe[Rt]===0n?Ae[Rt]=BigInt(1):(Ae[Rt]=ft,ft+=Fe[Rt])}}return{data:Ae,dims:f.dims}}function Ne(f,P=null,z=0){const{input_ids:Te,inputs_embeds:Fe,attention_mask:Ae}=f,{data:Qe,dims:tt}=De(Ae,z);let ft=new v.Tensor("int64",Qe,tt);if(P){const vt=-(Te??Fe).dims.at(1);ft=ft.slice(null,[vt,null])}return ft}function Ke(f,P,z,Te){if(z.past_key_values){const Fe=Object.values(z.past_key_values)[0].dims.at(-2),{input_ids:Ae,attention_mask:Qe}=z;if(!(Qe&&Qe.dims[1]>Ae.dims[1])){if(Fe<Ae.dims[1])z.input_ids=Ae.slice(null,[Fe,null]);else if(f.config.image_token_index!=null&&Ae.data.some(tt=>tt==f.config.image_token_index)){const tt=f.config.num_image_tokens;if(!tt)throw new Error("`num_image_tokens` is missing in the model configuration.");const ft=Ae.dims[1]-(Fe-tt);z.input_ids=Ae.slice(null,[-ft,null]),z.attention_mask=(0,v.ones)([1,Fe+ft])}}}return z}function Je(f,P,z,Te){return z.past_key_values&&(P=P.map(Fe=>[Fe.at(-1)])),{...z,decoder_input_ids:Ce(P)}}function lt(f,...P){return f.config.is_encoder_decoder?Je(f,...P):Ke(f,...P)}function Ge(f,P,z,Te){const Fe=!!z.past_key_values;return Te.guidance_scale!==null&&Te.guidance_scale>1&&(Fe?z.input_ids=(0,v.cat)([z.input_ids,z.input_ids],0):(z.input_ids=(0,v.cat)([z.input_ids,(0,v.full_like)(z.input_ids,BigInt(Te.pad_token_id))],0),z.attention_mask=(0,v.cat)([z.attention_mask,(0,v.full_like)(z.attention_mask,0n)],0))),(Fe||!z.pixel_values)&&(z.pixel_values=(0,v.full)([0,0,3,384,384],1)),Fe&&(z.images_seq_mask=new v.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),z.images_emb_mask=new v.Tensor("bool",new Array(0).fill(!1),[1,1,0])),z}class oe extends J.Callable{constructor(z,Te,Fe){super();ve(this,"main_input_name","input_ids");ve(this,"forward_params",["input_ids","attention_mask"]);this.config=z,this.sessions=Te,this.configs=Fe;const Ae=S.get(this.constructor),Qe=A.get(Ae);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Qe){case L.DecoderOnly:this.can_generate=!0,this._forward=V,this._prepare_inputs_for_generation=Ke;break;case L.Seq2Seq:case L.Vision2Seq:case L.Musicgen:this.can_generate=!0,this._forward=ze,this._prepare_inputs_for_generation=Je;break;case L.EncoderDecoder:this._forward=ze;break;case L.ImageTextToText:this.can_generate=!0,this._forward=_e,this._prepare_inputs_for_generation=lt;break;case L.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=Ge;break;default:this._forward=fe;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var Te;const z=[];for(const Fe of Object.values(this.sessions))(Te=Fe==null?void 0:Fe.handler)!=null&&Te.dispose&&z.push(Fe.handler.dispose());return await Promise.all(z)}static async from_pretrained(z,{progress_callback:Te=null,config:Fe=null,cache_dir:Ae=null,local_files_only:Qe=!1,revision:tt="main",model_file_name:ft=null,subfolder:vt="onnx",device:Rt=null,dtype:Vt=null,use_external_data_format:Bt=null,session_options:Ut={}}={}){let er={progress_callback:Te,config:Fe,cache_dir:Ae,local_files_only:Qe,revision:tt,model_file_name:ft,subfolder:vt,device:Rt,dtype:Vt,use_external_data_format:Bt,session_options:Ut};const tr=S.get(this),Xt=A.get(tr);Fe=er.config=await _.AutoConfig.from_pretrained(z,er);let lr;if(Xt===L.DecoderOnly)lr=await Promise.all([te(z,{model:er.model_file_name??"model"},er),Z(z,{generation_config:"generation_config.json"},er)]);else if(Xt===L.Seq2Seq||Xt===L.Vision2Seq)lr=await Promise.all([te(z,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},er),Z(z,{generation_config:"generation_config.json"},er)]);else if(Xt===L.MaskGeneration)lr=await Promise.all([te(z,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},er)]);else if(Xt===L.EncoderDecoder)lr=await Promise.all([te(z,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},er)]);else if(Xt===L.ImageTextToText){const kr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Fe.is_encoder_decoder&&(kr.model="encoder_model"),lr=await Promise.all([te(z,kr,er),Z(z,{generation_config:"generation_config.json"},er)])}else if(Xt===L.Musicgen)lr=await Promise.all([te(z,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},er),Z(z,{generation_config:"generation_config.json"},er)]);else if(Xt===L.MultiModality)lr=await Promise.all([te(z,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},er),Z(z,{generation_config:"generation_config.json"},er)]);else{if(Xt!==L.EncoderOnly){const kr=tr??(Fe==null?void 0:Fe.model_type);kr!=="custom"&&console.warn(`Model type for '${kr}' not found, assuming encoder-only architecture. Please report this at ${M.GITHUB_ISSUE_URL}.`)}lr=await Promise.all([te(z,{model:er.model_file_name??"model"},er)])}return new this(Fe,...lr)}async _call(z){return await this.forward(z)}async forward(z){return await this._forward(this,z)}get generation_config(){var z;return((z=this.configs)==null?void 0:z.generation_config)??null}_get_logits_warper(z){const Te=new y.LogitsProcessorList;return z.temperature!==null&&z.temperature!==1&&Te.push(new y.TemperatureLogitsWarper(z.temperature)),z.top_k!==null&&z.top_k!==0&&Te.push(new y.TopKLogitsWarper(z.top_k)),z.top_p!==null&&z.top_p<1&&Te.push(new y.TopPLogitsWarper(z.top_p)),Te}_get_logits_processor(z,Te,Fe=null){const Ae=new y.LogitsProcessorList;if(z.repetition_penalty!==null&&z.repetition_penalty!==1&&Ae.push(new y.RepetitionPenaltyLogitsProcessor(z.repetition_penalty)),z.no_repeat_ngram_size!==null&&z.no_repeat_ngram_size>0&&Ae.push(new y.NoRepeatNGramLogitsProcessor(z.no_repeat_ngram_size)),z.bad_words_ids!==null&&Ae.push(new y.NoBadWordsLogitsProcessor(z.bad_words_ids,z.eos_token_id)),z.min_length!==null&&z.eos_token_id!==null&&z.min_length>0&&Ae.push(new y.MinLengthLogitsProcessor(z.min_length,z.eos_token_id)),z.min_new_tokens!==null&&z.eos_token_id!==null&&z.min_new_tokens>0&&Ae.push(new y.MinNewTokensLengthLogitsProcessor(Te,z.min_new_tokens,z.eos_token_id)),z.forced_bos_token_id!==null&&Ae.push(new y.ForcedBOSTokenLogitsProcessor(z.forced_bos_token_id)),z.forced_eos_token_id!==null&&Ae.push(new y.ForcedEOSTokenLogitsProcessor(z.max_length,z.forced_eos_token_id)),z.begin_suppress_tokens!==null){const Qe=Te>1||z.forced_bos_token_id===null?Te:Te+1;Ae.push(new y.SuppressTokensAtBeginLogitsProcessor(z.begin_suppress_tokens,Qe))}return z.guidance_scale!==null&&z.guidance_scale>1&&Ae.push(new y.ClassifierFreeGuidanceLogitsProcessor(z.guidance_scale)),Fe!==null&&Ae.extend(Fe),Ae}_prepare_generation_config(z,Te,Fe=b.GenerationConfig){const Ae={...this.config};for(const tt of["decoder","generator","text_config"])tt in Ae&&Object.assign(Ae,Ae[tt]);const Qe=new Fe(Ae);return Object.assign(Qe,this.generation_config??{}),z&&Object.assign(Qe,z),Te&&Object.assign(Qe,(0,W.pick)(Te,Object.getOwnPropertyNames(Qe))),Qe}_get_stopping_criteria(z,Te=null){const Fe=new ne.StoppingCriteriaList;return z.max_length!==null&&Fe.push(new ne.MaxLengthCriteria(z.max_length,this.config.max_position_embeddings??null)),z.eos_token_id!==null&&Fe.push(new ne.EosTokenCriteria(z.eos_token_id)),Te&&Fe.extend(Te),Fe}_validate_model_class(){if(!this.can_generate){const z=[na,ia,Cd,sa],Te=S.get(this.constructor),Fe=new Set,Ae=this.config.model_type;for(const tt of z){const ft=tt.get(Ae);ft&&Fe.add(ft[0])}let Qe=`The current model class (${Te}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Fe.size>0&&(Qe+=` Please use the following class instead: ${[...Fe].join(", ")}`),Error(Qe)}}prepare_inputs_for_generation(...z){return this._prepare_inputs_for_generation(this,...z)}_update_model_kwargs_for_generation({generated_input_ids:z,outputs:Te,model_inputs:Fe,is_encoder_decoder:Ae}){return Fe.past_key_values=this.getPastKeyValues(Te,Fe.past_key_values),Fe.input_ids=new v.Tensor("int64",z.flat(),[z.length,1]),Ae||(Fe.attention_mask=(0,v.cat)([Fe.attention_mask,(0,v.ones)([Fe.attention_mask.dims[0],1])],1)),Fe.position_ids=null,Fe}_prepare_model_inputs({inputs:z,bos_token_id:Te,model_kwargs:Fe}){const Ae=(0,W.pick)(Fe,this.forward_params),Qe=this.main_input_name;if(Qe in Ae){if(z)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Ae[Qe]=z;return{inputs_tensor:Ae[Qe],model_inputs:Ae,model_input_name:Qe}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:z,model_inputs:Te,model_input_name:Fe,generation_config:Ae}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!Te.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:tt,pixel_values:ft,attention_mask:vt,...Rt}=Te,Vt=await this._prepare_inputs_embeds(Te);Te={...Rt,...(0,W.pick)(Vt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Qe}=await fe(this,Te);if(Ae.guidance_scale!==null&&Ae.guidance_scale>1)Qe=(0,v.cat)([Qe,(0,v.full_like)(Qe,0)],0),"attention_mask"in Te&&(Te.attention_mask=(0,v.cat)([Te.attention_mask,(0,v.zeros_like)(Te.attention_mask)],0));else if(Te.decoder_input_ids){const tt=Ce(Te.decoder_input_ids).dims[0];if(tt!==Qe.dims[0]){if(Qe.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Qe.dims[0]}) than the decoder inputs (${tt}).`);Qe=(0,v.cat)(Array.from({length:tt},()=>Qe),0)}}return Te.encoder_outputs=Qe,Te}_prepare_decoder_input_ids_for_generation({batch_size:z,model_input_name:Te,model_kwargs:Fe,decoder_start_token_id:Ae,bos_token_id:Qe,generation_config:tt}){let{decoder_input_ids:ft,...vt}=Fe;if(!(ft instanceof v.Tensor)){if(ft)Array.isArray(ft[0])||(ft=Array.from({length:z},()=>ft));else if(Ae??(Ae=Qe),this.config.model_type==="musicgen")ft=Array.from({length:z*this.config.decoder.num_codebooks},()=>[Ae]);else if(Array.isArray(Ae)){if(Ae.length!==z)throw new Error(`\`decoder_start_token_id\` expcted to have length ${z} but got ${Ae.length}`);ft=Ae}else ft=Array.from({length:z},()=>[Ae]);ft=Ce(ft)}return Fe.decoder_attention_mask=(0,v.ones_like)(ft),{input_ids:ft,model_inputs:vt}}async generate({inputs:z=null,generation_config:Te=null,logits_processor:Fe=null,stopping_criteria:Ae=null,streamer:Qe=null,...tt}){this._validate_model_class(),Te=this._prepare_generation_config(Te,tt);let{inputs_tensor:ft,model_inputs:vt,model_input_name:Rt}=this._prepare_model_inputs({inputs:z,model_kwargs:tt});const Vt=this.config.is_encoder_decoder;Vt&&("encoder_outputs"in vt||(vt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ft,model_inputs:vt,model_input_name:Rt,generation_config:Te})));let Bt;Vt?{input_ids:Bt,model_inputs:vt}=this._prepare_decoder_input_ids_for_generation({batch_size:vt[Rt].dims.at(0),model_input_name:Rt,model_kwargs:vt,decoder_start_token_id:Te.decoder_start_token_id,bos_token_id:Te.bos_token_id,generation_config:Te}):Bt=vt[Rt];let Ut=Bt.dims.at(-1);Te.max_new_tokens!==null&&(Te.max_length=Ut+Te.max_new_tokens);const er=this._get_logits_processor(Te,Ut,Fe),tr=this._get_stopping_criteria(Te,Ae),Xt=vt[Rt].dims.at(0),lr=le.LogitsSampler.getSampler(Te),kr=new Array(Xt).fill(0),vr=Bt.tolist();Qe&&Qe.put(vr);let mr,xr={};for(;;){if(vt=this.prepare_inputs_for_generation(vr,vt,Te),mr=await this.forward(vt),Te.output_attentions&&Te.return_dict_in_generate){const ns=this.getAttentions(mr);for(const Ts in ns)Ts in xr||(xr[Ts]=[]),xr[Ts].push(ns[Ts])}const Nr=mr.logits.slice(null,-1,null),vs=er(vr,Nr),nn=[];for(let ns=0;ns<vs.dims.at(0);++ns){const Ts=vs[ns],ha=await lr(Ts);for(const[ma,Ei]of ha){const Pi=BigInt(ma);kr[ns]+=Ei,vr[ns].push(Pi),nn.push([Pi]);break}}if(Qe&&Qe.put(nn),tr(vr).every(ns=>ns))break;vt=this._update_model_kwargs_for_generation({generated_input_ids:nn,outputs:mr,model_inputs:vt,is_encoder_decoder:Vt})}Qe&&Qe.end();const $r=this.getPastKeyValues(mr,vt.past_key_values,!0),Kr=new v.Tensor("int64",vr.flat(),[vr.length,vr[0].length]);if(Te.return_dict_in_generate)return{sequences:Kr,past_key_values:$r,...xr};for(const Nr of Object.values(mr))Nr.location==="gpu-buffer"&&Nr.dispose();return Kr}getPastKeyValues(z,Te,Fe=!1){const Ae=Object.create(null);for(const Qe in z)if(Qe.startsWith("present")){const tt=Qe.replace("present","past_key_values"),ft=Qe.includes("encoder");if(ft&&Te?Ae[tt]=Te[tt]:Ae[tt]=z[Qe],Te&&(!ft||Fe)){const vt=Te[tt];vt.location==="gpu-buffer"&&vt.dispose()}}return Ae}getAttentions(z){const Te={};for(const Fe of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Ae in z)Ae.startsWith(Fe)&&(Fe in Te||(Te[Fe]=[]),Te[Fe].push(z[Ae]));return Te}addPastKeyValues(z,Te){var Fe,Ae,Qe;if(Te)Object.assign(z,Te);else{const tt=this.sessions.decoder_model_merged??this.sessions.model,ft=((Fe=tt==null?void 0:tt.config)==null?void 0:Fe.kv_cache_dtype)??"float32",vt=ft==="float16"?new Uint16Array:[],Rt=((Qe=(Ae=z[this.main_input_name]??z.attention_mask)==null?void 0:Ae.dims)==null?void 0:Qe[0])??1,Vt=(0,_.getKeyValueShapes)(this.config,{batch_size:Rt});for(const Bt in Vt)z[Bt]=new v.Tensor(ft,vt,Vt[Bt])}}async encode_image({pixel_values:z}){const Te=(await he(this.sessions.vision_encoder,{pixel_values:z})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${Te.dims[1]}).`),this.config.num_image_tokens=Te.dims[1]),Te}async encode_text({input_ids:z}){return(await he(this.sessions.embed_tokens,{input_ids:z})).inputs_embeds}}class qe{}class je extends qe{constructor({last_hidden_state:P,hidden_states:z=null,attentions:Te=null}){super(),this.last_hidden_state=P,this.hidden_states=z,this.attentions=Te}}class ye extends oe{}class ke extends ye{}class Ze extends ye{async _call(P){return new Vr(await super._call(P))}}class Ye extends ye{async _call(P){return new Qt(await super._call(P))}}class Xe extends ye{async _call(P){return new Ur(await super._call(P))}}class Be extends ye{async _call(P){return new Gr(await super._call(P))}}class st extends oe{}class pt extends st{}class yt extends oe{}class ht extends yt{}class wt extends yt{async _call(P){return new Vr(await super._call(P))}}class O extends yt{async _call(P){return new Qt(await super._call(P))}}class se extends yt{async _call(P){return new Ur(await super._call(P))}}class K extends yt{async _call(P){return new Gr(await super._call(P))}}class ue extends oe{}class Oe extends ue{}class He extends ue{async _call(P){return new Vr(await super._call(P))}}class rt extends ue{async _call(P){return new Qt(await super._call(P))}}class ct extends ue{async _call(P){return new Ur(await super._call(P))}}class Ot extends ue{async _call(P){return new Gr(await super._call(P))}}class xt extends oe{}class Ft extends xt{}class At extends xt{async _call(P){return new Vr(await super._call(P))}}class sr extends xt{async _call(P){return new Qt(await super._call(P))}}class wr extends xt{async _call(P){return new Ur(await super._call(P))}}class Or extends xt{async _call(P){return new Gr(await super._call(P))}}class Cr extends oe{}class Xr extends Cr{}class is extends Cr{async _call(P){return new Vr(await super._call(P))}}class Ws extends Cr{async _call(P){return new Qt(await super._call(P))}}class Is extends Cr{async _call(P){return new Ur(await super._call(P))}}class mn extends Cr{async _call(P){return new Gr(await super._call(P))}}class Lt extends oe{}class Vs extends Lt{}class Ps extends Lt{async _call(P){return new Vr(await super._call(P))}}class Os extends Lt{async _call(P){return new Qt(await super._call(P))}}class Cs extends Lt{async _call(P){return new Ur(await super._call(P))}}class Fs extends Lt{async _call(P){return new Gr(await super._call(P))}}class Zr extends oe{}class us extends Zr{}class ks extends Zr{async _call(P){return new Vr(await super._call(P))}}class Gs extends Zr{async _call(P){return new Qt(await super._call(P))}}class os extends Zr{async _call(P){return new Ur(await super._call(P))}}class ot extends Zr{async _call(P){return new Gr(await super._call(P))}}class dt extends oe{}class It extends dt{}class dr extends dt{async _call(P){return new Qt(await super._call(P))}}class fs extends dt{async _call(P){return new Ur(await super._call(P))}}class rr extends dt{async _call(P){return new Gr(await super._call(P))}}class _s extends dt{async _call(P){return new Vr(await super._call(P))}}class ds extends oe{}class Ks extends ds{}class Ds extends ds{async _call(P){return new Vr(await super._call(P))}}class gs extends ds{async _call(P){return new Qt(await super._call(P))}}class kn extends ds{async _call(P){return new Ur(await super._call(P))}}class Ls extends oe{}class Sn extends Ls{}class ri extends Ls{async _call(P){return new Vr(await super._call(P))}}class zs extends Ls{async _call(P){return new Qt(await super._call(P))}}class ws extends Ls{async _call(P){return new Gr(await super._call(P))}}class es extends oe{}class fn extends es{}class Hs extends es{async _call(P){return new Vr(await super._call(P))}}class _n extends es{async _call(P){return new Qt(await super._call(P))}}class qs extends es{async _call(P){return new Ur(await super._call(P))}}class gn extends es{async _call(P){return new Gr(await super._call(P))}}class zt extends oe{}class wn extends zt{}class $n extends zt{async _call(P){return new Vr(await super._call(P))}}class An extends zt{async _call(P){return new Qt(await super._call(P))}}class In extends zt{async _call(P){return new Gr(await super._call(P))}}class Bs extends oe{}class On extends Bs{}class yn extends Bs{async _call(P){return new Qt(await super._call(P))}}class Fn extends Bs{async _call(P){return new Gr(await super._call(P))}}class ir extends Bs{async _call(P){return new Vr(await super._call(P))}}class ts extends oe{constructor(){super(...arguments);ve(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class bn extends ts{}class Dn extends ts{}class Xs extends oe{}class Mn extends Xs{}class Ee extends Xs{}class E extends oe{}class q extends E{}class ie extends E{}class be extends oe{}class Pe extends be{}class Ve extends be{}class ut extends be{async _call(P){return new Qt(await super._call(P))}}class _t extends oe{}class mt extends _t{}class it extends _t{}class Ct extends _t{async _call(P){return new Qt(await super._call(P))}}class hr extends _t{}class nr extends oe{}class Se extends nr{}class yr extends nr{}class Fr extends oe{}class Qr extends Fr{}class Jr extends Fr{}class Dt extends oe{}class Rr extends Dt{}class ys extends Dt{async _call(P){return new Vr(await super._call(P))}}class Zt extends Dt{async _call(P){return new Qt(await super._call(P))}}class _r extends Dt{async _call(P){return new Ur(await super._call(P))}}class Tt extends Dt{async _call(P){return new Gr(await super._call(P))}}class or extends oe{}class bs extends or{}class Dr extends or{async _call(P){return new Vr(await super._call(P))}}class qr extends or{async _call(P){return new Qt(await super._call(P))}}class bt extends or{async _call(P){return new Ur(await super._call(P))}}class Sr extends or{async _call(P){return new Gr(await super._call(P))}}class Le extends oe{}class gt extends Le{}class rs extends Le{async _call(P){return new Vr(await super._call(P))}}class Qs extends Le{async _call(P){return new Qt(await super._call(P))}}class si extends Le{async _call(P){return new Ur(await super._call(P))}}class ka extends Le{async _call(P){return new Gr(await super._call(P))}}class qt extends oe{}class Sa extends qt{}class Di extends qt{}class Li extends oe{constructor(){super(...arguments);ve(this,"requires_attention_mask",!1);ve(this,"main_input_name","input_features");ve(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class $a extends Li{}class Aa extends Li{_prepare_generation_config(P,z){return super._prepare_generation_config(P,z,H.WhisperGenerationConfig)}_retrieve_init_tokens(P){const z=[P.decoder_start_token_id];let Te=P.language;const Fe=P.task;if(P.is_multilingual){Te||(console.warn("No language specified - defaulting to English (en)."),Te="en");const Qe=`<|${(0,Y.whisper_language_to_code)(Te)}|>`;z.push(P.lang_to_id[Qe]),z.push(P.task_to_id[Fe??"transcribe"])}else if(Te||Fe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!P.return_timestamps&&P.no_timestamps_token_id&&z.at(-1)!==P.no_timestamps_token_id?z.push(P.no_timestamps_token_id):P.return_timestamps&&z.at(-1)===P.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),z.pop()),z.filter(Ae=>Ae!=null)}async generate({inputs:P=null,generation_config:z=null,logits_processor:Te=null,stopping_criteria:Fe=null,...Ae}){z=this._prepare_generation_config(z,Ae);const Qe=Ae.decoder_input_ids??this._retrieve_init_tokens(z);if(z.return_timestamps&&(Te??(Te=new y.LogitsProcessorList),Te.push(new y.WhisperTimeStampLogitsProcessor(z,Qe))),z.begin_suppress_tokens&&(Te??(Te=new y.LogitsProcessorList),Te.push(new y.SuppressTokensAtBeginLogitsProcessor(z.begin_suppress_tokens,Qe.length))),z.return_token_timestamps){if(!z.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");z.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),z.output_attentions=!0,z.return_dict_in_generate=!0}const tt=await super.generate({inputs:P,generation_config:z,logits_processor:Te,decoder_input_ids:Qe,...Ae});return z.return_token_timestamps&&(tt.token_timestamps=this._extract_token_timestamps(tt,z.alignment_heads,z.num_frames)),tt}_extract_token_timestamps(P,z,Te=null,Fe=.02){if(!P.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Te==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let Ae=this.config.median_filter_width;Ae===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),Ae=7);const Qe=P.cross_attentions,tt=Array.from({length:this.config.decoder_layers},(tr,Xt)=>(0,v.cat)(Qe.map(lr=>lr[Xt]),2)),ft=(0,v.stack)(z.map(([tr,Xt])=>{if(tr>=tt.length)throw new Error(`Layer index ${tr} is out of bounds for cross attentions (length ${tt.length}).`);return Te?tt[tr].slice(null,Xt,null,[0,Te]):tt[tr].slice(null,Xt)})).transpose(1,0,2,3),[vt,Rt]=(0,v.std_mean)(ft,-2,0,!0),Vt=ft.clone();for(let tr=0;tr<Vt.dims[0];++tr){const Xt=Vt[tr];for(let lr=0;lr<Xt.dims[0];++lr){const kr=Xt[lr],vr=vt[tr][lr][0].data,mr=Rt[tr][lr][0].data;for(let xr=0;xr<kr.dims[0];++xr){let $r=kr[xr].data;for(let Kr=0;Kr<$r.length;++Kr)$r[Kr]=($r[Kr]-mr[Kr])/vr[Kr];$r.set((0,Q.medianFilter)($r,Ae))}}}const Bt=[(0,v.mean)(Vt,1)],Ut=P.sequences.dims,er=new v.Tensor("float32",new Float32Array(Ut[0]*Ut[1]),Ut);for(let tr=0;tr<Ut[0];++tr){const Xt=Bt[tr].neg().squeeze_(0),[lr,kr]=(0,Q.dynamic_time_warping)(Xt.tolist()),vr=Array.from({length:lr.length-1},($r,Kr)=>lr[Kr+1]-lr[Kr]),mr=(0,W.mergeArrays)([1],vr).map($r=>!!$r),xr=[];for(let $r=0;$r<mr.length;++$r)mr[$r]&&xr.push(kr[$r]*Fe);er[tr].data.set(xr,1)}return er}}class zi extends oe{constructor(){super(...arguments);ve(this,"main_input_name","pixel_values");ve(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class ss extends oe{constructor(){super(...arguments);ve(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ni extends ss{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:z,input_ids:Te,attention_mask:Fe}){const Ae=this.config.image_token_index,tt=Te.tolist().map(Bt=>Bt.findIndex(Ut=>Ut==Ae)),ft=tt.every(Bt=>Bt===-1),vt=tt.every(Bt=>Bt!==-1);if(!ft&&!vt)throw new Error("Every input should contain either 0 or 1 image token.");if(ft)return{inputs_embeds:P,attention_mask:Fe};const Rt=[],Vt=[];for(let Bt=0;Bt<tt.length;++Bt){const Ut=tt[Bt],er=P[Bt],tr=z[Bt],Xt=Fe[Bt];Rt.push((0,v.cat)([er.slice([0,Ut]),tr,er.slice([Ut+1,er.dims[0]])],0)),Vt.push((0,v.cat)([Xt.slice([0,Ut]),(0,v.ones)([tr.dims[0]]),Xt.slice([Ut+1,Xt.dims[0]])],0))}return{inputs_embeds:(0,v.stack)(Rt,0),attention_mask:(0,v.stack)(Vt,0)}}}class Ia extends ni{}class Rs extends ni{}class Oa extends oe{constructor(){super(...arguments);ve(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);ve(this,"main_input_name","inputs_embeds")}}class Fa extends Oa{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:z,input_ids:Te,attention_mask:Fe}){return{inputs_embeds:(0,v.cat)([z,P],1),attention_mask:(0,v.cat)([(0,v.ones)(z.dims.slice(0,2)),Fe],1)}}async _prepare_inputs_embeds({input_ids:P,pixel_values:z,inputs_embeds:Te,attention_mask:Fe}){if(!P&&!z)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let Ae,Qe;return P&&(Ae=await this.encode_text({input_ids:P})),z&&(Qe=await this.encode_image({pixel_values:z})),Ae&&Qe?{inputs_embeds:Te,attention_mask:Fe}=this._merge_input_ids_with_image_features({inputs_embeds:Ae,image_features:Qe,input_ids:P,attention_mask:Fe}):Te=Ae||Qe,{inputs_embeds:Te,attention_mask:Fe}}async forward({input_ids:P,pixel_values:z,attention_mask:Te,decoder_input_ids:Fe,decoder_attention_mask:Ae,encoder_outputs:Qe,past_key_values:tt,inputs_embeds:ft,decoder_inputs_embeds:vt}){if(ft||({inputs_embeds:ft,attention_mask:Te}=await this._prepare_inputs_embeds({input_ids:P,pixel_values:z,inputs_embeds:ft,attention_mask:Te})),!Qe){let{last_hidden_state:Bt}=await fe(this,{inputs_embeds:ft,attention_mask:Te});Qe=Bt}if(!vt){if(!Fe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");vt=await this.encode_text({input_ids:Fe})}return await V(this,{inputs_embeds:vt,attention_mask:Ae,encoder_attention_mask:Te,encoder_hidden_states:Qe,past_key_values:tt},!0)}}class Da extends oe{constructor(){super(...arguments);ve(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class La extends Da{_merge_input_ids_with_image_features(P){const z=P.image_features.dims.at(-1),Te=P.image_features.view(-1,z);return ce({image_token_id:this.config.image_token_index,...P,image_features:Te})}}class za extends oe{constructor(){super(...arguments);ve(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Bi extends za{async encode_image({pixel_values:P,pixel_attention_mask:z}){return(await he(this.sessions.vision_encoder,{pixel_values:P,pixel_attention_mask:z})).image_features}_merge_input_ids_with_image_features(P){const z=P.image_features.dims.at(-1),Te=P.image_features.view(-1,z);return ce({image_token_id:this.config.image_token_id,...P,image_features:Te})}}class Ys extends oe{}class Ba extends Ys{}class kc extends Ys{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="text_model"),super.from_pretrained(P,z)}}class Ra extends Ys{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="text_model"),super.from_pretrained(P,z)}}class Ms extends Ys{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="vision_model"),super.from_pretrained(P,z)}}class Na extends Ys{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="vision_model"),super.from_pretrained(P,z)}}class Ri extends oe{}class ja extends Ri{}class Ua extends Ri{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="text_model"),super.from_pretrained(P,z)}}class Wa extends Ys{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="vision_model"),super.from_pretrained(P,z)}}class Va extends oe{}class Ga extends Va{}class ii extends oe{}class Ka extends ii{async forward(P){const z=!P.input_ids,Te=!P.pixel_values;if(z&&Te)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(z&&(P.input_ids=(0,v.ones)([P.pixel_values.dims[0],1])),Te){const{image_size:vt}=this.config.vision_config;P.pixel_values=(0,v.full)([0,3,vt,vt],0)}const{text_embeddings:Fe,image_embeddings:Ae,l2norm_text_embeddings:Qe,l2norm_image_embeddings:tt}=await super.forward(P),ft={};return z||(ft.text_embeddings=Fe,ft.l2norm_text_embeddings=Qe),Te||(ft.image_embeddings=Ae,ft.l2norm_image_embeddings=tt),ft}}class Ha extends ii{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="text_model"),super.from_pretrained(P,z)}}class Sc extends ii{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="vision_model"),super.from_pretrained(P,z)}}class as extends oe{}class qa extends as{}class oi extends as{}class ai extends oe{}class cs extends ai{}class Xa extends ai{}class Ni extends oe{}class Qa extends Ni{}class Ya extends Ni{}class ji extends oe{}class Ja extends ji{}class Za extends ji{}class Ui extends oe{}class el extends Ui{}class tl extends Ui{}class ls extends oe{}class rl extends ls{}class sl extends ls{}class Wi extends oe{}class nl extends Wi{}class il extends Wi{}class Vi extends oe{}class ol extends Vi{}class al extends Vi{}class Gi extends oe{}class ll extends Gi{}class Ki extends Gi{}class li extends oe{}class ul extends li{}class dl extends li{}class ui extends oe{}class $c extends ui{}class cl extends ui{}class Ln extends oe{}class pl extends Ln{}class hl extends Ln{}class Hi extends oe{}class zn extends Hi{}class ml extends Hi{}class qi extends oe{}class Xi extends qi{}class fl extends qi{}class Qi extends oe{}class _l extends Qi{}class gl extends Qi{}class wl extends oe{}class yl extends wl{}class bl extends wl{}class Yi extends oe{}class Ac extends Yi{}class Ml extends Yi{}class ar extends oe{}class vl extends ar{}class Tl extends ar{}class xl extends oe{constructor(){super(...arguments);ve(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class El extends xl{get_rope_index(P,z,Te,Fe){const{vision_config:Ae,image_token_id:Qe,video_token_id:tt,vision_start_token_id:ft}=this.config,vt=Ae.spatial_merge_size??2,Rt=[];if(z||Te){let Vt=P.tolist();Fe||(Fe=(0,v.ones_like)(P));const Bt=Fe.tolist(),Ut=Array.from({length:3},kr=>Array.from({length:P.dims[0]},vr=>Array.from({length:P.dims[1]},mr=>1))),er=z?z.tolist():[],tr=Te?Te.tolist():[];let Xt=0,lr=0;for(let kr=0;kr<Vt.length;++kr){const vr=Vt[kr].filter((Er,jr)=>Bt[kr][jr]==1),xr=vr.reduce((Er,jr,Us)=>(jr==ft&&Er.push(Us),Er),[]).map(Er=>vr[Er+1]),$r=xr.filter(Er=>Er==Qe).length,Kr=xr.filter(Er=>Er==tt).length;let Nr=[],vs=0,nn=$r,pa=Kr;for(let Er=0;Er<xr.length;++Er){const jr=vr.findIndex((on,xs)=>xs>vs&&on==Qe),Us=vr.findIndex((on,xs)=>xs>vs&&on==tt),Tn=nn>0&&jr!==-1?jr:vr.length+1,xn=pa>0&&Us!==-1?Us:vr.length+1;let fa,_a,ga,wa;Tn<xn?([_a,ga,wa]=er[Xt],++Xt,--nn,fa=Tn):([_a,ga,wa]=tr[lr],++lr,--pa,fa=xn);const[dp,ya,ba]=[Number(_a),Math.floor(Number(ga)/vt),Math.floor(Number(wa)/vt)],Ma=fa-vs,va=Nr.length>0?(0,Q.max)(Nr.at(-1))[0]+1:0;Nr.push(Array.from({length:3*Ma},(on,xs)=>va+xs%Ma));const Ta=Ma+va,Kn=dp*ya*ba,mc=Array.from({length:Kn},(on,xs)=>Ta+Math.floor(xs/(ya*ba))),fc=Array.from({length:Kn},(on,xs)=>Ta+Math.floor(xs/ba)%ya),cp=Array.from({length:Kn},(on,xs)=>Ta+xs%ba);Nr.push([mc,fc,cp].flat()),vs=fa+Kn}if(vs<vr.length){const Er=Nr.length>0?(0,Q.max)(Nr.at(-1))[0]+1:0,jr=vr.length-vs;Nr.push(Array.from({length:3*jr},(Us,Tn)=>Er+Tn%jr))}const ns=Nr.reduce((Er,jr)=>Er+jr.length,0),Ts=new Array(ns);let ha=0;for(let Er=0;Er<3;++Er)for(let jr=0;jr<Nr.length;++jr){const Us=Nr[jr],Tn=Us.length/3;for(let xn=Er*Tn;xn<(Er+1)*Tn;++xn)Ts[ha++]=Us[xn]}let ma=0;const Ei=Bt[kr];for(let Er=0;Er<Ei.length;++Er)if(Ei[Er]==1){for(let jr=0;jr<3;++jr)Ut[jr][kr][Er]=Ts[jr*ns/3+ma];++ma}const Pi=(0,Q.max)(Ts)[0];Rt.push(Pi+1-Vt[kr].length)}return[new v.Tensor("int64",Ut.flat(1/0),[3,P.dims[0],P.dims[1]]),new v.Tensor("int64",Rt,[Rt.length,1])]}else if(Fe){const{data:Vt,dims:Bt}=De(Fe),Ut=BigInt64Array.from({length:3*Vt.length},(tr,Xt)=>Vt[Xt%Vt.length]),er=Array.from({length:Bt[0]},(tr,Xt)=>(0,Q.max)(Vt.subarray(Bt[1]*Xt,Bt[1]*(Xt+1)))[0]+1+Bt[1]);return[new v.Tensor("int64",Ut,[3,...Bt]),new v.Tensor("int64",er,[er.length,1])]}else{const[Vt,Bt]=P.dims,Ut=BigInt64Array.from({length:3*Vt*Bt},(er,tr)=>BigInt(Math.floor(tr%Bt/Vt)));return[new v.Tensor("int64",Ut,[3,...P.dims]),(0,v.zeros)([Vt,1])]}}async encode_image({pixel_values:P,image_grid_thw:z}){return(await he(this.sessions.vision_encoder,{pixel_values:P,grid_thw:z})).image_features}_merge_input_ids_with_image_features(P){return ce({image_token_id:this.config.image_token_id,...P})}prepare_inputs_for_generation(P,z,Te){if(z.attention_mask&&!z.position_ids)if(!z.past_key_values)[z.position_ids,z.rope_deltas]=this.get_rope_index(z.input_ids,z.image_grid_thw,z.video_grid_thw,z.attention_mask);else{z.pixel_values=null;const Fe=BigInt(Object.values(z.past_key_values)[0].dims.at(-2)),Ae=z.rope_deltas.map(Qe=>Fe+Qe);z.position_ids=(0,v.stack)([Ae,Ae,Ae],0)}return z}}class Ji extends oe{}class Pl extends Ji{}class Cl extends Ji{}class Zi extends oe{}class kl extends Zi{}class Sl extends Zi{}class eo extends oe{}class $l extends eo{}class Al extends eo{}class to extends oe{}class Bn extends to{}class Il extends to{}class Rn extends oe{}class Ol extends Rn{}class Fl extends Rn{}class ro extends oe{}class Dl extends ro{}class Ll extends ro{async _call(P){return new Qt(await super._call(P))}}class so extends oe{}class zl extends so{}class Bl extends so{async _call(P){return new Qt(await super._call(P))}}class Rl extends oe{}class Nl extends Rl{}class no extends oe{}class jl extends no{}class Ul extends no{async _call(P){return new Qt(await super._call(P))}}class Wl extends oe{}class Vl extends Wl{}class io extends oe{}class oo extends io{}class Gl extends io{async _call(P){return new Qt(await super._call(P))}}class ao extends oe{}class lo extends ao{}class uo extends oe{}class Kl extends uo{}class Hl extends uo{async _call(P){return new Qt(await super._call(P))}}class ql extends oe{}class Xl extends ql{async _call(P){return new pc(await super._call(P))}}class co extends oe{}class po extends co{}class Ql extends co{async _call(P){return new Qt(await super._call(P))}}class ho extends oe{}class Yl extends ho{}class Ic extends ho{async _call(P){return new Qt(await super._call(P))}}class mo extends oe{}class Jl extends mo{}class ps extends mo{}class fo extends oe{}class Zl extends fo{}class eu extends fo{}class _o extends oe{}class tu extends _o{}class ru extends _o{async _call(P){return new Qt(await super._call(P))}}class di extends oe{}class su extends di{}class nu extends di{async _call(P){return new iu(await super._call(P))}}class go extends di{async _call(P){return new ou(await super._call(P))}}class iu extends qe{constructor({logits:P,pred_boxes:z}){super(),this.logits=P,this.pred_boxes=z}}class ou extends qe{constructor({logits:P,pred_boxes:z,pred_masks:Te}){super(),this.logits=P,this.pred_boxes=z,this.pred_masks=Te}}class wo extends oe{}class au extends wo{}class lu extends wo{async _call(P){return new uu(await super._call(P))}}class uu extends qe{constructor({logits:P,pred_boxes:z}){super(),this.logits=P,this.pred_boxes=z}}class yo extends oe{}class Oc extends yo{}class Js extends yo{async _call(P){return new Zs(await super._call(P))}}class Zs extends iu{}class Ns extends oe{}class bo extends Ns{}class en extends Ns{async _call(P){return new Qt(await super._call(P))}}class Wr extends oe{}class du extends Wr{}class Mo extends Wr{async _call(P){return new Qt(await super._call(P))}}class vo extends oe{}class Fc extends vo{}class Nn extends vo{async _call(P){return new Qt(await super._call(P))}}class ci extends oe{}class To extends ci{}class cu extends ci{async _call(P){return new Qt(await super._call(P))}}class xo extends oe{}class Eo extends xo{}class Po extends xo{}class Co extends oe{}class ko extends Co{}class pu extends Co{}class pi extends oe{}class So extends pi{}class hi extends oe{}class hu extends hi{}class Dc extends hi{}class mu extends hi{}class $o extends oe{}class jn extends $o{}class Ao extends oe{}class Io extends Ao{}class fu extends Ao{}class Oo extends oe{}class _u extends Oo{}class Lc extends Oo{}class gu extends oe{}class wu extends gu{}class yu extends oe{}class bu extends yu{}class mi extends yu{async _call(P){return new Qt(await super._call(P))}}class Fo extends oe{}class fi extends Fo{}class Do extends Fo{async _call(P){return new Qt(await super._call(P))}}class _i extends oe{}class Mu extends _i{}class vu extends _i{async _call(P){return new Qt(await super._call(P))}}class gi extends oe{}class zc extends gi{}class Tu extends gi{async _call(P){return new Bc(await super._call(P))}}class Bc extends qe{constructor({logits:P,pred_boxes:z}){super(),this.logits=P,this.pred_boxes=z}}class xu extends oe{}class Eu extends xu{async get_image_embeddings({pixel_values:P}){return await fe(this,{pixel_values:P})}async forward(P){if((!P.image_embeddings||!P.image_positional_embeddings)&&(P={...P,...await this.get_image_embeddings(P)}),!P.input_labels&&P.input_points){const Te=P.input_points.dims.slice(0,-1),Fe=Te.reduce((Ae,Qe)=>Ae*Qe,1);P.input_labels=new v.Tensor("int64",new BigInt64Array(Fe).fill(1n),Te)}const z={image_embeddings:P.image_embeddings,image_positional_embeddings:P.image_positional_embeddings};return P.input_points&&(z.input_points=P.input_points),P.input_labels&&(z.input_labels=P.input_labels),P.input_boxes&&(z.input_boxes=P.input_boxes),await he(this.sessions.prompt_encoder_mask_decoder,z)}async _call(P){return new Pu(await super._call(P))}}class Pu extends qe{constructor({iou_scores:P,pred_masks:z}){super(),this.iou_scores=P,this.pred_masks=z}}class wi extends oe{}class Cu extends wi{}class ku extends wi{}class yi extends oe{}class Su extends yi{}class $u extends yi{}class tn extends oe{}class Au extends tn{}class Iu extends tn{async _call(P){return new sn(await super._call(P))}}class Ou extends tn{async _call(P){return new Qt(await super._call(P))}}class Rc extends tn{async _call(P){return new Ur(await super._call(P))}}class Lo extends oe{}class Fu extends Lo{}class Du extends Lo{async _call(P){return new Ur(await super._call(P))}}class Lu extends oe{}class zu extends Lu{}class zo extends oe{}class bi extends zo{}class Un extends zo{async _call(P){return new sn(await super._call(P))}}class Bo extends zo{async _call(P){return new Qt(await super._call(P))}}class Wn extends oe{}class Bu extends Wn{}class Ru extends Wn{async _call(P){return new sn(await super._call(P))}}class Nu extends Wn{async _call(P){return new Qt(await super._call(P))}}class Ro extends Wn{async _call(P){return new Ur(await super._call(P))}}class Mi extends oe{}class ju extends Mi{}class Uu extends Mi{async _call(P){return new sn(await super._call(P))}}class Nc extends Mi{async _call(P){return new Qt(await super._call(P))}}class jc extends oe{}class No extends tn{}class Wu extends tn{async _call(P){return new sn(await super._call(P))}}class Vu extends tn{async _call(P){return new Qt(await super._call(P))}}class vn extends oe{}class Uc extends vn{}class Gu extends vn{async _call(P){return new sn(await super._call(P))}}class Ku extends vn{async _call(P){return new Qt(await super._call(P))}}class Wc extends vn{async _call(P){return new cc(await super._call(P))}}class Hu extends vn{async _call(P){return new Ur(await super._call(P))}}class vi extends oe{}class Vc extends vi{}class qu extends vi{}class Gc extends vi{async generate_speech(P,z,{threshold:Te=.5,minlenratio:Fe=0,maxlenratio:Ae=20,vocoder:Qe=null}={}){const tt={input_ids:P},{encoder_outputs:ft,encoder_attention_mask:vt}=await fe(this,tt),Rt=ft.dims[1]/this.config.reduction_factor,Vt=Math.floor(Rt*Ae),Bt=Math.floor(Rt*Fe),Ut=this.config.num_mel_bins;let er=[],tr=null,Xt=null,lr=0;for(;;){++lr;const mr=xe(!!Xt);let xr;Xt?xr=Xt.output_sequence_out:xr=new v.Tensor("float32",new Float32Array(Ut),[1,1,Ut]);let $r={use_cache_branch:mr,output_sequence:xr,encoder_attention_mask:vt,speaker_embeddings:z,encoder_hidden_states:ft};this.addPastKeyValues($r,tr),Xt=await he(this.sessions.decoder_model_merged,$r),tr=this.getPastKeyValues(Xt,tr);const{prob:Kr,spectrum:Nr}=Xt;if(er.push(Nr),lr>=Bt&&(Array.from(Kr.data).filter(vs=>vs>=Te).length>0||lr>=Vt))break}const kr=(0,v.cat)(er),{waveform:vr}=await he(Qe.sessions.model,{spectrogram:kr});return{spectrogram:kr,waveform:vr}}}class Xu extends oe{constructor(){super(...arguments);ve(this,"main_input_name","spectrogram")}}class Qu extends oe{}class Yu extends Qu{}class Ju extends oe{}class Zu extends Ju{}class ed extends Ju{}class jo extends oe{}class td extends jo{}class Kc extends jo{}class Uo extends oe{}class rd extends Uo{}class sd extends Uo{}class Ti extends oe{}class Hc extends Ti{}class nd extends Ti{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="text_model"),super.from_pretrained(P,z)}}class id extends Ti{static async from_pretrained(P,z={}){return z.model_file_name??(z.model_file_name="audio_model"),super.from_pretrained(P,z)}}class od extends oe{}class Wo extends od{async _call(P){return new hc(await super._call(P))}}class Vo extends oe{}class Ss extends Vo{}class $s extends Vo{}class rn extends Vo{}class js extends oe{}class ad extends js{}class ld extends js{}class Go extends oe{}class ud extends Go{}class dd extends Go{async _call(P){return new Qt(await super._call(P))}}class Ko extends oe{}class qc extends Ko{}class Xc extends Ko{}class Ho extends oe{constructor(){super(...arguments);ve(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(z){const[Te,Fe]=z.dims,Ae=this.config.decoder.num_codebooks,Qe=Fe-Ae;let tt=0;for(let Rt=0;Rt<z.size;++Rt){if(z.data[Rt]===this.config.decoder.pad_token_id)continue;const Vt=Rt%Fe,Bt=Math.floor(Rt/Fe)%Ae,Ut=Vt-Bt;Ut>0&&Ut<=Qe&&(z.data[tt++]=z.data[Rt])}const ft=Math.floor(Te/Ae),vt=tt/(ft*Ae);return new v.Tensor(z.type,z.data.slice(0,tt),[ft,Ae,vt])}prepare_inputs_for_generation(z,Te,Fe){let Ae=structuredClone(z);for(let tt=0;tt<Ae.length;++tt)for(let ft=0;ft<Ae[tt].length;++ft)tt%this.config.decoder.num_codebooks>=ft&&(Ae[tt][ft]=BigInt(this.config.decoder.pad_token_id));return Fe.guidance_scale!==null&&Fe.guidance_scale>1&&(Ae=Ae.concat(Ae)),super.prepare_inputs_for_generation(Ae,Te,Fe)}async generate(z){const Te=await super.generate(z),Fe=this._apply_and_filter_by_delay_pattern_mask(Te).unsqueeze_(0),{audio_values:Ae}=await he(this.sessions.encodec_decode,{audio_codes:Fe});return Ae}}class qo extends oe{}class Qc extends qo{}class Yr extends qo{async _call(P){return new Qt(await super._call(P))}}class Xo extends oe{}class cd extends Xo{}class Qo extends Xo{async _call(P){return new Qt(await super._call(P))}}class Yo extends oe{}class Vn extends Yo{}class pd extends Yo{async _call(P){return new Qt(await super._call(P))}}class Jo extends oe{}class hd extends Jo{}class md extends Jo{async _call(P){return new Qt(await super._call(P))}}class fd extends oe{}class _d extends fd{}class Zo extends oe{}class gd extends Zo{constructor(...z){super(...z);ve(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(z){const Te=this._generation_mode??"text";let Fe;if(Te==="text"||!z.past_key_values){const vt=this.sessions.prepare_inputs_embeds,Rt=(0,W.pick)(z,vt.inputNames);Fe=await he(vt,Rt)}else{const vt=this.sessions.gen_img_embeds,Rt=(0,W.pick)({image_ids:z.input_ids},vt.inputNames);Fe=await he(vt,Rt)}const Ae={...z,...Fe},Qe=await V(this,Ae),tt=this.sessions[Te==="text"?"lm_head":"gen_head"];if(!tt)throw new Error(`Unable to find "${tt}" generation head`);const ft=await he(tt,(0,W.pick)(Qe,tt.inputNames));return{...Fe,...Qe,...ft}}async generate(z){return this._generation_mode="text",super.generate(z)}async generate_images(z){this._generation_mode="image";const Te=(z.inputs??z[this.main_input_name]).dims[1],Ae=(await super.generate(z)).slice(null,[Te,null]),Qe=this.sessions.image_decode,{decoded_image:tt}=await he(Qe,{generated_tokens:Ae}),ft=tt.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),vt=[];for(const Rt of ft){const Vt=D.RawImage.fromTensor(Rt);vt.push(Vt)}return vt}}class wd extends qe{constructor({char_logits:P,bpe_logits:z,wp_logits:Te}){super(),this.char_logits=P,this.bpe_logits=z,this.wp_logits=Te}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class yd extends oe{}class bd extends yd{async _call(P){return new wd(await super._call(P))}}class ea extends oe{}class ta extends ea{}class Md extends ea{}class vd extends oe{}class ra extends vd{}class Td extends vd{}class gr{static async from_pretrained(P,{progress_callback:z=null,config:Te=null,cache_dir:Fe=null,local_files_only:Ae=!1,revision:Qe="main",model_file_name:tt=null,subfolder:ft="onnx",device:vt=null,dtype:Rt=null,use_external_data_format:Vt=null,session_options:Bt={}}={}){const Ut={progress_callback:z,config:Te,cache_dir:Fe,local_files_only:Ae,revision:Qe,model_file_name:tt,subfolder:ft,device:vt,dtype:Rt,use_external_data_format:Vt,session_options:Bt};if(Ut.config=await _.AutoConfig.from_pretrained(P,Ut),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const er of this.MODEL_CLASS_MAPPINGS){const tr=er.get(Ut.config.model_type);if(tr)return await tr[1].from_pretrained(P,Ut)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${Ut.config.model_type}", attempting to construct from base class.`),await oe.from_pretrained(P,Ut);throw Error(`Unsupported model type: ${Ut.config.model_type}`)}}ve(gr,"MODEL_CLASS_MAPPINGS",null),ve(gr,"BASE_IF_FAIL",!1);const Yc=new Map([["bert",["BertModel",ke]],["nomic_bert",["NomicBertModel",pt]],["roformer",["RoFormerModel",ht]],["electra",["ElectraModel",Ft]],["esm",["EsmModel",Ks]],["convbert",["ConvBertModel",Oe]],["camembert",["CamembertModel",Xr]],["deberta",["DebertaModel",Vs]],["deberta-v2",["DebertaV2Model",us]],["mpnet",["MPNetModel",fn]],["albert",["AlbertModel",On]],["distilbert",["DistilBertModel",It]],["roberta",["RobertaModel",Rr]],["xlm",["XLMModel",bs]],["xlm-roberta",["XLMRobertaModel",gt]],["clap",["ClapModel",Hc]],["clip",["CLIPModel",Ba]],["clipseg",["CLIPSegModel",qa]],["chinese_clip",["ChineseCLIPModel",Ga]],["siglip",["SiglipModel",ja]],["jina_clip",["JinaCLIPModel",Ka]],["mobilebert",["MobileBertModel",Sn]],["squeezebert",["SqueezeBertModel",wn]],["wav2vec2",["Wav2Vec2Model",Au]],["wav2vec2-bert",["Wav2Vec2BertModel",ju]],["unispeech",["UniSpeechModel",bi]],["unispeech-sat",["UniSpeechSatModel",Bu]],["hubert",["HubertModel",No]],["wavlm",["WavLMModel",Uc]],["audio-spectrogram-transformer",["ASTModel",Sa]],["vits",["VitsModel",Wo]],["pyannote",["PyAnnoteModel",Fu]],["wespeaker-resnet",["WeSpeakerResNetModel",zu]],["detr",["DetrModel",su]],["rt_detr",["RTDetrModel",au]],["table-transformer",["TableTransformerModel",Oc]],["vit",["ViTModel",Dl]],["ijepa",["IJepaModel",zl]],["pvt",["PvtModel",jl]],["vit_msn",["ViTMSNModel",oo]],["vit_mae",["ViTMAEModel",Vl]],["groupvit",["GroupViTModel",lo]],["fastvit",["FastViTModel",Kl]],["mobilevit",["MobileViTModel",po]],["mobilevitv2",["MobileViTV2Model",Yl]],["owlvit",["OwlViTModel",Jl]],["owlv2",["Owlv2Model",Zl]],["beit",["BeitModel",tu]],["deit",["DeiTModel",bo]],["hiera",["HieraModel",du]],["convnext",["ConvNextModel",bu]],["convnextv2",["ConvNextV2Model",fi]],["dinov2",["Dinov2Model",Mu]],["resnet",["ResNetModel",Fc]],["swin",["SwinModel",To]],["swin2sr",["Swin2SRModel",Eo]],["donut-swin",["DonutSwinModel",wu]],["yolos",["YolosModel",zc]],["dpt",["DPTModel",ko]],["glpn",["GLPNModel",_u]],["hifigan",["SpeechT5HifiGan",Xu]],["efficientnet",["EfficientNetModel",ud]],["decision_transformer",["DecisionTransformerModel",_d]],["patchtst",["PatchTSTForPrediction",ta]],["patchtsmixer",["PatchTSMixerForPrediction",ra]],["mobilenet_v1",["MobileNetV1Model",Qc]],["mobilenet_v2",["MobileNetV2Model",cd]],["mobilenet_v3",["MobileNetV3Model",Vn]],["mobilenet_v4",["MobileNetV4Model",hd]],["maskformer",["MaskFormerModel",Io]],["mgp-str",["MgpstrForSceneTextRecognition",bd]]]),Fp=new Map([["t5",["T5Model",bn]],["longt5",["LongT5Model",Mn]],["mt5",["MT5Model",q]],["bart",["BartModel",Pe]],["mbart",["MBartModel",mt]],["marian",["MarianModel",Cu]],["whisper",["WhisperModel",$a]],["m2m_100",["M2M100Model",Su]],["blenderbot",["BlenderbotModel",Se]],["blenderbot-small",["BlenderbotSmallModel",Qr]]]),Jc=new Map([["bloom",["BloomModel",$l]],["jais",["JAISModel",Qa]],["gpt2",["GPT2Model",cs]],["gptj",["GPTJModel",rl]],["gpt_bigcode",["GPTBigCodeModel",nl]],["gpt_neo",["GPTNeoModel",Ja]],["gpt_neox",["GPTNeoXModel",el]],["codegen",["CodeGenModel",ol]],["llama",["LlamaModel",ll]],["olmo",["OlmoModel",$c]],["olmo2",["Olmo2Model",pl]],["mobilellm",["MobileLLMModel",ul]],["granite",["GraniteModel",zn]],["cohere",["CohereModel",Xi]],["gemma",["GemmaModel",_l]],["gemma2",["Gemma2Model",yl]],["openelm",["OpenELMModel",Ac]],["qwen2",["Qwen2Model",vl]],["phi",["PhiModel",Pl]],["phi3",["Phi3Model",kl]],["mpt",["MptModel",Bn]],["opt",["OPTModel",Ol]],["mistral",["MistralModel",Zu]],["starcoder2",["Starcoder2Model",td]],["falcon",["FalconModel",rd]],["stablelm",["StableLmModel",ad]]]),sa=new Map([["speecht5",["SpeechT5ForSpeechToText",qu]],["whisper",["WhisperForConditionalGeneration",Aa]]]),xd=new Map([["speecht5",["SpeechT5ForTextToSpeech",Gc]]]),Zc=new Map([["vits",["VitsModel",Wo]],["musicgen",["MusicgenForConditionalGeneration",Ho]]]),Ed=new Map([["bert",["BertForSequenceClassification",Ye]],["roformer",["RoFormerForSequenceClassification",O]],["electra",["ElectraForSequenceClassification",sr]],["esm",["EsmForSequenceClassification",gs]],["convbert",["ConvBertForSequenceClassification",rt]],["camembert",["CamembertForSequenceClassification",Ws]],["deberta",["DebertaForSequenceClassification",Os]],["deberta-v2",["DebertaV2ForSequenceClassification",Gs]],["mpnet",["MPNetForSequenceClassification",_n]],["albert",["AlbertForSequenceClassification",yn]],["distilbert",["DistilBertForSequenceClassification",dr]],["roberta",["RobertaForSequenceClassification",Zt]],["xlm",["XLMForSequenceClassification",qr]],["xlm-roberta",["XLMRobertaForSequenceClassification",Qs]],["bart",["BartForSequenceClassification",ut]],["mbart",["MBartForSequenceClassification",Ct]],["mobilebert",["MobileBertForSequenceClassification",zs]],["squeezebert",["SqueezeBertForSequenceClassification",An]]]),Pd=new Map([["bert",["BertForTokenClassification",Xe]],["roformer",["RoFormerForTokenClassification",se]],["electra",["ElectraForTokenClassification",wr]],["esm",["EsmForTokenClassification",kn]],["convbert",["ConvBertForTokenClassification",ct]],["camembert",["CamembertForTokenClassification",Is]],["deberta",["DebertaForTokenClassification",Cs]],["deberta-v2",["DebertaV2ForTokenClassification",os]],["mpnet",["MPNetForTokenClassification",qs]],["distilbert",["DistilBertForTokenClassification",fs]],["roberta",["RobertaForTokenClassification",_r]],["xlm",["XLMForTokenClassification",bt]],["xlm-roberta",["XLMRobertaForTokenClassification",si]]]),Cd=new Map([["t5",["T5ForConditionalGeneration",Dn]],["longt5",["LongT5ForConditionalGeneration",Ee]],["mt5",["MT5ForConditionalGeneration",ie]],["bart",["BartForConditionalGeneration",Ve]],["mbart",["MBartForConditionalGeneration",it]],["marian",["MarianMTModel",ku]],["m2m_100",["M2M100ForConditionalGeneration",$u]],["blenderbot",["BlenderbotForConditionalGeneration",yr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Jr]]]),na=new Map([["bloom",["BloomForCausalLM",Al]],["gpt2",["GPT2LMHeadModel",Xa]],["jais",["JAISLMHeadModel",Ya]],["gptj",["GPTJForCausalLM",sl]],["gpt_bigcode",["GPTBigCodeForCausalLM",il]],["gpt_neo",["GPTNeoForCausalLM",Za]],["gpt_neox",["GPTNeoXForCausalLM",tl]],["codegen",["CodeGenForCausalLM",al]],["llama",["LlamaForCausalLM",Ki]],["olmo",["OlmoForCausalLM",cl]],["olmo2",["Olmo2ForCausalLM",hl]],["mobilellm",["MobileLLMForCausalLM",dl]],["granite",["GraniteForCausalLM",ml]],["cohere",["CohereForCausalLM",fl]],["gemma",["GemmaForCausalLM",gl]],["gemma2",["Gemma2ForCausalLM",bl]],["openelm",["OpenELMForCausalLM",Ml]],["qwen2",["Qwen2ForCausalLM",Tl]],["phi",["PhiForCausalLM",Cl]],["phi3",["Phi3ForCausalLM",Sl]],["mpt",["MptForCausalLM",Il]],["opt",["OPTForCausalLM",Fl]],["mbart",["MBartForCausalLM",hr]],["mistral",["MistralForCausalLM",ed]],["starcoder2",["Starcoder2ForCausalLM",Kc]],["falcon",["FalconForCausalLM",sd]],["trocr",["TrOCRForCausalLM",Yu]],["stablelm",["StableLmForCausalLM",ld]]]),ep=new Map([["multi_modality",["MultiModalityCausalLM",gd]]]),kd=new Map([["bert",["BertForMaskedLM",Ze]],["roformer",["RoFormerForMaskedLM",wt]],["electra",["ElectraForMaskedLM",At]],["esm",["EsmForMaskedLM",Ds]],["convbert",["ConvBertForMaskedLM",He]],["camembert",["CamembertForMaskedLM",is]],["deberta",["DebertaForMaskedLM",Ps]],["deberta-v2",["DebertaV2ForMaskedLM",ks]],["mpnet",["MPNetForMaskedLM",Hs]],["albert",["AlbertForMaskedLM",ir]],["distilbert",["DistilBertForMaskedLM",_s]],["roberta",["RobertaForMaskedLM",ys]],["xlm",["XLMWithLMHeadModel",Dr]],["xlm-roberta",["XLMRobertaForMaskedLM",rs]],["mobilebert",["MobileBertForMaskedLM",ri]],["squeezebert",["SqueezeBertForMaskedLM",$n]]]),Sd=new Map([["bert",["BertForQuestionAnswering",Be]],["roformer",["RoFormerForQuestionAnswering",K]],["electra",["ElectraForQuestionAnswering",Or]],["convbert",["ConvBertForQuestionAnswering",Ot]],["camembert",["CamembertForQuestionAnswering",mn]],["deberta",["DebertaForQuestionAnswering",Fs]],["deberta-v2",["DebertaV2ForQuestionAnswering",ot]],["mpnet",["MPNetForQuestionAnswering",gn]],["albert",["AlbertForQuestionAnswering",Fn]],["distilbert",["DistilBertForQuestionAnswering",rr]],["roberta",["RobertaForQuestionAnswering",Tt]],["xlm",["XLMForQuestionAnswering",Sr]],["xlm-roberta",["XLMRobertaForQuestionAnswering",ka]],["mobilebert",["MobileBertForQuestionAnswering",ws]],["squeezebert",["SqueezeBertForQuestionAnswering",In]]]),ia=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",zi]],["idefics3",["Idefics3ForConditionalGeneration",Bi]]]),Dp=new Map([["llava",["LlavaForConditionalGeneration",ni]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Ia]],["moondream1",["Moondream1ForConditionalGeneration",Rs]],["florence2",["Florence2ForConditionalGeneration",Fa]],["qwen2-vl",["Qwen2VLForConditionalGeneration",El]],["idefics3",["Idefics3ForConditionalGeneration",Bi]],["paligemma",["PaliGemmaForConditionalGeneration",La]]]),tp=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",zi]]]),$d=new Map([["vit",["ViTForImageClassification",Ll]],["ijepa",["IJepaForImageClassification",Bl]],["pvt",["PvtForImageClassification",Ul]],["vit_msn",["ViTMSNForImageClassification",Gl]],["fastvit",["FastViTForImageClassification",Hl]],["mobilevit",["MobileViTForImageClassification",Ql]],["mobilevitv2",["MobileViTV2ForImageClassification",Ic]],["beit",["BeitForImageClassification",ru]],["deit",["DeiTForImageClassification",en]],["hiera",["HieraForImageClassification",Mo]],["convnext",["ConvNextForImageClassification",mi]],["convnextv2",["ConvNextV2ForImageClassification",Do]],["dinov2",["Dinov2ForImageClassification",vu]],["resnet",["ResNetForImageClassification",Nn]],["swin",["SwinForImageClassification",cu]],["segformer",["SegformerForImageClassification",$s]],["efficientnet",["EfficientNetForImageClassification",dd]],["mobilenet_v1",["MobileNetV1ForImageClassification",Yr]],["mobilenet_v2",["MobileNetV2ForImageClassification",Qo]],["mobilenet_v3",["MobileNetV3ForImageClassification",pd]],["mobilenet_v4",["MobileNetV4ForImageClassification",md]]]),Ad=new Map([["detr",["DetrForObjectDetection",nu]],["rt_detr",["RTDetrForObjectDetection",lu]],["table-transformer",["TableTransformerForObjectDetection",Js]],["yolos",["YolosForObjectDetection",Tu]]]),Id=new Map([["owlvit",["OwlViTForObjectDetection",ps]],["owlv2",["Owlv2ForObjectDetection",eu]]]),Od=new Map([["detr",["DetrForSegmentation",go]],["clipseg",["CLIPSegForImageSegmentation",oi]]]),Fd=new Map([["segformer",["SegformerForSemanticSegmentation",rn]],["sapiens",["SapiensForSemanticSegmentation",hu]]]),Dd=new Map([["detr",["DetrForSegmentation",go]],["maskformer",["MaskFormerForInstanceSegmentation",fu]]]),Ld=new Map([["sam",["SamModel",Eu]]]),zd=new Map([["wav2vec2",["Wav2Vec2ForCTC",Iu]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Uu]],["unispeech",["UniSpeechForCTC",Un]],["unispeech-sat",["UniSpeechSatForCTC",Ru]],["wavlm",["WavLMForCTC",Gu]],["hubert",["HubertForCTC",Wu]]]),rp=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Ou]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Nc]],["unispeech",["UniSpeechForSequenceClassification",Bo]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Nu]],["wavlm",["WavLMForSequenceClassification",Ku]],["hubert",["HubertForSequenceClassification",Vu]],["audio-spectrogram-transformer",["ASTForAudioClassification",Di]]]),Gn=new Map([["wavlm",["WavLMForXVector",Wc]]]),oa=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Ro]],["wavlm",["WavLMForAudioFrameClassification",Hu]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Rc]],["pyannote",["PyAnnoteForAudioFrameClassification",Du]]]),aa=new Map([["vitmatte",["VitMatteForImageMatting",Xl]]]),Bd=new Map([["patchtst",["PatchTSTForPrediction",Md]],["patchtsmixer",["PatchTSMixerForPrediction",Td]]]),la=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Po]]]),Rd=new Map([["dpt",["DPTForDepthEstimation",pu]],["depth_anything",["DepthAnythingForDepthEstimation",So]],["glpn",["GLPNForDepthEstimation",Lc]],["sapiens",["SapiensForDepthEstimation",Dc]],["depth_pro",["DepthProForDepthEstimation",jn]]]),Nd=new Map([["sapiens",["SapiensForNormalEstimation",mu]]]),ua=new Map([["vitpose",["VitPoseForPoseEstimation",Nl]]]),da=new Map([["clip",["CLIPVisionModelWithProjection",Na]],["siglip",["SiglipVisionModel",Wa]],["jina_clip",["JinaCLIPVisionModel",Sc]]]),jd=[[Yc,L.EncoderOnly],[Fp,L.EncoderDecoder],[Jc,L.DecoderOnly],[Ed,L.EncoderOnly],[Pd,L.EncoderOnly],[Cd,L.Seq2Seq],[sa,L.Seq2Seq],[na,L.DecoderOnly],[ep,L.MultiModality],[kd,L.EncoderOnly],[Sd,L.EncoderOnly],[ia,L.Vision2Seq],[Dp,L.ImageTextToText],[$d,L.EncoderOnly],[Od,L.EncoderOnly],[Dd,L.EncoderOnly],[Fd,L.EncoderOnly],[aa,L.EncoderOnly],[Bd,L.EncoderOnly],[la,L.EncoderOnly],[Rd,L.EncoderOnly],[Nd,L.EncoderOnly],[ua,L.EncoderOnly],[Ad,L.EncoderOnly],[Id,L.EncoderOnly],[Ld,L.MaskGeneration],[zd,L.EncoderOnly],[rp,L.EncoderOnly],[xd,L.Seq2Seq],[Zc,L.EncoderOnly],[Gn,L.EncoderOnly],[oa,L.EncoderOnly],[da,L.EncoderOnly]];for(const[f,P]of jd)for(const[z,Te]of f.values())A.set(z,P),S.set(Te,z),g.set(z,Te);const sp=[["MusicgenForConditionalGeneration",Ho,L.Musicgen],["CLIPTextModelWithProjection",Ra,L.EncoderOnly],["SiglipTextModel",Ua,L.EncoderOnly],["JinaCLIPTextModel",Ha,L.EncoderOnly],["ClapTextModelWithProjection",nd,L.EncoderOnly],["ClapAudioModelWithProjection",id,L.EncoderOnly]];for(const[f,P,z]of sp)A.set(f,z),S.set(P,f),g.set(f,P);class xi extends gr{}ve(xi,"MODEL_CLASS_MAPPINGS",jd.map(P=>P[0])),ve(xi,"BASE_IF_FAIL",!0);class Ud extends gr{}ve(Ud,"MODEL_CLASS_MAPPINGS",[Ed]);class Wd extends gr{}ve(Wd,"MODEL_CLASS_MAPPINGS",[Pd]);class ca extends gr{}ve(ca,"MODEL_CLASS_MAPPINGS",[Cd]);class Vd extends gr{}ve(Vd,"MODEL_CLASS_MAPPINGS",[sa]);class Gd extends gr{}ve(Gd,"MODEL_CLASS_MAPPINGS",[xd]);class Kd extends gr{}ve(Kd,"MODEL_CLASS_MAPPINGS",[Zc]);class Hd extends gr{}ve(Hd,"MODEL_CLASS_MAPPINGS",[na]);class np extends gr{}ve(np,"MODEL_CLASS_MAPPINGS",[kd]);class qd extends gr{}ve(qd,"MODEL_CLASS_MAPPINGS",[Sd]);class Xd extends gr{}ve(Xd,"MODEL_CLASS_MAPPINGS",[ia]);class Qd extends gr{}ve(Qd,"MODEL_CLASS_MAPPINGS",[$d]);class Yd extends gr{}ve(Yd,"MODEL_CLASS_MAPPINGS",[Od]);class ip extends gr{}ve(ip,"MODEL_CLASS_MAPPINGS",[Fd]);class Jd extends gr{}ve(Jd,"MODEL_CLASS_MAPPINGS",[Dd]);class Zd extends gr{}ve(Zd,"MODEL_CLASS_MAPPINGS",[Ad]);class ec extends gr{}ve(ec,"MODEL_CLASS_MAPPINGS",[Id]);class op extends gr{}ve(op,"MODEL_CLASS_MAPPINGS",[Ld]);class tc extends gr{}ve(tc,"MODEL_CLASS_MAPPINGS",[zd]);class rc extends gr{}ve(rc,"MODEL_CLASS_MAPPINGS",[rp]);class sc extends gr{}ve(sc,"MODEL_CLASS_MAPPINGS",[Gn]);class nc extends gr{}ve(nc,"MODEL_CLASS_MAPPINGS",[oa]);class ap extends gr{}ve(ap,"MODEL_CLASS_MAPPINGS",[tp]);class ic extends gr{}ve(ic,"MODEL_CLASS_MAPPINGS",[aa]);class oc extends gr{}ve(oc,"MODEL_CLASS_MAPPINGS",[la]);class ac extends gr{}ve(ac,"MODEL_CLASS_MAPPINGS",[Rd]);class lc extends gr{}ve(lc,"MODEL_CLASS_MAPPINGS",[Nd]);class uc extends gr{}ve(uc,"MODEL_CLASS_MAPPINGS",[ua]);class dc extends gr{}ve(dc,"MODEL_CLASS_MAPPINGS",[da]);class lp extends qe{constructor({logits:P,past_key_values:z,encoder_outputs:Te,decoder_attentions:Fe=null,cross_attentions:Ae=null}){super(),this.logits=P,this.past_key_values=z,this.encoder_outputs=Te,this.decoder_attentions=Fe,this.cross_attentions=Ae}}class Qt extends qe{constructor({logits:P}){super(),this.logits=P}}class cc extends qe{constructor({logits:P,embeddings:z}){super(),this.logits=P,this.embeddings=z}}class Ur extends qe{constructor({logits:P}){super(),this.logits=P}}class Vr extends qe{constructor({logits:P}){super(),this.logits=P}}class Gr extends qe{constructor({start_logits:P,end_logits:z}){super(),this.start_logits=P,this.end_logits=z}}class sn extends qe{constructor({logits:P}){super(),this.logits=P}}class up extends qe{constructor({logits:P,past_key_values:z}){super(),this.logits=P,this.past_key_values=z}}class pc extends qe{constructor({alphas:P}){super(),this.alphas=P}}class hc extends qe{constructor({waveform:P,spectrogram:z}){super(),this.waveform=P,this.spectrogram=z}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(ae,$,s)=>{s.r($),s.d($,{ASTFeatureExtractor:()=>U});var _=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var F=s("./src/utils/audio.js");class U extends _.FeatureExtractor{constructor(W){super(W);const w=this.config.sampling_rate,M=(0,F.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(w/2),w,null,"kaldi",!0);for(let y=0;y<M.length;++y)M[y].push(0);this.mel_filters=M,this.window=(0,F.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(W,w){return(0,F.spectrogram)(W,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:w,transpose:!0})}async _call(W){(0,_.validate_audio_inputs)(W,"ASTFeatureExtractor");const w=await this._extract_fbank_features(W,this.config.max_length);if(this.config.do_normalize){const M=this.std*2,y=w.data;for(let b=0;b<y.length;++b)y[b]=(y[b]-this.mean)/M}return{input_values:w.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(ae,$,s)=>{s.r($),s.d($,{AutoFeatureExtractor:()=>J});var _=s("./src/utils/constants.js"),F=s("./src/utils/hub.js");s("./src/base/feature_extraction_utils.js");var U=s("./src/models/feature_extractors.js");class J{static async from_pretrained(w,M={}){const y=await(0,F.getModelJSON)(w,_.FEATURE_EXTRACTOR_NAME,!0,M),b=y.feature_extractor_type,v=U[b];if(!v)throw new Error(`Unknown feature_extractor_type: '${b}'. Please report this at ${_.GITHUB_ISSUE_URL}.`);return new v(y)}}},"./src/models/auto/image_processing_auto.js":(ae,$,s)=>{s.r($),s.d($,{AutoImageProcessor:()=>W});var _=s("./src/utils/constants.js"),F=s("./src/utils/hub.js"),U=s("./src/base/image_processors_utils.js"),J=s("./src/models/image_processors.js");class W{static async from_pretrained(M,y={}){const b=await(0,F.getModelJSON)(M,_.IMAGE_PROCESSOR_NAME,!0,y),v=b.image_processor_type??b.feature_extractor_type;let D=J[v];return D||(v!==void 0&&console.warn(`Image processor type '${v}' not found, assuming base ImageProcessor. Please report this at ${_.GITHUB_ISSUE_URL}.`),D=U.ImageProcessor),new D(b)}}},"./src/models/auto/processing_auto.js":(ae,$,s)=>{s.r($),s.d($,{AutoProcessor:()=>M});var _=s("./src/utils/constants.js"),F=s("./src/utils/hub.js"),U=s("./src/base/processing_utils.js"),J=s("./src/models/processors.js"),W=s("./src/models/image_processors.js"),w=s("./src/models/feature_extractors.js");class M{static async from_pretrained(b,v={}){const D=await(0,F.getModelJSON)(b,_.IMAGE_PROCESSOR_NAME,!0,v),{image_processor_type:Q,feature_extractor_type:ne,processor_class:le}=D;if(le&&J[le])return J[le].from_pretrained(b,v);if(!Q&&!ne)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const N={};if(Q){const Y=W[Q];if(!Y)throw new Error(`Unknown image_processor_type: '${Q}'.`);N.image_processor=new Y(D)}if(ne){const Y=W[ne];if(Y)N.image_processor=new Y(D);else{const L=w[ne];if(!L)throw new Error(`Unknown feature_extractor_type: '${ne}'.`);N.feature_extractor=new L(D)}}const H={};return new U.Processor(H,N)}}},"./src/models/beit/image_processing_beit.js":(ae,$,s)=>{s.r($),s.d($,{BeitFeatureExtractor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(ae,$,s)=>{s.r($),s.d($,{BitImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(ae,$,s)=>{s.r($),s.d($,{ChineseCLIPFeatureExtractor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(ae,$,s)=>{s.r($),s.d($,{ClapFeatureExtractor:()=>U});var _=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var F=s("./src/utils/audio.js");class U extends _.FeatureExtractor{constructor(W){super(W),this.mel_filters=(0,F.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,F.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,F.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(W,w,M,y){let b;const v=W.length-w;if(v>0)if(M==="rand_trunc"){const D=Math.floor(Math.random()*(v+1));W=W.subarray(D,D+w),b=await this._extract_fbank_features(W,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${M}" not implemented`);else{if(v<0){let D=new Float64Array(w);if(D.set(W),y==="repeat")for(let Q=W.length;Q<w;Q+=W.length)D.set(W.subarray(0,Math.min(W.length,w-Q)),Q);else if(y==="repeatpad")for(let Q=W.length;Q<-v;Q+=W.length)D.set(W,Q);W=D}if(M==="fusion")throw new Error(`Truncation strategy "${M}" not implemented`);b=await this._extract_fbank_features(W,this.mel_filters_slaney,this.config.nb_max_samples)}return b.unsqueeze_(0)}async _extract_fbank_features(W,w,M=null){return(0,F.spectrogram)(W,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:w,log_mel:"dB",max_num_frames:M,do_pad:!1,transpose:!0})}async _call(W,{max_length:w=null}={}){return(0,_.validate_audio_inputs)(W,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(W,w??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(ae,$,s)=>{s.r($),s.d($,{CLIPFeatureExtractor:()=>U,CLIPImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/convnext/image_processing_convnext.js":(ae,$,s)=>{s.r($),s.d($,{ConvNextFeatureExtractor:()=>U,ConvNextImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{constructor(W){super(W),this.crop_pct=this.config.crop_pct??224/256}async resize(W){var M;const w=(M=this.size)==null?void 0:M.shortest_edge;if(w===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(w<384){const y=Math.floor(w/this.crop_pct),[b,v]=this.get_resize_output_image_size(W,{shortest_edge:y});W=await W.resize(b,v,{resample:this.resample}),W=await W.center_crop(w,w)}else W=await W.resize(w,w,{resample:this.resample});return W}}class U extends F{}},"./src/models/deit/image_processing_deit.js":(ae,$,s)=>{s.r($),s.d($,{DeiTFeatureExtractor:()=>U,DeiTImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/detr/image_processing_detr.js":(ae,$,s)=>{s.r($),s.d($,{DetrFeatureExtractor:()=>J,DetrImageProcessor:()=>U});var _=s("./src/base/image_processors_utils.js"),F=s("./src/utils/tensor.js");class U extends _.ImageProcessor{async _call(w){const M=await super._call(w),y=[M.pixel_values.dims[0],64,64],b=(0,F.full)(y,1n);return{...M,pixel_mask:b}}post_process_object_detection(...w){return(0,_.post_process_object_detection)(...w)}post_process_panoptic_segmentation(...w){return(0,_.post_process_panoptic_segmentation)(...w)}post_process_instance_segmentation(...w){return(0,_.post_process_instance_segmentation)(...w)}}class J extends U{}},"./src/models/donut/image_processing_donut.js":(ae,$,s)=>{s.r($),s.d($,{DonutFeatureExtractor:()=>U,DonutImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{pad_image(W,w,M,y={}){const[b,v,D]=w;let Q=this.image_mean;Array.isArray(this.image_mean)||(Q=new Array(D).fill(Q));let ne=this.image_std;Array.isArray(ne)||(ne=new Array(D).fill(Q));const le=Q.map((N,H)=>-N/ne[H]);return super.pad_image(W,w,M,{center:!0,constant_values:le,...y})}}class U extends F{}},"./src/models/dpt/image_processing_dpt.js":(ae,$,s)=>{s.r($),s.d($,{DPTFeatureExtractor:()=>U,DPTImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/efficientnet/image_processing_efficientnet.js":(ae,$,s)=>{s.r($),s.d($,{EfficientNetImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{constructor(J){super(J),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(W=>W*W))}}},"./src/models/feature_extractors.js":(ae,$,s)=>{s.r($),s.d($,{ASTFeatureExtractor:()=>_.ASTFeatureExtractor,ClapFeatureExtractor:()=>F.ClapFeatureExtractor,ImageFeatureExtractor:()=>b.ImageProcessor,PyAnnoteFeatureExtractor:()=>U.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>J.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>W.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>w.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>M.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>y.WhisperFeatureExtractor});var _=s("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),F=s("./src/models/clap/feature_extraction_clap.js"),U=s("./src/models/pyannote/feature_extraction_pyannote.js"),J=s("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),W=s("./src/models/speecht5/feature_extraction_speecht5.js"),w=s("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),M=s("./src/models/wespeaker/feature_extraction_wespeaker.js"),y=s("./src/models/whisper/feature_extraction_whisper.js"),b=s("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(ae,$,s)=>{s.r($),s.d($,{Florence2Processor:()=>J});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js");class J extends _.Processor{constructor(w,M){super(w,M);const{tasks_answer_post_processing_type:y,task_prompts_without_inputs:b,task_prompts_with_input:v}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(y??{})),this.task_prompts_without_inputs=new Map(Object.entries(b??{})),this.task_prompts_with_input=new Map(Object.entries(v??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(w){typeof w=="string"&&(w=[w]);const M=[];for(const y of w)if(this.task_prompts_without_inputs.has(y))M.push(this.task_prompts_without_inputs.get(y));else{for(const[b,v]of this.task_prompts_with_input)if(y.includes(b)){M.push(v.replaceAll("{input}",y).replaceAll(b,""));break}M.length!==w.length&&M.push(y)}return M}post_process_generation(w,M,y){const b=this.tasks_answer_post_processing_type.get(M)??"pure_text";w=w.replaceAll("<s>","").replaceAll("</s>","");let v;switch(b){case"pure_text":v=w;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const D=b==="ocr"?"quad_boxes":"bboxes",Q=w.matchAll(this.regexes[D]),ne=[],le=[];for(const[N,H,...Y]of Q)ne.push(H?H.trim():ne.at(-1)??""),le.push(Y.map((L,A)=>(Number(L)+.5)/this.size_per_bin*y[A%2]));v={labels:ne,[D]:le};break;default:throw new Error(`Task "${M}" (of type "${b}") not yet implemented.`)}return{[M]:v}}async _call(w,M=null,y={}){if(!w&&!M)throw new Error("Either text or images must be provided");const b=await this.image_processor(w,y),v=M?this.tokenizer(M,y):{};return{...b,...v}}}ve(J,"tokenizer_class",U.AutoTokenizer),ve(J,"image_processor_class",F.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(ae,$,s)=>{s.r($),s.d($,{GLPNFeatureExtractor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}},"./src/models/idefics3/image_processing_idefics3.js":(ae,$,s)=>{s.r($),s.d($,{Idefics3ImageProcessor:()=>U});var _=s("./src/base/image_processors_utils.js"),F=s("./src/utils/tensor.js");class U extends _.ImageProcessor{constructor(W){super(W),this.do_image_splitting=W.do_image_splitting??!0,this.max_image_size=W.max_image_size}get_resize_for_vision_encoder(W,w){let[M,y]=W.dims.slice(-2);const b=y/M;return y>=M?(y=Math.ceil(y/w)*w,M=Math.floor(y/b),M=Math.ceil(M/w)*w):(M=Math.ceil(M/w)*w,y=Math.floor(M*b),y=Math.ceil(y/w)*w),{height:M,width:y}}async _call(W,{do_image_splitting:w=null,return_row_col_info:M=!1}={}){let y;if(!Array.isArray(W))y=[[W]];else{if(W.length===0||!W[0])throw new Error("No images provided.");Array.isArray(W[0])?y=W:y=[W]}let b=[],v=[],D=[];const Q=[],ne=[];for(const S of y){let T=await Promise.all(S.map(de=>this.preprocess(de)));Q.push(...T.map(de=>de.original_size)),ne.push(...T.map(de=>de.reshaped_input_size)),T.forEach(de=>de.pixel_values.unsqueeze_(0));const{longest_edge:te}=this.max_image_size;let Z;if(w??this.do_image_splitting){let de=new Array(T.length),he=new Array(T.length);Z=await Promise.all(T.map(async(we,Ce)=>{const xe=this.get_resize_for_vision_encoder(we.pixel_values,te),ze=await(0,F.interpolate_4d)(we.pixel_values,{size:[xe.height,xe.width]}),{frames:fe,num_splits_h:V,num_splits_w:ce}=await this.split_image(ze,this.max_image_size);return de[Ce]=V,he[Ce]=ce,(0,F.cat)(fe,0)})),v.push(de),D.push(he)}else{const de=[te,te];Z=await Promise.all(T.map(he=>(0,F.interpolate_4d)(he.pixel_values,{size:de}))),v.push(new Array(T.length).fill(0)),D.push(new Array(T.length).fill(0))}b.push((0,F.cat)(Z,0))}const le=b.length,[N,H,Y,L]=b[0].dims;let A,g;if(le===1)A=b[0].unsqueeze_(0),g=(0,F.full)([le,N,Y,L],!0);else{const S=Math.max(...b.map(Z=>Z.dims.at(0)));g=(0,F.full)([le,S,Y,L],!0);const T=g.data,te=S*Y*L;for(let Z=0;Z<le;++Z){const de=b[Z].dims[0];if(de<S){b[Z]=(0,F.cat)([b[Z],(0,F.full)([S-de,H,Y,L],0)],0);const he=Z*te+de*Y*L,we=(Z+1)*te;T.fill(!1,he,we)}}A=(0,F.stack)(b,0)}return{pixel_values:A,pixel_attention_mask:g,original_sizes:Q,reshaped_input_sizes:ne,...M?{rows:v,cols:D}:{}}}async split_image(W,{longest_edge:w}){const M=w,y=w,b=[],[v,D]=W.dims.slice(-2);let Q=0,ne=0;if(v>M||D>y){Q=Math.ceil(v/M),ne=Math.ceil(D/y);const le=Math.ceil(v/Q),N=Math.ceil(D/ne);for(let L=0;L<Q;L++)for(let A=0;A<ne;A++){const g=A*N,S=L*le,T=Math.min(g+N,D),te=Math.min(S+le,v);b.push(W.slice(null,null,[S,te],[g,T]))}const H=M,Y=y;(v!==H||D!==Y)&&(W=await(0,F.interpolate_4d)(W,{size:[H,Y]}))}return b.push(W),{frames:b,num_splits_h:Q,num_splits_w:ne}}}},"./src/models/idefics3/processing_idefics3.js":(ae,$,s)=>{s.r($),s.d($,{Idefics3Processor:()=>y});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js");s("./src/utils/image.js");var J=s("./src/utils/core.js");function W(b,v,D,Q,ne,le){let N="";for(let H=0;H<v;++H){for(let Y=0;Y<D;++Y)N+=Q+`<row_${H+1}_col_${Y+1}>`+ne.repeat(b);N+=`
`}return N+=`
${Q}${le}`+ne.repeat(b)+`${Q}`,N}function w(b,v,D,Q){return`${v}${Q}`+D.repeat(b)+`${v}`}function M(b,v,D,Q,ne,le){return b===0&&v===0?w(D,Q,ne,le):W(D,b,v,Q,ne,le)}class y extends _.Processor{constructor(){super(...arguments);ve(this,"fake_image_token","<fake_token_around_image>");ve(this,"image_token","<image>");ve(this,"global_img_token","<global-img>")}async _call(D,Q=null,ne={}){ne.return_row_col_info??(ne.return_row_col_info=!0);let le;Q&&(le=await this.image_processor(Q,ne)),Array.isArray(D)||(D=[D]);const N=le.rows??[new Array(D.length).fill(0)],H=le.cols??[new Array(D.length).fill(0)],Y=this.config.image_seq_len,L=[],A=[];for(let S=0;S<D.length;++S){const T=D[S],te=N[S],Z=H[S];L.push((0,J.count)(T,this.image_token));const de=te.map((Ce,xe)=>M(Ce,Z[xe],Y,this.fake_image_token,this.image_token,this.global_img_token)),he=T.split(this.image_token);if(he.length===0)throw new Error("The image token should be present in the text.");let we=he[0];for(let Ce=0;Ce<de.length;++Ce)we+=de[Ce]+he[Ce+1];A.push(we)}return{...this.tokenizer(A),...le}}}ve(y,"image_processor_class",F.AutoImageProcessor),ve(y,"tokenizer_class",U.AutoTokenizer),ve(y,"uses_processor_config",!0)},"./src/models/image_processors.js":(ae,$,s)=>{s.r($),s.d($,{BeitFeatureExtractor:()=>_.BeitFeatureExtractor,BitImageProcessor:()=>F.BitImageProcessor,CLIPFeatureExtractor:()=>J.CLIPFeatureExtractor,CLIPImageProcessor:()=>J.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>U.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>W.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>W.ConvNextImageProcessor,DPTFeatureExtractor:()=>b.DPTFeatureExtractor,DPTImageProcessor:()=>b.DPTImageProcessor,DeiTFeatureExtractor:()=>w.DeiTFeatureExtractor,DeiTImageProcessor:()=>w.DeiTImageProcessor,DetrFeatureExtractor:()=>M.DetrFeatureExtractor,DetrImageProcessor:()=>M.DetrImageProcessor,DonutFeatureExtractor:()=>y.DonutFeatureExtractor,DonutImageProcessor:()=>y.DonutImageProcessor,EfficientNetImageProcessor:()=>v.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>D.GLPNFeatureExtractor,Idefics3ImageProcessor:()=>Q.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>le.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>N.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>H.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>Y.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>Y.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>L.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>L.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>A.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>A.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>g.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>g.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>S.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>S.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>T.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>T.MobileViTImageProcessor,NougatImageProcessor:()=>te.NougatImageProcessor,OwlViTFeatureExtractor:()=>de.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>de.OwlViTImageProcessor,Owlv2ImageProcessor:()=>Z.Owlv2ImageProcessor,PvtImageProcessor:()=>he.PvtImageProcessor,Qwen2VLImageProcessor:()=>we.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Ce.RTDetrImageProcessor,SamImageProcessor:()=>xe.SamImageProcessor,SegformerFeatureExtractor:()=>ze.SegformerFeatureExtractor,SegformerImageProcessor:()=>ze.SegformerImageProcessor,SiglipImageProcessor:()=>fe.SiglipImageProcessor,Swin2SRImageProcessor:()=>V.Swin2SRImageProcessor,VLMImageProcessor:()=>ne.VLMImageProcessor,ViTFeatureExtractor:()=>ce.ViTFeatureExtractor,ViTImageProcessor:()=>ce.ViTImageProcessor,VitMatteImageProcessor:()=>_e.VitMatteImageProcessor,VitPoseImageProcessor:()=>De.VitPoseImageProcessor,YolosFeatureExtractor:()=>Ne.YolosFeatureExtractor,YolosImageProcessor:()=>Ne.YolosImageProcessor});var _=s("./src/models/beit/image_processing_beit.js"),F=s("./src/models/bit/image_processing_bit.js"),U=s("./src/models/chinese_clip/image_processing_chinese_clip.js"),J=s("./src/models/clip/image_processing_clip.js"),W=s("./src/models/convnext/image_processing_convnext.js"),w=s("./src/models/deit/image_processing_deit.js"),M=s("./src/models/detr/image_processing_detr.js"),y=s("./src/models/donut/image_processing_donut.js"),b=s("./src/models/dpt/image_processing_dpt.js"),v=s("./src/models/efficientnet/image_processing_efficientnet.js"),D=s("./src/models/glpn/image_processing_glpn.js"),Q=s("./src/models/idefics3/image_processing_idefics3.js"),ne=s("./src/models/janus/image_processing_janus.js"),le=s("./src/models/jina_clip/image_processing_jina_clip.js"),N=s("./src/models/llava_onevision/image_processing_llava_onevision.js"),H=s("./src/models/mask2former/image_processing_mask2former.js"),Y=s("./src/models/maskformer/image_processing_maskformer.js"),L=s("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),A=s("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),g=s("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),S=s("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),T=s("./src/models/mobilevit/image_processing_mobilevit.js"),te=s("./src/models/nougat/image_processing_nougat.js"),Z=s("./src/models/owlv2/image_processing_owlv2.js"),de=s("./src/models/owlvit/image_processing_owlvit.js"),he=s("./src/models/pvt/image_processing_pvt.js"),we=s("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Ce=s("./src/models/rt_detr/image_processing_rt_detr.js"),xe=s("./src/models/sam/image_processing_sam.js"),ze=s("./src/models/segformer/image_processing_segformer.js"),fe=s("./src/models/siglip/image_processing_siglip.js"),V=s("./src/models/swin2sr/image_processing_swin2sr.js"),ce=s("./src/models/vit/image_processing_vit.js"),_e=s("./src/models/vitmatte/image_processing_vitmatte.js"),De=s("./src/models/vitpose/image_processing_vitpose.js"),Ne=s("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(ae,$,s)=>{s.r($),s.d($,{VLMImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{constructor(J){super({do_pad:!0,pad_size:{width:J.image_size,height:J.image_size},...J}),this.constant_values=this.config.background_color.map(W=>W*this.rescale_factor)}pad_image(J,W,w,M){return super.pad_image(J,W,w,{constant_values:this.constant_values,center:!0,...M})}}},"./src/models/janus/processing_janus.js":(ae,$,s)=>{s.r($),s.d($,{VLChatProcessor:()=>M});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js"),J=s("./src/utils/core.js"),W=s("./src/utils/tensor.js"),w=s("./src/utils/image.js");class M extends _.Processor{constructor(b,v){super(b,v),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(b,{images:v=null,chat_template:D="default"}={}){v?Array.isArray(v)||(v=[v]):v=await Promise.all(b.filter(Z=>Z.images).flatMap(Z=>Z.images).map(Z=>w.RawImage.read(Z)));const Q=this.tokenizer,ne=Q.apply_chat_template(b,{tokenize:!1,add_generation_prompt:!0,chat_template:D}),le=Z=>Q.encode(Z,{add_special_tokens:!1}),N=ne.split(this.image_tag),H=N.length-1;if(v.length!==H)throw new Error(`Number of images provided (${v.length}) does not match number of "${this.image_tag}" image tags (${H})`);const[Y,L,A]=Q.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let g=le(N[0]),S=new Array(g.length).fill(!1);for(let Z=1;Z<N.length;++Z){const de=new Array(this.num_image_tokens).fill(Y),he=le(N[Z]);g=(0,J.mergeArrays)(g,[L],de,[A],he);const we=new Array(this.num_image_tokens).fill(!0);S=(0,J.mergeArrays)(S,[!1],we,[!1],new Array(he.length).fill(!1))}const T=[1,g.length],te={input_ids:new W.Tensor("int64",g,T),attention_mask:new W.Tensor("int64",new Array(g.length).fill(1),T),images_seq_mask:new W.Tensor("bool",S,T),images_emb_mask:new W.Tensor("bool",new Array(H*this.num_image_tokens).fill(!0),[1,H,this.num_image_tokens])};if(v&&v.length>0){const Z=await this.image_processor(v);return Z.pixel_values.unsqueeze_(0),{...te,...Z}}return te}}ve(M,"image_processor_class",F.AutoImageProcessor),ve(M,"tokenizer_class",U.AutoTokenizer),ve(M,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(ae,$,s)=>{s.r($),s.d($,{JinaCLIPImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{constructor(J){const{resize_mode:W,fill_color:w,interpolation:M,size:y,...b}=J,v=W==="squash"?{width:y,height:y}:W==="shortest"?{shortest_edge:y}:{longest_edge:y},D=M==="bicubic"?3:2;super({...b,size:v,resample:D,do_center_crop:!0,crop_size:y,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(ae,$,s)=>{s.r($),s.d($,{JinaCLIPProcessor:()=>J});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js");class J extends _.Processor{async _call(w=null,M=null,y={}){if(!w&&!M)throw new Error("Either text or images must be provided");const b=w?this.tokenizer(w,y):{},v=M?await this.image_processor(M,y):{};return{...b,...v}}}ve(J,"tokenizer_class",U.AutoTokenizer),ve(J,"image_processor_class",F.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(ae,$,s)=>{s.r($),s.d($,{LlavaOnevisionImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(ae,$,s)=>{s.r($),s.d($,{Mask2FormerImageProcessor:()=>F});var _=s("./src/models/maskformer/image_processing_maskformer.js");class F extends _.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(ae,$,s)=>{s.r($),s.d($,{MaskFormerFeatureExtractor:()=>U,MaskFormerImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{post_process_panoptic_segmentation(...W){return(0,_.post_process_panoptic_segmentation)(...W)}post_process_instance_segmentation(...W){return(0,_.post_process_instance_segmentation)(...W)}}class U extends F{}},"./src/models/mgp_str/processing_mgp_str.js":(ae,$,s)=>{s.r($),s.d($,{MgpstrProcessor:()=>w});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js"),J=s("./src/utils/maths.js");const W={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class w extends _.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(y,b){if(!W.hasOwnProperty(b))throw new Error(`Format ${b} is not supported.`);const[v,D]=W[b],Q=this[v].bind(this),[ne,le]=y.dims,N=[],H=[],Y=y.tolist();for(let A=0;A<ne;++A){const g=Y[A],S=[],T=[];for(let Z=1;Z<le;++Z){const[de,he]=(0,J.max)((0,J.softmax)(g[Z]));if(T.push(de),he==D)break;S.push(he)}const te=T.length>0?T.reduce((Z,de)=>Z*de,1):0;H.push(S),N.push(te)}return[Q(H),N]}char_decode(y){return this.char_tokenizer.batch_decode(y).map(b=>b.replaceAll(" ",""))}bpe_decode(y){return this.bpe_tokenizer.batch_decode(y)}wp_decode(y){return this.wp_tokenizer.batch_decode(y).map(b=>b.replaceAll(" ",""))}batch_decode([y,b,v]){const[D,Q]=this._decode_helper(y,"char"),[ne,le]=this._decode_helper(b,"bpe"),[N,H]=this._decode_helper(v,"wp"),Y=[],L=[];for(let A=0;A<D.length;++A){const[g,S]=(0,J.max)([Q[A],le[A],H[A]]);Y.push([D[A],ne[A],N[A]][S]),L.push(g)}return{generated_text:Y,scores:L,char_preds:D,bpe_preds:ne,wp_preds:N}}static async from_pretrained(...y){const b=await super.from_pretrained(...y),v=await U.AutoTokenizer.from_pretrained("Xenova/gpt2"),D=await U.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return b.components={image_processor:b.image_processor,char_tokenizer:b.tokenizer,bpe_tokenizer:v,wp_tokenizer:D},b}async _call(y,b=null){const v=await this.image_processor(y);return b&&(v.labels=this.tokenizer(b).input_ids),v}}ve(w,"tokenizer_class",U.AutoTokenizer),ve(w,"image_processor_class",F.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(ae,$,s)=>{s.r($),s.d($,{MobileNetV1FeatureExtractor:()=>U,MobileNetV1ImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(ae,$,s)=>{s.r($),s.d($,{MobileNetV2FeatureExtractor:()=>U,MobileNetV2ImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(ae,$,s)=>{s.r($),s.d($,{MobileNetV3FeatureExtractor:()=>U,MobileNetV3ImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(ae,$,s)=>{s.r($),s.d($,{MobileNetV4FeatureExtractor:()=>U,MobileNetV4ImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/mobilevit/image_processing_mobilevit.js":(ae,$,s)=>{s.r($),s.d($,{MobileViTFeatureExtractor:()=>U,MobileViTImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/nougat/image_processing_nougat.js":(ae,$,s)=>{s.r($),s.d($,{NougatImageProcessor:()=>F});var _=s("./src/models/donut/image_processing_donut.js");class F extends _.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(ae,$,s)=>{s.r($),s.d($,{Owlv2ImageProcessor:()=>F});var _=s("./src/models/owlvit/image_processing_owlvit.js");class F extends _.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(ae,$,s)=>{s.r($),s.d($,{OwlViTFeatureExtractor:()=>U,OwlViTImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{post_process_object_detection(...W){return(0,_.post_process_object_detection)(...W)}}class U extends F{}},"./src/models/owlvit/processing_owlvit.js":(ae,$,s)=>{s.r($),s.d($,{OwlViTProcessor:()=>J});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js");class J extends _.Processor{}ve(J,"tokenizer_class",U.AutoTokenizer),ve(J,"image_processor_class",F.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(ae,$,s)=>{s.r($),s.d($,{PaliGemmaProcessor:()=>w});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js");const J="<image>";function W(M,y,b,v,D){return`${v.repeat(b*D)}${y}${M}
`}class w extends _.Processor{async _call(y,b=null,v={}){b||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),b=""),Array.isArray(y)||(y=[y]),Array.isArray(b)||(b=[b]);const D=this.tokenizer.bos_token,Q=this.image_processor.config.image_seq_length;let ne;b.some(H=>H.includes(J))?ne=b.map(H=>{const Y=H.replaceAll(J,J.repeat(Q)),L=Y.lastIndexOf(J),A=L===-1?0:L+J.length;return Y.slice(0,A)+D+Y.slice(A)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),ne=b.map(H=>W(H,D,Q,J,y.length)));const le=this.tokenizer(ne,v);return{...await this.image_processor(y,v),...le}}}ve(w,"tokenizer_class",U.AutoTokenizer),ve(w,"image_processor_class",F.AutoImageProcessor),ve(w,"uses_processor_config",!1)},"./src/models/processors.js":(ae,$,s)=>{s.r($),s.d($,{Florence2Processor:()=>_.Florence2Processor,Idefics3Processor:()=>U.Idefics3Processor,JinaCLIPProcessor:()=>W.JinaCLIPProcessor,MgpstrProcessor:()=>F.MgpstrProcessor,OwlViTProcessor:()=>w.OwlViTProcessor,PaliGemmaProcessor:()=>M.PaliGemmaProcessor,PyAnnoteProcessor:()=>y.PyAnnoteProcessor,Qwen2VLProcessor:()=>b.Qwen2VLProcessor,SamProcessor:()=>v.SamProcessor,SpeechT5Processor:()=>D.SpeechT5Processor,VLChatProcessor:()=>J.VLChatProcessor,Wav2Vec2ProcessorWithLM:()=>Q.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>ne.WhisperProcessor});var _=s("./src/models/florence2/processing_florence2.js"),F=s("./src/models/mgp_str/processing_mgp_str.js"),U=s("./src/models/idefics3/processing_idefics3.js"),J=s("./src/models/janus/processing_janus.js"),W=s("./src/models/jina_clip/processing_jina_clip.js"),w=s("./src/models/owlvit/processing_owlvit.js"),M=s("./src/models/paligemma/processing_paligemma.js"),y=s("./src/models/pyannote/processing_pyannote.js"),b=s("./src/models/qwen2_vl/processing_qwen2_vl.js"),v=s("./src/models/sam/processing_sam.js"),D=s("./src/models/speecht5/processing_speecht5.js"),Q=s("./src/models/wav2vec2/processing_wav2vec2.js"),ne=s("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(ae,$,s)=>{s.r($),s.d($,{PvtImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(ae,$,s)=>{s.r($),s.d($,{PyAnnoteFeatureExtractor:()=>U});var _=s("./src/base/feature_extraction_utils.js"),F=s("./src/utils/tensor.js");class U extends _.FeatureExtractor{async _call(W){(0,_.validate_audio_inputs)(W,"PyAnnoteFeatureExtractor"),W instanceof Float64Array&&(W=new Float32Array(W));const w=[1,1,W.length];return{input_values:new F.Tensor("float32",W,w)}}}},"./src/models/pyannote/processing_pyannote.js":(ae,$,s)=>{s.r($),s.d($,{PyAnnoteProcessor:()=>J});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/feature_extraction_auto.js"),U=s("./src/utils/maths.js");class J extends _.Processor{async _call(w){return await this.feature_extractor(w)}samples_to_frames(w){return(w-this.config.offset)/this.config.step}post_process_speaker_diarization(w,M){const y=M/this.samples_to_frames(M)/this.config.sampling_rate,b=[];for(const v of w.tolist()){const D=[];let Q=-1;for(let ne=0;ne<v.length;++ne){const le=(0,U.softmax)(v[ne]),[N,H]=(0,U.max)(le),[Y,L]=[ne,ne+1];H!==Q?(Q=H,D.push({id:H,start:Y,end:L,score:N})):(D.at(-1).end=L,D.at(-1).score+=N)}b.push(D.map(({id:ne,start:le,end:N,score:H})=>({id:ne,start:le*y,end:N*y,confidence:H/(N-le)})))}return b}}ve(J,"feature_extractor_class",F.AutoFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(ae,$,s)=>{s.r($),s.d($,{Qwen2VLImageProcessor:()=>U});var _=s("./src/base/image_processors_utils.js"),F=s("./src/utils/tensor.js");class U extends _.ImageProcessor{async _call(W,...w){const{pixel_values:M,original_sizes:y,reshaped_input_sizes:b}=await super._call(W,...w);let v=M;const{temporal_patch_size:D,merge_size:Q,patch_size:ne}=this.config;v.dims[0]===1&&(v=(0,F.cat)(Array.from({length:D},()=>v),0));const le=v.dims[0]/D,N=v.dims[1],H=Math.floor(v.dims[2]/ne),Y=Math.floor(v.dims[3]/ne),L=v.view(le,D,N,Math.floor(H/Q),Q,ne,Math.floor(Y/Q),Q,ne).permute(0,3,6,4,7,2,1,5,8).view(le*H*Y,N*D*ne*ne),A=new F.Tensor("int64",[le,H,Y],[1,3]);return{pixel_values:L,image_grid_thw:A,original_sizes:y,reshaped_input_sizes:b}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(ae,$,s)=>{s.r($),s.d($,{Qwen2VLProcessor:()=>J});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js"),U=s("./src/tokenizers.js");s("./src/utils/image.js");class J extends _.Processor{async _call(w,M=null,...y){Array.isArray(w)||(w=[w]);let b,v;if(M&&(b=await this.image_processor(M),v=b.image_grid_thw),v){let Q=this.image_processor.config.merge_size**2,ne=0;const le=v.tolist();w=w.map(N=>{for(;N.includes("<|image_pad|>");){const H=Number(le[ne++].reduce((Y,L)=>Y*L,1n));N=N.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(H/Q)))}return N.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(w),...b}}}ve(J,"image_processor_class",F.AutoImageProcessor),ve(J,"tokenizer_class",U.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(ae,$,s)=>{s.r($),s.d($,{RTDetrImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{post_process_object_detection(...J){return(0,_.post_process_object_detection)(...J)}}},"./src/models/sam/image_processing_sam.js":(ae,$,s)=>{s.r($),s.d($,{SamImageProcessor:()=>J});var _=s("./src/base/image_processors_utils.js"),F=s("./src/utils/core.js"),U=s("./src/utils/tensor.js");class J extends _.ImageProcessor{reshape_input_points(w,M,y,b=!1){w=structuredClone(w);let v=(0,F.calculateDimensions)(w);if(v.length===3)b||(v=[1,...v]),w=[w];else if(v.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let D=0;D<w.length;++D){let Q=M[D],ne=y[D],le=[ne[0]/Q[0],ne[1]/Q[1]];for(let N=0;N<w[D].length;++N)for(let H=0;H<w[D][N].length;++H)for(let Y=0;Y<w[D][N][H].length;++Y)w[D][N][H][Y]*=le[Y%2]}return new U.Tensor("float32",Float32Array.from(w.flat(1/0)),v)}add_input_labels(w,M){let y=(0,F.calculateDimensions)(w);if(y.length===2)y=[1,...y],w=[w];else if(y.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(y.some((b,v)=>b!==M.dims[v]))throw Error(`The first ${y.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new U.Tensor("int64",w.flat(1/0).map(BigInt),y)}async _call(w,{input_points:M=null,input_labels:y=null,input_boxes:b=null}={}){const v=await super._call(w);if(M&&(v.input_points=this.reshape_input_points(M,v.original_sizes,v.reshaped_input_sizes)),y){if(!v.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");v.input_labels=this.add_input_labels(y,v.input_points)}return b&&(v.input_boxes=this.reshape_input_points(b,v.original_sizes,v.reshaped_input_sizes,!0)),v}async post_process_masks(w,M,y,{mask_threshold:b=0,binarize:v=!0,pad_size:D=null}={}){const Q=[];D=D??this.pad_size;const ne=[D.height,D.width];for(let le=0;le<M.length;++le){const N=M[le],H=y[le];let Y=await(0,U.interpolate_4d)(w[le],{mode:"bilinear",size:ne});if(Y=Y.slice(null,null,[0,H[0]],[0,H[1]]),Y=await(0,U.interpolate_4d)(Y,{mode:"bilinear",size:N}),v){const L=Y.data,A=new Uint8Array(L.length);for(let g=0;g<L.length;++g)L[g]>b&&(A[g]=1);Y=new U.Tensor("bool",A,Y.dims)}Q.push(Y)}return Q}generate_crop_boxes(w,M,{crop_n_layers:y=0,overlap_ratio:b=512/1500,points_per_crop:v=32,crop_n_points_downscale_factor:D=1}={}){}}},"./src/models/sam/processing_sam.js":(ae,$,s)=>{s.r($),s.d($,{SamProcessor:()=>U});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/image_processing_auto.js");class U extends _.Processor{async _call(...W){return await this.image_processor(...W)}post_process_masks(...W){return this.image_processor.post_process_masks(...W)}reshape_input_points(...W){return this.image_processor.reshape_input_points(...W)}}ve(U,"image_processor_class",F.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(ae,$,s)=>{s.r($),s.d($,{SeamlessM4TFeatureExtractor:()=>J});var _=s("./src/base/feature_extraction_utils.js"),F=s("./src/utils/tensor.js"),U=s("./src/utils/audio.js");class J extends _.FeatureExtractor{constructor(w){super(w);const M=this.config.sampling_rate,y=(0,U.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(M/2),M,null,"kaldi",!0);for(let b=0;b<y.length;++b)y[b].push(0);this.mel_filters=y,this.window=(0,U.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(w,M){return w=w.map(y=>y*32768),(0,U.spectrogram)(w,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:M,transpose:!0})}async _call(w,{padding:M=!0,pad_to_multiple_of:y=2,do_normalize_per_mel_bins:b=!0,return_attention_mask:v=!0}={}){(0,_.validate_audio_inputs)(w,"SeamlessM4TFeatureExtractor");let D=await this._extract_fbank_features(w,this.config.max_length);if(b){const[A,g]=D.dims,S=D.data;for(let T=0;T<g;++T){let te=0;for(let we=0;we<A;++we)te+=S[we*g+T];const Z=te/A;let de=0;for(let we=0;we<A;++we)de+=(S[we*g+T]-Z)**2;de/=A-1;const he=Math.sqrt(de+1e-7);for(let we=0;we<A;++we){const Ce=we*g+T;S[Ce]=(S[Ce]-Z)/he}}}let Q;if(M){const[A,g]=D.dims,S=D.data,T=A%y;if(T>0){const te=new Float32Array(g*(A+T));te.set(S),te.fill(this.config.padding_value,S.length);const Z=A+T;D=new F.Tensor(D.type,te,[Z,g]),v&&(Q=new F.Tensor("int64",new BigInt64Array(Z),[1,Z]),Q.data.fill(1n,0,A))}}const[ne,le]=D.dims,N=this.config.stride;if(ne%N!==0)throw new Error(`The number of frames (${ne}) must be a multiple of the stride (${N}).`);const Y=D.view(1,Math.floor(ne/N),le*N),L={input_features:Y};if(v){const A=Y.dims[1],g=new BigInt64Array(A);if(Q){const S=Q.data;for(let T=1,te=0;T<ne;T+=N,++te)g[te]=S[T]}else g.fill(1n);L.attention_mask=new F.Tensor("int64",g,[1,A])}return L}}},"./src/models/segformer/image_processing_segformer.js":(ae,$,s)=>{s.r($),s.d($,{SegformerFeatureExtractor:()=>U,SegformerImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{post_process_semantic_segmentation(...W){return(0,_.post_process_semantic_segmentation)(...W)}}class U extends F{}},"./src/models/siglip/image_processing_siglip.js":(ae,$,s)=>{s.r($),s.d($,{SiglipImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(ae,$,s)=>{s.r($),s.d($,{SpeechT5FeatureExtractor:()=>F});var _=s("./src/base/feature_extraction_utils.js");class F extends _.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(ae,$,s)=>{s.r($),s.d($,{SpeechT5Processor:()=>J});var _=s("./src/base/processing_utils.js"),F=s("./src/tokenizers.js"),U=s("./src/models/auto/feature_extraction_auto.js");class J extends _.Processor{async _call(w){return await this.feature_extractor(w)}}ve(J,"tokenizer_class",F.AutoTokenizer),ve(J,"feature_extractor_class",U.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(ae,$,s)=>{s.r($),s.d($,{Swin2SRImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{pad_image(J,W,w,M={}){const[y,b,v]=W;return super.pad_image(J,W,{width:b+(w-b%w)%w,height:y+(w-y%w)%w},{mode:"symmetric",center:!1,constant_values:-1,...M})}}},"./src/models/vit/image_processing_vit.js":(ae,$,s)=>{s.r($),s.d($,{ViTFeatureExtractor:()=>U,ViTImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{}class U extends F{}},"./src/models/vitmatte/image_processing_vitmatte.js":(ae,$,s)=>{s.r($),s.d($,{VitMatteImageProcessor:()=>U});var _=s("./src/base/image_processors_utils.js"),F=s("./src/utils/tensor.js");class U extends _.ImageProcessor{async _call(W,w){Array.isArray(W)||(W=[W]),Array.isArray(w)||(w=[w]);const M=await Promise.all(W.map(v=>this.preprocess(v))),y=await Promise.all(w.map(v=>this.preprocess(v,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,F.stack)(M.map((v,D)=>(0,F.cat)([v.pixel_values,y[D].pixel_values],0)),0),original_sizes:M.map(v=>v.original_size),reshaped_input_sizes:M.map(v=>v.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(ae,$,s)=>{s.r($),s.d($,{VitPoseImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{post_process_pose_estimation(J,W,{threshold:w=null}={}){const M=J.tolist(),[y,b,v,D]=J.dims,Q=[];for(let ne=0;ne<y;++ne){const le=M[ne],N=W[ne],H=[];for(let Y=0;Y<N.length;++Y){const L=N[Y],A=[],g=[],S=[],T=L.at(-2)/D,te=L.at(-1)/v;for(let Z=0;Z<le.length;++Z){let[de,he]=[0,0],we=0,Ce=-1/0;const xe=le[Z];for(let fe=0;fe<xe.length;++fe){const V=xe[fe];for(let ce=0;ce<V.length;++ce){const _e=V[ce];we+=_e,Ce=Math.max(Ce,_e),de+=(ce+.5)*_e,he+=fe*_e}}if(w!=null&&Ce<w)continue;const ze=[T*de/we,te*he/we];A.push(ze),S.push(Z),g.push(Ce)}H.push({bbox:L,scores:g,labels:S,keypoints:A})}Q.push(H)}return Q}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(ae,$,s)=>{s.r($),s.d($,{Wav2Vec2FeatureExtractor:()=>U});var _=s("./src/base/feature_extraction_utils.js"),F=s("./src/utils/tensor.js");class U extends _.FeatureExtractor{_zero_mean_unit_var_norm(W){const M=W.reduce((b,v)=>b+v,0)/W.length,y=W.reduce((b,v)=>b+(v-M)**2,0)/W.length;return W.map(b=>(b-M)/Math.sqrt(y+1e-7))}async _call(W){(0,_.validate_audio_inputs)(W,"Wav2Vec2FeatureExtractor"),W instanceof Float64Array&&(W=new Float32Array(W));let w=W;this.config.do_normalize&&(w=this._zero_mean_unit_var_norm(w));const M=[1,w.length];return{input_values:new F.Tensor("float32",w,M),attention_mask:new F.Tensor("int64",new BigInt64Array(w.length).fill(1n),M)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(ae,$,s)=>{s.r($),s.d($,{Wav2Vec2ProcessorWithLM:()=>U});var _=s("./src/base/processing_utils.js"),F=s("./src/models/auto/feature_extraction_auto.js");class U extends _.Processor{async _call(W){return await this.feature_extractor(W)}}ve(U,"feature_extractor_class",F.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(ae,$,s)=>{s.r($),s.d($,{WeSpeakerFeatureExtractor:()=>U});var _=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var F=s("./src/utils/audio.js");class U extends _.FeatureExtractor{constructor(W){super(W);const w=this.config.sampling_rate,M=(0,F.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(w/2),w,null,"kaldi",!0);for(let y=0;y<M.length;++y)M[y].push(0);this.mel_filters=M,this.window=(0,F.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(W){return W=W.map(w=>w*32768),(0,F.spectrogram)(W,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(W){(0,_.validate_audio_inputs)(W,"WeSpeakerFeatureExtractor");const w=(await this._extract_fbank_features(W)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const M=w.mean(1).data,y=w.data,[b,v,D]=w.dims;for(let Q=0;Q<b;++Q){const ne=Q*v*D,le=Q*D;for(let N=0;N<v;++N){const H=ne+N*D;for(let Y=0;Y<D;++Y)y[H+Y]-=M[le+Y]}}}return{input_features:w}}}},"./src/models/whisper/common_whisper.js":(ae,$,s)=>{s.r($),s.d($,{WHISPER_LANGUAGE_MAPPING:()=>F,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>U,whisper_language_to_code:()=>J});const _=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],F=new Map(_),U=new Map([..._.map(([W,w])=>[w,W]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function J(W){W=W.toLowerCase();let w=U.get(W);if(w===void 0)if(F.has(W))w=W;else{const y=W.length===2?F.keys():F.values();throw new Error(`Language "${W}" is not supported. Must be one of: ${JSON.stringify(y)}`)}return w}},"./src/models/whisper/feature_extraction_whisper.js":(ae,$,s)=>{s.r($),s.d($,{WhisperFeatureExtractor:()=>J});var _=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var F=s("./src/utils/audio.js"),U=s("./src/utils/maths.js");class J extends _.FeatureExtractor{constructor(w){var M;super(w),(M=this.config).mel_filters??(M.mel_filters=(0,F.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,F.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(w){const M=await(0,F.spectrogram)(w,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),y=M.data,b=(0,U.max)(y)[0];for(let v=0;v<y.length;++v)y[v]=(Math.max(y[v],b-8)+4)/4;return M}async _call(w){(0,_.validate_audio_inputs)(w,"WhisperFeatureExtractor");let M;return w.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),M=w.slice(0,this.config.n_samples)):(M=new Float32Array(this.config.n_samples),M.set(w)),{input_features:(await this._extract_fbank_features(M)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(ae,$,s)=>{s.r($),s.d($,{WhisperGenerationConfig:()=>F});var _=s("./src/generation/configuration_utils.js");class F extends _.GenerationConfig{constructor(){super(...arguments);ve(this,"return_timestamps",null);ve(this,"return_token_timestamps",null);ve(this,"num_frames",null);ve(this,"alignment_heads",null);ve(this,"task",null);ve(this,"language",null);ve(this,"no_timestamps_token_id",null);ve(this,"prompt_ids",null);ve(this,"is_multilingual",null);ve(this,"lang_to_id",null);ve(this,"task_to_id",null);ve(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(ae,$,s)=>{s.r($),s.d($,{WhisperProcessor:()=>J});var _=s("./src/models/auto/feature_extraction_auto.js"),F=s("./src/tokenizers.js"),U=s("./src/base/processing_utils.js");class J extends U.Processor{async _call(w){return await this.feature_extractor(w)}}ve(J,"tokenizer_class",F.AutoTokenizer),ve(J,"feature_extractor_class",_.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(ae,$,s)=>{s.r($),s.d($,{YolosFeatureExtractor:()=>U,YolosImageProcessor:()=>F});var _=s("./src/base/image_processors_utils.js");class F extends _.ImageProcessor{post_process_object_detection(...W){return(0,_.post_process_object_detection)(...W)}}class U extends F{}},"./src/ops/registry.js":(ae,$,s)=>{s.r($),s.d($,{TensorOpRegistry:()=>J});var _=s("./src/backends/onnx.js"),F=s("./src/utils/tensor.js");const U=async(W,w,M)=>{const y=await(0,_.createInferenceSession)(new Uint8Array(W),w);return async b=>{const v=Object.fromEntries(Object.entries(b).map(([Q,ne])=>[Q,ne.ort_tensor])),D=await y.run(v);return Array.isArray(M)?M.map(Q=>new F.Tensor(D[Q])):new F.Tensor(D[M])}};class J{static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=U([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=U([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=U([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=U([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=U([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=U([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}ve(J,"session_options",{})},"./src/pipelines.js":(ae,$,s)=>{s.r($),s.d($,{AudioClassificationPipeline:()=>he,AutomaticSpeechRecognitionPipeline:()=>Ce,DepthEstimationPipeline:()=>Je,DocumentQuestionAnsweringPipeline:()=>De,FeatureExtractionPipeline:()=>Z,FillMaskPipeline:()=>Y,ImageClassificationPipeline:()=>ze,ImageFeatureExtractionPipeline:()=>de,ImageSegmentationPipeline:()=>fe,ImageToImagePipeline:()=>Ke,ImageToTextPipeline:()=>xe,ObjectDetectionPipeline:()=>ce,Pipeline:()=>ne,QuestionAnsweringPipeline:()=>H,SummarizationPipeline:()=>A,Text2TextGenerationPipeline:()=>L,TextClassificationPipeline:()=>le,TextGenerationPipeline:()=>T,TextToAudioPipeline:()=>Ne,TokenClassificationPipeline:()=>N,TranslationPipeline:()=>g,ZeroShotAudioClassificationPipeline:()=>we,ZeroShotClassificationPipeline:()=>te,ZeroShotImageClassificationPipeline:()=>V,ZeroShotObjectDetectionPipeline:()=>_e,pipeline:()=>oe});var _=s("./src/tokenizers.js"),F=s("./src/models.js"),U=s("./src/models/auto/processing_auto.js");s("./src/base/processing_utils.js");var J=s("./src/utils/generic.js"),W=s("./src/utils/core.js"),w=s("./src/utils/maths.js"),M=s("./src/utils/audio.js"),y=s("./src/utils/tensor.js"),b=s("./src/utils/image.js");async function v(je){return Array.isArray(je)||(je=[je]),await Promise.all(je.map(ye=>b.RawImage.read(ye)))}async function D(je,ye){return Array.isArray(je)||(je=[je]),await Promise.all(je.map(ke=>typeof ke=="string"||ke instanceof URL?(0,M.read_audio)(ke,ye):ke instanceof Float64Array?new Float32Array(ke):ke))}function Q(je,ye){ye&&(je=je.map(Be=>Be|0));const[ke,Ze,Ye,Xe]=je;return{xmin:ke,ymin:Ze,xmax:Ye,ymax:Xe}}class ne extends J.Callable{constructor({task:ye,model:ke,tokenizer:Ze=null,processor:Ye=null}){super(),this.task=ye,this.model=ke,this.tokenizer=Ze,this.processor=Ye}async dispose(){await this.model.dispose()}}class le extends ne{constructor(ye){super(ye)}async _call(ye,{top_k:ke=1}={}){const Ze=this.tokenizer(ye,{padding:!0,truncation:!0}),Ye=await this.model(Ze),Xe=this.model.config.problem_type==="multi_label_classification"?pt=>pt.sigmoid():pt=>new y.Tensor("float32",(0,w.softmax)(pt.data),pt.dims),Be=this.model.config.id2label,st=[];for(const pt of Ye.logits){const yt=Xe(pt),ht=await(0,y.topk)(yt,ke),wt=ht[0].tolist(),se=ht[1].tolist().map((K,ue)=>({label:Be?Be[K]:`LABEL_${K}`,score:wt[ue]}));ke===1?st.push(...se):st.push(se)}return Array.isArray(ye)||ke===1?st:st[0]}}class N extends ne{constructor(ye){super(ye)}async _call(ye,{ignore_labels:ke=["O"]}={}){const Ze=Array.isArray(ye),Ye=this.tokenizer(Ze?ye:[ye],{padding:!0,truncation:!0}),Be=(await this.model(Ye)).logits,st=this.model.config.id2label,pt=[];for(let yt=0;yt<Be.dims[0];++yt){const ht=Ye.input_ids[yt],wt=Be[yt],O=[];for(let se=0;se<wt.dims[0];++se){const K=wt[se],ue=(0,w.max)(K.data)[1],Oe=st?st[ue]:`LABEL_${ue}`;if(ke.includes(Oe))continue;const He=this.tokenizer.decode([ht[se].item()],{skip_special_tokens:!0});if(He==="")continue;const rt=(0,w.softmax)(K.data);O.push({entity:Oe,score:rt[ue],index:se,word:He})}pt.push(O)}return Ze?pt:pt[0]}}class H extends ne{constructor(ye){super(ye)}async _call(ye,ke,{top_k:Ze=1}={}){const Ye=this.tokenizer(ye,{text_pair:ke,padding:!0,truncation:!0}),{start_logits:Xe,end_logits:Be}=await this.model(Ye),st=Ye.input_ids.tolist(),pt=Ye.attention_mask.tolist(),yt=this.tokenizer.all_special_ids,ht=[];for(let wt=0;wt<Xe.dims[0];++wt){const O=st[wt],se=O.findIndex(ct=>ct==this.tokenizer.sep_token_id);pt[wt].map((ct,Ot)=>ct==1&&(Ot===0||Ot>se&&yt.findIndex(xt=>xt==O[Ot])===-1));const K=Xe[wt].tolist(),ue=Be[wt].tolist();for(let ct=1;ct<K.length;++ct)(pt[wt]==0||ct<=se||yt.findIndex(Ot=>Ot==O[ct])!==-1)&&(K[ct]=-1/0,ue[ct]=-1/0);const Oe=(0,w.softmax)(K).map((ct,Ot)=>[ct,Ot]),He=(0,w.softmax)(ue).map((ct,Ot)=>[ct,Ot]);Oe[0][0]=0,He[0][0]=0;const rt=(0,W.product)(Oe,He).filter(ct=>ct[0][1]<=ct[1][1]).map(ct=>[ct[0][1],ct[1][1],ct[0][0]*ct[1][0]]).sort((ct,Ot)=>Ot[2]-ct[2]);for(let ct=0;ct<Math.min(rt.length,Ze);++ct){const[Ot,xt,Ft]=rt[ct],At=O.slice(Ot,xt+1),sr=this.tokenizer.decode(At,{skip_special_tokens:!0});ht.push({answer:sr,score:Ft})}}return Ze===1?ht[0]:ht}}class Y extends ne{constructor(ye){super(ye)}async _call(ye,{top_k:ke=5}={}){const Ze=this.tokenizer(ye,{padding:!0,truncation:!0}),{logits:Ye}=await this.model(Ze),Xe=[],Be=Ze.input_ids.tolist();for(let st=0;st<Be.length;++st){const pt=Be[st],yt=pt.findIndex(K=>K==this.tokenizer.mask_token_id);if(yt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const ht=Ye[st][yt],wt=await(0,y.topk)(new y.Tensor("float32",(0,w.softmax)(ht.data),ht.dims),ke),O=wt[0].tolist(),se=wt[1].tolist();Xe.push(se.map((K,ue)=>{const Oe=pt.slice();return Oe[yt]=K,{score:O[ue],token:Number(K),token_str:this.tokenizer.model.vocab[K],sequence:this.tokenizer.decode(Oe,{skip_special_tokens:!0})}}))}return Array.isArray(ye)?Xe:Xe[0]}}class L extends ne{constructor(ke){super(ke);ve(this,"_key","generated_text")}async _call(ke,Ze={}){Array.isArray(ke)||(ke=[ke]),this.model.config.prefix&&(ke=ke.map(yt=>this.model.config.prefix+yt));const Ye=this.model.config.task_specific_params;Ye&&Ye[this.task]&&Ye[this.task].prefix&&(ke=ke.map(yt=>Ye[this.task].prefix+yt));const Xe=this.tokenizer,Be={padding:!0,truncation:!0};let st;this instanceof g&&"_build_translation_inputs"in Xe?st=Xe._build_translation_inputs(ke,Be,Ze):st=Xe(ke,Be);const pt=await this.model.generate({...st,...Ze});return Xe.batch_decode(pt,{skip_special_tokens:!0}).map(yt=>({[this._key]:yt}))}}class A extends L{constructor(ke){super(ke);ve(this,"_key","summary_text")}}class g extends L{constructor(ke){super(ke);ve(this,"_key","translation_text")}}function S(je){return Array.isArray(je)&&je.every(ye=>"role"in ye&&"content"in ye)}class T extends ne{constructor(ye){super(ye)}async _call(ye,ke={}){let Ze=!1,Ye=!1,Xe;if(typeof ye=="string")Xe=ye=[ye];else if(Array.isArray(ye)&&ye.every(se=>typeof se=="string"))Ze=!0,Xe=ye;else{if(S(ye))ye=[ye];else if(Array.isArray(ye)&&ye.every(S))Ze=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Ye=!0,Xe=ye.map(se=>this.tokenizer.apply_chat_template(se,{tokenize:!1,add_generation_prompt:!0}))}const Be=ke.add_special_tokens??!1,st=Ye?!1:ke.return_full_text??!0;this.tokenizer.padding_side="left";const pt=this.tokenizer(Xe,{add_special_tokens:Be,padding:!0,truncation:!0}),yt=await this.model.generate({...pt,...ke}),ht=this.tokenizer.batch_decode(yt,{skip_special_tokens:!0});let wt;!st&&pt.input_ids.dims.at(-1)>0&&(wt=this.tokenizer.batch_decode(pt.input_ids,{skip_special_tokens:!0}).map(se=>se.length));const O=Array.from({length:ye.length},se=>[]);for(let se=0;se<ht.length;++se){const K=Math.floor(se/yt.dims[0]*ye.length);wt&&(ht[se]=ht[se].slice(wt[K])),O[K].push({generated_text:Ye?[...ye[K],{role:"assistant",content:ht[se]}]:ht[se]})}return!Ze&&O.length===1?O[0]:O}}class te extends ne{constructor(ye){super(ye),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([ke,Ze])=>[ke.toLowerCase(),Ze])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(ye,ke,{hypothesis_template:Ze="This example is {}.",multi_label:Ye=!1}={}){const Xe=Array.isArray(ye);Xe||(ye=[ye]),Array.isArray(ke)||(ke=[ke]);const Be=ke.map(yt=>Ze.replace("{}",yt)),st=Ye||ke.length===1,pt=[];for(const yt of ye){const ht=[];for(const se of Be){const K=this.tokenizer(yt,{text_pair:se,padding:!0,truncation:!0}),ue=await this.model(K);st?ht.push([ue.logits.data[this.contradiction_id],ue.logits.data[this.entailment_id]]):ht.push(ue.logits.data[this.entailment_id])}const O=(st?ht.map(se=>(0,w.softmax)(se)[1]):(0,w.softmax)(ht)).map((se,K)=>[se,K]).sort((se,K)=>K[0]-se[0]);pt.push({sequence:yt,labels:O.map(se=>ke[se[1]]),scores:O.map(se=>se[0])})}return Xe?pt:pt[0]}}class Z extends ne{constructor(ye){super(ye)}async _call(ye,{pooling:ke="none",normalize:Ze=!1,quantize:Ye=!1,precision:Xe="binary"}={}){const Be=this.tokenizer(ye,{padding:!0,truncation:!0}),st=await this.model(Be);let pt=st.last_hidden_state??st.logits??st.token_embeddings;if(ke!=="none")if(ke==="mean")pt=(0,y.mean_pooling)(pt,Be.attention_mask);else if(ke==="cls")pt=pt.slice(null,0);else throw Error(`Pooling method '${ke}' not supported.`);return Ze&&(pt=pt.normalize(2,-1)),Ye&&(pt=(0,y.quantize_embeddings)(pt,Xe)),pt}}class de extends ne{constructor(ye){super(ye)}async _call(ye,{pool:ke=null}={}){const Ze=await v(ye),{pixel_values:Ye}=await this.processor(Ze),Xe=await this.model({pixel_values:Ye});let Be;if(ke){if(!("pooler_output"in Xe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Be=Xe.pooler_output}else Be=Xe.last_hidden_state??Xe.logits??Xe.image_embeds;return Be}}class he extends ne{constructor(ye){super(ye)}async _call(ye,{top_k:ke=5}={}){const Ze=this.processor.feature_extractor.config.sampling_rate,Ye=await D(ye,Ze),Xe=this.model.config.id2label,Be=[];for(const st of Ye){const pt=await this.processor(st),ht=(await this.model(pt)).logits[0],wt=await(0,y.topk)(new y.Tensor("float32",(0,w.softmax)(ht.data),ht.dims),ke),O=wt[0].tolist(),K=wt[1].tolist().map((ue,Oe)=>({label:Xe?Xe[ue]:`LABEL_${ue}`,score:O[Oe]}));Be.push(K)}return Array.isArray(ye)?Be:Be[0]}}class we extends ne{constructor(ye){super(ye)}async _call(ye,ke,{hypothesis_template:Ze="This is a sound of {}."}={}){const Ye=!Array.isArray(ye);Ye&&(ye=[ye]);const Xe=ke.map(ht=>Ze.replace("{}",ht)),Be=this.tokenizer(Xe,{padding:!0,truncation:!0}),st=this.processor.feature_extractor.config.sampling_rate,pt=await D(ye,st),yt=[];for(const ht of pt){const wt=await this.processor(ht),O=await this.model({...Be,...wt}),se=(0,w.softmax)(O.logits_per_audio.data);yt.push([...se].map((K,ue)=>({score:K,label:ke[ue]})))}return Ye?yt[0]:yt}}class Ce extends ne{constructor(ye){super(ye)}async _call(ye,ke={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(ye,ke);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(ye,ke);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(ye,ke){ke.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),ke.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Ze=!Array.isArray(ye);Ze&&(ye=[ye]);const Ye=this.processor.feature_extractor.config.sampling_rate,Xe=await D(ye,Ye),Be=[];for(const st of Xe){const pt=await this.processor(st),ht=(await this.model(pt)).logits[0],wt=[];for(const se of ht)wt.push((0,w.max)(se.data)[1]);const O=this.tokenizer.decode(wt);Be.push({text:O})}return Ze?Be[0]:Be}async _call_whisper(ye,ke){const Ze=ke.return_timestamps??!1,Ye=ke.chunk_length_s??0,Xe=ke.force_full_sequences??!1;let Be=ke.stride_length_s??null;const st={...ke};Ze==="word"&&(st.return_token_timestamps=!0,st.return_timestamps=!1);const pt=!Array.isArray(ye);pt&&(ye=[ye]);const yt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,ht=this.processor.feature_extractor.config.hop_length,wt=this.processor.feature_extractor.config.sampling_rate,O=await D(ye,wt),se=[];for(const K of O){let ue=[];if(Ye>0){if(Be===null)Be=Ye/6;else if(Ye<=Be)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const rt=wt*Ye,ct=wt*Be,Ot=rt-2*ct;let xt=0;for(;;){const Ft=xt+rt,At=K.subarray(xt,Ft),sr=await this.processor(At),wr=xt===0,Or=Ft>=K.length;if(ue.push({stride:[At.length,wr?0:ct,Or?0:ct],input_features:sr.input_features,is_last:Or}),Or)break;xt+=Ot}}else ue=[{stride:[K.length,0,0],input_features:(await this.processor(K)).input_features,is_last:!0}];for(const rt of ue){st.num_frames=Math.floor(rt.stride[0]/ht);const ct=await this.model.generate({inputs:rt.input_features,...st});Ze==="word"?(rt.tokens=ct.sequences.tolist()[0],rt.token_timestamps=ct.token_timestamps.tolist()[0].map(Ot=>(0,w.round)(Ot,2))):rt.tokens=ct[0].tolist(),rt.stride=rt.stride.map(Ot=>Ot/wt)}const[Oe,He]=this.tokenizer._decode_asr(ue,{time_precision:yt,return_timestamps:Ze,force_full_sequences:Xe});se.push({text:Oe,...He})}return pt?se[0]:se}}class xe extends ne{constructor(ye){super(ye)}async _call(ye,ke={}){const Ze=Array.isArray(ye),Ye=await v(ye),{pixel_values:Xe}=await this.processor(Ye),Be=[];for(const st of Xe){st.dims=[1,...st.dims];const pt=await this.model.generate({inputs:st,...ke}),yt=this.tokenizer.batch_decode(pt,{skip_special_tokens:!0}).map(ht=>({generated_text:ht.trim()}));Be.push(yt)}return Ze?Be:Be[0]}}class ze extends ne{constructor(ye){super(ye)}async _call(ye,{top_k:ke=5}={}){const Ze=await v(ye),{pixel_values:Ye}=await this.processor(Ze),Xe=await this.model({pixel_values:Ye}),Be=this.model.config.id2label,st=[];for(const pt of Xe.logits){const yt=await(0,y.topk)(new y.Tensor("float32",(0,w.softmax)(pt.data),pt.dims),ke),ht=yt[0].tolist(),O=yt[1].tolist().map((se,K)=>({label:Be?Be[se]:`LABEL_${se}`,score:ht[K]}));st.push(O)}return Array.isArray(ye)?st:st[0]}}class fe extends ne{constructor(ye){super(ye),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(ye,{threshold:ke=.5,mask_threshold:Ze=.5,overlap_mask_area_threshold:Ye=.8,label_ids_to_fuse:Xe=null,target_sizes:Be=null,subtask:st=null}={}){if(Array.isArray(ye)&&ye.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const yt=await v(ye),ht=yt.map(He=>[He.height,He.width]),{pixel_values:wt,pixel_mask:O}=await this.processor(yt),se=await this.model({pixel_values:wt,pixel_mask:O});let K=null;if(st!==null)K=this.subtasks_mapping[st];else for(let[He,rt]of Object.entries(this.subtasks_mapping))if(rt in this.processor.image_processor){K=this.processor.image_processor[rt].bind(this.processor.image_processor),st=He;break}const ue=this.model.config.id2label,Oe=[];if(st==="panoptic"||st==="instance"){const He=K(se,ke,Ze,Ye,Xe,Be??ht)[0],rt=He.segmentation;for(const ct of He.segments_info){const Ot=new Uint8ClampedArray(rt.data.length);for(let Ft=0;Ft<rt.data.length;++Ft)rt.data[Ft]===ct.id&&(Ot[Ft]=255);const xt=new b.RawImage(Ot,rt.dims[1],rt.dims[0],1);Oe.push({score:ct.score,label:ue[ct.label_id],mask:xt})}}else if(st==="semantic"){const{segmentation:He,labels:rt}=K(se,Be??ht)[0];for(const ct of rt){const Ot=new Uint8ClampedArray(He.data.length);for(let Ft=0;Ft<He.data.length;++Ft)He.data[Ft]===ct&&(Ot[Ft]=255);const xt=new b.RawImage(Ot,He.dims[1],He.dims[0],1);Oe.push({score:null,label:ue[ct],mask:xt})}}else throw Error(`Subtask ${st} not supported.`);return Oe}}class V extends ne{constructor(ye){super(ye)}async _call(ye,ke,{hypothesis_template:Ze="This is a photo of {}"}={}){const Ye=Array.isArray(ye),Xe=await v(ye),Be=ke.map(O=>Ze.replace("{}",O)),st=this.tokenizer(Be,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:pt}=await this.processor(Xe),yt=await this.model({...st,pixel_values:pt}),ht=this.model.config.model_type==="siglip"?O=>O.sigmoid().data:O=>(0,w.softmax)(O.data),wt=[];for(const O of yt.logits_per_image){const K=[...ht(O)].map((ue,Oe)=>({score:ue,label:ke[Oe]}));K.sort((ue,Oe)=>Oe.score-ue.score),wt.push(K)}return Ye?wt:wt[0]}}class ce extends ne{constructor(ye){super(ye)}async _call(ye,{threshold:ke=.9,percentage:Ze=!1}={}){const Ye=Array.isArray(ye);if(Ye&&ye.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Xe=await v(ye),Be=Ze?null:Xe.map(se=>[se.height,se.width]),{pixel_values:st,pixel_mask:pt}=await this.processor(Xe),yt=await this.model({pixel_values:st,pixel_mask:pt}),ht=this.processor.image_processor.post_process_object_detection(yt,ke,Be),wt=this.model.config.id2label,O=ht.map(se=>se.boxes.map((K,ue)=>({score:se.scores[ue],label:wt[se.classes[ue]],box:Q(K,!Ze)})));return Ye?O:O[0]}}class _e extends ne{constructor(ye){super(ye)}async _call(ye,ke,{threshold:Ze=.1,top_k:Ye=null,percentage:Xe=!1}={}){const Be=Array.isArray(ye),st=await v(ye),pt=this.tokenizer(ke,{padding:!0,truncation:!0}),yt=await this.processor(st),ht=[];for(let wt=0;wt<st.length;++wt){const O=st[wt],se=Xe?null:[[O.height,O.width]],K=yt.pixel_values[wt].unsqueeze_(0),ue=await this.model({...pt,pixel_values:K}),Oe=this.processor.image_processor.post_process_object_detection(ue,Ze,se,!0)[0];let He=Oe.boxes.map((rt,ct)=>({score:Oe.scores[ct],label:ke[Oe.classes[ct]],box:Q(rt,!Xe)})).sort((rt,ct)=>ct.score-rt.score);Ye!==null&&(He=He.slice(0,Ye)),ht.push(He)}return Be?ht:ht[0]}}class De extends ne{constructor(ye){super(ye)}async _call(ye,ke,Ze={}){const Ye=(await v(ye))[0],{pixel_values:Xe}=await this.processor(Ye),Be=`<s_docvqa><s_question>${ke}</s_question><s_answer>`,st=this.tokenizer(Be,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,pt=await this.model.generate({inputs:Xe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:st,...Ze}),ht=this.tokenizer.batch_decode(pt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let wt=null;return ht&&ht.length>=2&&(wt=ht[1].trim()),[{answer:wt}]}}class Ne extends ne{constructor(ke){super(ke);ve(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=ke.vocoder??null}async _call(ke,{speaker_embeddings:Ze=null}={}){return this.processor?this._call_text_to_spectrogram(ke,{speaker_embeddings:Ze}):this._call_text_to_waveform(ke)}async _call_text_to_waveform(ke){const Ze=this.tokenizer(ke,{padding:!0,truncation:!0}),{waveform:Ye}=await this.model(Ze),Xe=this.model.config.sampling_rate;return{audio:Ye.data,sampling_rate:Xe}}async _call_text_to_spectrogram(ke,{speaker_embeddings:Ze}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await F.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Ze=="string"||Ze instanceof URL)&&(Ze=new Float32Array(await(await fetch(Ze)).arrayBuffer())),Ze instanceof Float32Array)Ze=new y.Tensor("float32",Ze,[1,Ze.length]);else if(!(Ze instanceof y.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Ye}=this.tokenizer(ke,{padding:!0,truncation:!0}),{waveform:Xe}=await this.model.generate_speech(Ye,Ze,{vocoder:this.vocoder}),Be=this.processor.feature_extractor.config.sampling_rate;return{audio:Xe.data,sampling_rate:Be}}}class Ke extends ne{constructor(ye){super(ye)}async _call(ye){const ke=await v(ye),Ze=await this.processor(ke),Ye=await this.model(Ze),Xe=[];for(const Be of Ye.reconstruction){const st=Be.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Xe.push(b.RawImage.fromTensor(st))}return Xe.length>1?Xe:Xe[0]}}class Je extends ne{constructor(ye){super(ye)}async _call(ye){const ke=await v(ye),Ze=await this.processor(ke),{predicted_depth:Ye}=await this.model(Ze),Xe=[];for(let Be=0;Be<ke.length;++Be){const st=(0,y.interpolate)(Ye[Be],ke[Be].size.reverse(),"bilinear",!1),pt=st.mul_(255/(0,w.max)(st.data)[0]).to("uint8");Xe.push({predicted_depth:Ye[Be],depth:b.RawImage.fromTensor(pt)})}return Xe.length>1?Xe:Xe[0]}}const lt=Object.freeze({"text-classification":{tokenizer:_.AutoTokenizer,pipeline:le,model:F.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:_.AutoTokenizer,pipeline:N,model:F.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:_.AutoTokenizer,pipeline:H,model:F.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:_.AutoTokenizer,pipeline:Y,model:F.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:_.AutoTokenizer,pipeline:A,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:_.AutoTokenizer,pipeline:g,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:_.AutoTokenizer,pipeline:L,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:_.AutoTokenizer,pipeline:T,model:F.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:_.AutoTokenizer,pipeline:te,model:F.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:he,model:F.AutoModelForAudioClassification,processor:U.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:_.AutoTokenizer,pipeline:we,model:F.AutoModel,processor:U.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:_.AutoTokenizer,pipeline:Ce,model:[F.AutoModelForSpeechSeq2Seq,F.AutoModelForCTC],processor:U.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:_.AutoTokenizer,pipeline:Ne,model:[F.AutoModelForTextToWaveform,F.AutoModelForTextToSpectrogram],processor:[U.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:_.AutoTokenizer,pipeline:xe,model:F.AutoModelForVision2Seq,processor:U.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ze,model:F.AutoModelForImageClassification,processor:U.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:fe,model:[F.AutoModelForImageSegmentation,F.AutoModelForSemanticSegmentation,F.AutoModelForUniversalSegmentation],processor:U.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:_.AutoTokenizer,pipeline:V,model:F.AutoModel,processor:U.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ce,model:F.AutoModelForObjectDetection,processor:U.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:_.AutoTokenizer,pipeline:_e,model:F.AutoModelForZeroShotObjectDetection,processor:U.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:_.AutoTokenizer,pipeline:De,model:F.AutoModelForDocumentQuestionAnswering,processor:U.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Ke,model:F.AutoModelForImageToImage,processor:U.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Je,model:F.AutoModelForDepthEstimation,processor:U.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:_.AutoTokenizer,pipeline:Z,model:F.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:U.AutoProcessor,pipeline:de,model:[F.AutoModelForImageFeatureExtraction,F.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Ge=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function oe(je,ye=null,{progress_callback:ke=null,config:Ze=null,cache_dir:Ye=null,local_files_only:Xe=!1,revision:Be="main",device:st=null,dtype:pt=null,model_file_name:yt=null,session_options:ht={}}={}){je=Ge[je]??je;const wt=lt[je.split("_",1)[0]];if(!wt)throw Error(`Unsupported pipeline: ${je}. Must be one of [${Object.keys(lt)}]`);ye||(ye=wt.default.model,console.log(`No model specified. Using default model: "${ye}".`));const O={progress_callback:ke,config:Ze,cache_dir:Ye,local_files_only:Xe,revision:Be,device:st,dtype:pt,model_file_name:yt,session_options:ht},se=new Map([["tokenizer",wt.tokenizer],["model",wt.model],["processor",wt.processor]]),K=await qe(se,ye,O);K.task=je,(0,W.dispatchCallback)(ke,{status:"ready",task:je,model:ye});const ue=wt.pipeline;return new ue(K)}async function qe(je,ye,ke){const Ze=Object.create(null),Ye=[];for(const[Xe,Be]of je.entries()){if(!Be)continue;let st;Array.isArray(Be)?st=new Promise(async(pt,yt)=>{var wt,O;let ht;for(const se of Be){if(se===null){pt(null);return}try{pt(await se.from_pretrained(ye,ke));return}catch(K){if((wt=K.message)!=null&&wt.includes("Unsupported model type"))ht=K;else if((O=K.message)!=null&&O.includes("Could not locate file"))ht=K;else{yt(K);return}}}yt(ht)}):st=Be.from_pretrained(ye,ke),Ze[Xe]=st,Ye.push(st)}await Promise.all(Ye);for(const[Xe,Be]of Object.entries(Ze))Ze[Xe]=await Be;return Ze}},"./src/tokenizers.js":(ae,$,s)=>{s.r($),s.d($,{AlbertTokenizer:()=>Ps,AutoTokenizer:()=>Mn,BartTokenizer:()=>rr,BertTokenizer:()=>Vs,BlenderbotSmallTokenizer:()=>Fn,BlenderbotTokenizer:()=>yn,BloomTokenizer:()=>Ds,CLIPTokenizer:()=>An,CamembertTokenizer:()=>ot,CodeGenTokenizer:()=>$n,CodeLlamaTokenizer:()=>Ls,CohereTokenizer:()=>Dn,ConvBertTokenizer:()=>ks,DebertaTokenizer:()=>Fs,DebertaV2Tokenizer:()=>Zr,DistilBertTokenizer:()=>os,ElectraTokenizer:()=>It,EsmTokenizer:()=>es,FalconTokenizer:()=>zs,GPT2Tokenizer:()=>fs,GPTNeoXTokenizer:()=>ws,GemmaTokenizer:()=>Hs,Grok1Tokenizer:()=>_n,HerbertTokenizer:()=>us,LlamaTokenizer:()=>kn,M2M100Tokenizer:()=>zt,MBart50Tokenizer:()=>ds,MBartTokenizer:()=>_s,MPNetTokenizer:()=>ri,MarianTokenizer:()=>Bs,MgpstrTokenizer:()=>Xs,MobileBertTokenizer:()=>Os,NllbTokenizer:()=>gn,NougatTokenizer:()=>ts,PreTrainedTokenizer:()=>Lt,Qwen2Tokenizer:()=>fn,RoFormerTokenizer:()=>Gs,RobertaTokenizer:()=>Ks,SiglipTokenizer:()=>In,SpeechT5Tokenizer:()=>ir,SqueezeBertTokenizer:()=>Cs,T5Tokenizer:()=>dr,TokenizerModel:()=>de,VitsTokenizer:()=>bn,Wav2Vec2CTCTokenizer:()=>On,WhisperTokenizer:()=>wn,XLMRobertaTokenizer:()=>Sn,XLMTokenizer:()=>dt,is_chinese_char:()=>Y});var _=s("./src/utils/generic.js"),F=s("./src/utils/core.js"),U=s("./src/utils/hub.js"),J=s("./src/utils/maths.js"),W=s("./src/utils/tensor.js"),w=s("./src/utils/data-structures.js"),M=s("./node_modules/@huggingface/jinja/dist/index.js"),y=s("./src/models/whisper/common_whisper.js");s("./src/utils/constants.js");async function b(Ee,E){const q=await Promise.all([(0,U.getModelJSON)(Ee,"tokenizer.json",!0,E),(0,U.getModelJSON)(Ee,"tokenizer_config.json",!0,E)]);return E.legacy!==null&&(q[1].legacy=E.legacy),q}function v(Ee,E){const q=[];let ie=0;for(const be of Ee.matchAll(E)){const Pe=be[0];ie<be.index&&q.push(Ee.slice(ie,be.index)),Pe.length>0&&q.push(Pe),ie=be.index+Pe.length}return ie<Ee.length&&q.push(Ee.slice(ie)),q}function D(Ee,E=!0){if(Ee.Regex!==void 0){let q=Ee.Regex.replace(/\\([#&~])/g,"$1");for(const[ie,be]of te)q=q.replaceAll(ie,be);return new RegExp(q,"gu")}else if(Ee.String!==void 0){const q=(0,F.escapeRegExp)(Ee.String);return new RegExp(E?q:`(${q})`,"gu")}else return console.warn("Unknown pattern type:",Ee),null}function Q(Ee){return new Map(Object.entries(Ee))}function ne(Ee){const E=Ee.dims;switch(E.length){case 1:return Ee.tolist();case 2:if(E[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Ee.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${E.length}.`)}}function le(Ee){return Ee.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function N(Ee){return Ee.replace(new RegExp("\\p{M}","gu"),"")}function H(Ee){return N(Ee.toLowerCase())}function Y(Ee){return Ee>=19968&&Ee<=40959||Ee>=13312&&Ee<=19903||Ee>=131072&&Ee<=173791||Ee>=173824&&Ee<=177983||Ee>=177984&&Ee<=178207||Ee>=178208&&Ee<=183983||Ee>=63744&&Ee<=64255||Ee>=194560&&Ee<=195103}function L(Ee,E,q){const ie=[];let be=0;for(;be<Ee.length;){if(ie.push(Ee[be]),(E.get(Ee[be])??q)!==q){++be;continue}for(;++be<Ee.length&&(E.get(Ee[be])??q)===q;)E.get(ie.at(-1))!==q&&(ie[ie.length-1]+=Ee[be])}return ie}function A(Ee){return Ee.match(/\S+/g)||[]}const g="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",S=new RegExp(`^[${g}]+$`,"gu"),T=".,!?…。，、।۔،",te=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${T}])]+`,` ?[^\\s${T}]+`]]);class Z{constructor(E){this.content=E.content,this.id=E.id,this.single_word=E.single_word??!1,this.lstrip=E.lstrip??!1,this.rstrip=E.rstrip??!1,this.special=E.special??!1,this.normalized=E.normalized??null}}class de extends _.Callable{constructor(E){super(),this.config=E,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(E,...q){switch(E.type){case"WordPiece":return new he(E);case"Unigram":return new we(E,...q);case"BPE":return new ze(E);default:if(E.vocab)return Array.isArray(E.vocab)?new we(E,...q):new fe(E,...q);throw new Error(`Unknown TokenizerModel type: ${E.type}`)}}_call(E){return E=this.encode(E),this.fuse_unk&&(E=L(E,this.tokens_to_ids,this.unk_token_id)),E}encode(E){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(E){return E.map(q=>this.tokens_to_ids.get(q)??this.unk_token_id)}convert_ids_to_tokens(E){return E.map(q=>this.vocab[q]??this.unk_token)}}class he extends de{constructor(E){super(E),this.tokens_to_ids=Q(E.vocab),this.unk_token_id=this.tokens_to_ids.get(E.unk_token),this.unk_token=E.unk_token,this.max_input_chars_per_word=E.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[q,ie]of this.tokens_to_ids)this.vocab[ie]=q}encode(E){const q=[];for(const ie of E){const be=[...ie];if(be.length>this.max_input_chars_per_word){q.push(this.unk_token);continue}let Pe=!1,Ve=0;const ut=[];for(;Ve<be.length;){let _t=be.length,mt=null;for(;Ve<_t;){let it=be.slice(Ve,_t).join("");if(Ve>0&&(it=this.config.continuing_subword_prefix+it),this.tokens_to_ids.has(it)){mt=it;break}--_t}if(mt===null){Pe=!0;break}ut.push(mt),Ve=_t}Pe?q.push(this.unk_token):q.push(...ut)}return q}}class we extends de{constructor(E,q){super(E);const ie=E.vocab.length;this.vocab=new Array(ie),this.scores=new Array(ie);for(let be=0;be<ie;++be){const Pe=E.vocab[be];this.vocab[be]=Pe[0],this.scores[be]=Pe[1]}this.unk_token_id=E.unk_id,this.unk_token=this.vocab[E.unk_id],this.tokens_to_ids=new Map(this.vocab.map((be,Pe)=>[be,Pe])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=q.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,J.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new w.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(E){const q=E.chars,ie=1;let be=0;for(;be<q.length;){let Pe=!1;const Ve=q.slice(be).join(""),ut=this.trie.commonPrefixSearch(Ve);for(const _t of ut){const mt=this.tokens_to_ids.get(_t),it=this.scores[mt],Ct=(0,F.len)(_t);E.insert(be,Ct,it,mt),!Pe&&Ct===ie&&(Pe=!0)}Pe||E.insert(be,ie,this.unk_score,this.unk_token_id),be+=ie}}tokenize(E){const q=new w.TokenLattice(E,this.bos_token_id,this.eos_token_id);return this.populateNodes(q),q.tokens()}encode(E){const q=[];for(const ie of E){const be=this.tokenize(ie);q.push(...be)}return q}}const Ce=(()=>{const Ee=[...Array.from({length:94},(be,Pe)=>Pe+33),...Array.from({length:12},(be,Pe)=>Pe+161),...Array.from({length:82},(be,Pe)=>Pe+174)],E=Ee.slice();let q=0;for(let be=0;be<256;++be)Ee.includes(be)||(Ee.push(be),E.push(256+q),q+=1);const ie=E.map(be=>String.fromCharCode(be));return Object.fromEntries(Ee.map((be,Pe)=>[be,ie[Pe]]))})(),xe=(0,F.reverseDictionary)(Ce);class ze extends de{constructor(E){super(E),this.tokens_to_ids=Q(E.vocab),this.unk_token_id=this.tokens_to_ids.get(E.unk_token),this.unk_token=E.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ie,be]of this.tokens_to_ids)this.vocab[be]=ie;const q=Array.isArray(E.merges[0]);this.merges=q?E.merges:E.merges.map(ie=>ie.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ie,be)=>[JSON.stringify(ie),be])),this.end_of_word_suffix=E.end_of_word_suffix,this.continuing_subword_suffix=E.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(E){if(E.length===0)return[];const q=this.cache.get(E);if(q!==void 0)return q;const ie=Array.from(E);this.end_of_word_suffix&&(ie[ie.length-1]+=this.end_of_word_suffix);let be=[];if(ie.length>1){const Pe=new w.PriorityQueue((_t,mt)=>_t.score<mt.score);let Ve={token:ie[0],bias:0,prev:null,next:null},ut=Ve;for(let _t=1;_t<ie.length;++_t){const mt={bias:_t/ie.length,token:ie[_t],prev:ut,next:null};ut.next=mt,this._add_node(Pe,ut),ut=mt}for(;!Pe.isEmpty();){const _t=Pe.pop();if(_t.deleted||!_t.next||_t.next.deleted)continue;if(_t.deleted=!0,_t.next.deleted=!0,_t.prev){const it={..._t.prev};_t.prev.deleted=!0,_t.prev=it,it.prev?it.prev.next=it:Ve=it}const mt={token:_t.token+_t.next.token,bias:_t.bias,prev:_t.prev,next:_t.next.next};mt.prev?(mt.prev.next=mt,this._add_node(Pe,mt.prev)):Ve=mt,mt.next&&(mt.next.prev=mt,this._add_node(Pe,mt))}for(let _t=Ve;_t!==null;_t=_t.next)be.push(_t.token)}else be=ie;if(this.continuing_subword_suffix)for(let Pe=0;Pe<be.length-1;++Pe)be[Pe]+=this.continuing_subword_suffix;return this.cache.set(E,be),be}_add_node(E,q){const ie=this.bpe_ranks.get(JSON.stringify([q.token,q.next.token]));ie!==void 0&&(q.score=ie+q.bias,E.push(q))}encode(E){const q=[];for(const ie of E){if(this.ignore_merges&&this.tokens_to_ids.has(ie)){q.push(ie);continue}const be=this.bpe(ie);for(const Pe of be)if(this.tokens_to_ids.has(Pe))q.push(Pe);else if(this.byte_fallback){const Ve=Array.from(this.text_encoder.encode(Pe)).map(ut=>`<0x${ut.toString(16).toUpperCase().padStart(2,"0")}>`);Ve.every(ut=>this.tokens_to_ids.has(ut))?q.push(...Ve):q.push(this.unk_token)}else q.push(this.unk_token)}return q}}class fe extends de{constructor(E,q){super(E),this.tokens_to_ids=Q(q.target_lang?E.vocab[q.target_lang]:E.vocab),this.bos_token=q.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=q.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=q.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=q.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ie,be]of this.tokens_to_ids)this.vocab[be]=ie}encode(E){return E}}class V extends _.Callable{constructor(E){super(),this.config=E}static fromConfig(E){if(E===null)return null;switch(E.type){case"BertNormalizer":return new qe(E);case"Precompiled":return new wr(E);case"Sequence":return new oe(E);case"Replace":return new ce(E);case"NFC":return new _e(E);case"NFKC":return new De(E);case"NFKD":return new Ne(E);case"Strip":return new Ke(E);case"StripAccents":return new Je(E);case"Lowercase":return new lt(E);case"Prepend":return new Ge(E);default:throw new Error(`Unknown Normalizer type: ${E.type}`)}}normalize(E){throw Error("normalize should be implemented in subclass.")}_call(E){return this.normalize(E)}}class ce extends V{normalize(E){const q=D(this.config.pattern);return q===null?E:E.replaceAll(q,this.config.content)}}class _e extends V{normalize(E){return E=E.normalize("NFC"),E}}class De extends V{normalize(E){return E=E.normalize("NFKC"),E}}class Ne extends V{normalize(E){return E=E.normalize("NFKD"),E}}class Ke extends V{normalize(E){return this.config.strip_left&&this.config.strip_right?E=E.trim():(this.config.strip_left&&(E=E.trimStart()),this.config.strip_right&&(E=E.trimEnd())),E}}class Je extends V{normalize(E){return E=N(E),E}}class lt extends V{normalize(E){return E=E.toLowerCase(),E}}class Ge extends V{normalize(E){return E=this.config.prepend+E,E}}class oe extends V{constructor(E){super(E),this.normalizers=E.normalizers.map(q=>V.fromConfig(q))}normalize(E){return this.normalizers.reduce((q,ie)=>ie.normalize(q),E)}}class qe extends V{_tokenize_chinese_chars(E){const q=[];for(let ie=0;ie<E.length;++ie){const be=E[ie],Pe=be.charCodeAt(0);Y(Pe)?(q.push(" "),q.push(be),q.push(" ")):q.push(be)}return q.join("")}stripAccents(E){return E.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(E){switch(E){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(E)}}_clean_text(E){const q=[];for(const ie of E){const be=ie.charCodeAt(0);be===0||be===65533||this._is_control(ie)||(/^\s$/.test(ie)?q.push(" "):q.push(ie))}return q.join("")}normalize(E){return this.config.clean_text&&(E=this._clean_text(E)),this.config.handle_chinese_chars&&(E=this._tokenize_chinese_chars(E)),this.config.lowercase?(E=E.toLowerCase(),this.config.strip_accents!==!1&&(E=this.stripAccents(E))):this.config.strip_accents&&(E=this.stripAccents(E)),E}}class je extends _.Callable{static fromConfig(E){if(E===null)return null;switch(E.type){case"BertPreTokenizer":return new ye(E);case"Sequence":return new Or(E);case"Whitespace":return new Cr(E);case"WhitespaceSplit":return new Xr(E);case"Metaspace":return new At(E);case"ByteLevel":return new ke(E);case"Split":return new Ze(E);case"Punctuation":return new Ye(E);case"Digits":return new Xe(E);case"Replace":return new is(E);default:throw new Error(`Unknown PreTokenizer type: ${E.type}`)}}pre_tokenize_text(E,q){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(E,q){return(Array.isArray(E)?E.map(ie=>this.pre_tokenize_text(ie,q)):this.pre_tokenize_text(E,q)).flat()}_call(E,q){return this.pre_tokenize(E,q)}}class ye extends je{constructor(E){super(),this.pattern=new RegExp(`[^\\s${g}]+|[${g}]`,"gu")}pre_tokenize_text(E,q){return E.trim().match(this.pattern)||[]}}class ke extends je{constructor(E){super(),this.config=E,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Ce,this.text_encoder=new TextEncoder}pre_tokenize_text(E,q){return this.add_prefix_space&&!E.startsWith(" ")&&(E=" "+E),(this.use_regex?E.match(this.pattern)||[]:[E]).map(be=>Array.from(this.text_encoder.encode(be),Pe=>this.byte_encoder[Pe]).join(""))}}class Ze extends je{constructor(E){super(),this.config=E,this.pattern=D(this.config.pattern,this.config.invert)}pre_tokenize_text(E,q){var ie;return this.pattern===null?[]:this.config.invert?E.match(this.pattern)||[]:((ie=this.config.behavior)==null?void 0:ie.toLowerCase())==="removed"?E.split(this.pattern).filter(be=>be):v(E,this.pattern)}}class Ye extends je{constructor(E){super(),this.config=E,this.pattern=new RegExp(`[^${g}]+|[${g}]+`,"gu")}pre_tokenize_text(E,q){return E.match(this.pattern)||[]}}class Xe extends je{constructor(E){super(),this.config=E;const q=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(q,"gu")}pre_tokenize_text(E,q){return E.match(this.pattern)||[]}}class Be extends _.Callable{constructor(E){super(),this.config=E}static fromConfig(E){if(E===null)return null;switch(E.type){case"TemplateProcessing":return new yt(E);case"ByteLevel":return new ht(E);case"RobertaProcessing":return new pt(E);case"BertProcessing":return new st(E);case"Sequence":return new wt(E);default:throw new Error(`Unknown PostProcessor type: ${E.type}`)}}post_process(E,...q){throw Error("post_process should be implemented in subclass.")}_call(E,...q){return this.post_process(E,...q)}}class st extends Be{constructor(E){super(E),this.cls=E.cls[0],this.sep=E.sep[0]}post_process(E,q=null,{add_special_tokens:ie=!0}={}){ie&&(E=(0,F.mergeArrays)([this.cls],E,[this.sep]));let be=new Array(E.length).fill(0);if(q!==null){const Pe=ie&&this instanceof pt?[this.sep]:[],Ve=ie?[this.sep]:[];E=(0,F.mergeArrays)(E,Pe,q,Ve),be=(0,F.mergeArrays)(be,new Array(q.length+Pe.length+Ve.length).fill(1))}return{tokens:E,token_type_ids:be}}}class pt extends st{}class yt extends Be{constructor(E){super(E),this.single=E.single,this.pair=E.pair}post_process(E,q=null,{add_special_tokens:ie=!0}={}){const be=q===null?this.single:this.pair;let Pe=[],Ve=[];for(const ut of be)"SpecialToken"in ut?ie&&(Pe.push(ut.SpecialToken.id),Ve.push(ut.SpecialToken.type_id)):"Sequence"in ut&&(ut.Sequence.id==="A"?(Pe=(0,F.mergeArrays)(Pe,E),Ve=(0,F.mergeArrays)(Ve,new Array(E.length).fill(ut.Sequence.type_id))):ut.Sequence.id==="B"&&(Pe=(0,F.mergeArrays)(Pe,q),Ve=(0,F.mergeArrays)(Ve,new Array(q.length).fill(ut.Sequence.type_id))));return{tokens:Pe,token_type_ids:Ve}}}class ht extends Be{post_process(E,q=null){return q&&(E=(0,F.mergeArrays)(E,q)),{tokens:E}}}class wt extends Be{constructor(E){super(E),this.processors=E.processors.map(q=>Be.fromConfig(q))}post_process(E,q=null,ie={}){let be;for(const Pe of this.processors)if(Pe instanceof ht)E=Pe.post_process(E).tokens,q&&(q=Pe.post_process(q).tokens);else{const Ve=Pe.post_process(E,q,ie);E=Ve.tokens,be=Ve.token_type_ids}return{tokens:E,token_type_ids:be}}}class O extends _.Callable{constructor(E){super(),this.config=E,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=E.trim_offsets}static fromConfig(E){if(E===null)return null;switch(E.type){case"WordPiece":return new He(E);case"Metaspace":return new sr(E);case"ByteLevel":return new rt(E);case"Replace":return new se(E);case"ByteFallback":return new K(E);case"Fuse":return new ue(E);case"Strip":return new Oe(E);case"Sequence":return new Ot(E);case"CTC":return new ct(E);case"BPEDecoder":return new xt(E);default:throw new Error(`Unknown Decoder type: ${E.type}`)}}_call(E){return this.decode(E)}decode(E){return this.decode_chain(E).join("")}decode_chain(E){throw Error("`decode_chain` should be implemented in subclass.")}}class se extends O{decode_chain(E){const q=D(this.config.pattern);return q===null?E:E.map(ie=>ie.replaceAll(q,this.config.content))}}class K extends O{constructor(E){super(E),this.text_decoder=new TextDecoder}decode_chain(E){const q=[];let ie=[];for(const be of E){let Pe=null;if(be.length===6&&be.startsWith("<0x")&&be.endsWith(">")){const Ve=parseInt(be.slice(3,5),16);isNaN(Ve)||(Pe=Ve)}if(Pe!==null)ie.push(Pe);else{if(ie.length>0){const Ve=this.text_decoder.decode(Uint8Array.from(ie));q.push(Ve),ie=[]}q.push(be)}}if(ie.length>0){const be=this.text_decoder.decode(Uint8Array.from(ie));q.push(be),ie=[]}return q}}class ue extends O{decode_chain(E){return[E.join("")]}}class Oe extends O{constructor(E){super(E),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(E){return E.map(q=>{let ie=0;for(let Pe=0;Pe<this.start&&q[Pe]===this.content;++Pe){ie=Pe+1;continue}let be=q.length;for(let Pe=0;Pe<this.stop;++Pe){const Ve=q.length-Pe-1;if(q[Ve]===this.content){be=Ve;continue}else break}return q.slice(ie,be)})}}class He extends O{constructor(E){super(E),this.cleanup=E.cleanup}decode_chain(E){return E.map((q,ie)=>(ie!==0&&(q.startsWith(this.config.prefix)?q=q.replace(this.config.prefix,""):q=" "+q),this.cleanup&&(q=le(q)),q))}}class rt extends O{constructor(E){super(E),this.byte_decoder=xe,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(E){const q=E.join(""),ie=new Uint8Array([...q].map(Pe=>this.byte_decoder[Pe]));return this.text_decoder.decode(ie)}decode_chain(E){const q=[];let ie=[];for(const be of E)this.added_tokens.find(Pe=>Pe.content===be)!==void 0?(ie.length>0&&(q.push(this.convert_tokens_to_string(ie)),ie=[]),q.push(be)):ie.push(be);return ie.length>0&&q.push(this.convert_tokens_to_string(ie)),q}}class ct extends O{constructor(E){super(E),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(E){if(E.length===0)return"";const q=[E[0]];for(let Pe=1;Pe<E.length;++Pe)E[Pe]!==q.at(-1)&&q.push(E[Pe]);let be=q.filter(Pe=>Pe!==this.pad_token).join("");return this.cleanup&&(be=le(be).replaceAll(this.word_delimiter_token," ").trim()),be}decode_chain(E){return[this.convert_tokens_to_string(E)]}}class Ot extends O{constructor(E){super(E),this.decoders=E.decoders.map(q=>O.fromConfig(q))}decode_chain(E){return this.decoders.reduce((q,ie)=>ie.decode_chain(q),E)}}class xt extends O{constructor(E){super(E),this.suffix=this.config.suffix}decode_chain(E){return E.map((q,ie)=>q.replaceAll(this.suffix,ie===E.length-1?"":" "))}}class Ft extends O{decode_chain(E){let q="";for(let ie=1;ie<E.length;ie+=2)q+=E[ie];return[q]}}class At extends je{constructor(E){super(),this.addPrefixSpace=E.add_prefix_space,this.replacement=E.replacement,this.strRep=E.str_rep||this.replacement,this.prepend_scheme=E.prepend_scheme??"always"}pre_tokenize_text(E,{section_index:q=void 0}={}){let ie=E.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ie.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&q===0)&&(ie=this.strRep+ie),[ie]}}class sr extends O{constructor(E){super(E),this.addPrefixSpace=E.add_prefix_space,this.replacement=E.replacement}decode_chain(E){const q=[];for(let ie=0;ie<E.length;++ie){let be=E[ie].replaceAll(this.replacement," ");this.addPrefixSpace&&ie==0&&be.startsWith(" ")&&(be=be.substring(1)),q.push(be)}return q}}class wr extends V{constructor(E){super(E),this.charsmap=E.precompiled_charsmap}normalize(E){return E=E.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),E=E.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),E.includes("～")?E=E.split("～").map(ie=>ie.normalize("NFKC")).join("～"):E=E.normalize("NFKC"),E}}class Or extends je{constructor(E){super(),this.tokenizers=E.pretokenizers.map(q=>je.fromConfig(q))}pre_tokenize_text(E,q){return this.tokenizers.reduce((ie,be)=>be.pre_tokenize(ie,q),[E])}}class Cr extends je{constructor(E){super()}pre_tokenize_text(E,q){return E.match(/\w+|[^\w\s]+/g)||[]}}class Xr extends je{constructor(E){super()}pre_tokenize_text(E,q){return A(E)}}class is extends je{constructor(E){super(),this.config=E,this.pattern=D(this.config.pattern),this.content=this.config.content}pre_tokenize_text(E,q){return this.pattern===null?[E]:[E.replaceAll(this.pattern,this.config.content)]}}const Ws=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Is(Ee,E,q,ie){for(const be of Object.keys(Ee)){const Pe=E-Ee[be].length,Ve=q(be),ut=new Array(Pe).fill(Ve);Ee[be]=ie==="right"?(0,F.mergeArrays)(Ee[be],ut):(0,F.mergeArrays)(ut,Ee[be])}}function mn(Ee,E){for(const q of Object.keys(Ee))Ee[q].length=E}class Lt extends _.Callable{constructor(q,ie){super();ve(this,"return_token_type_ids",!1);ve(this,"padding_side","right");this._tokenizer_config=ie,this.normalizer=V.fromConfig(q.normalizer),this.pre_tokenizer=je.fromConfig(q.pre_tokenizer),this.model=de.fromConfig(q.model,ie),this.post_processor=Be.fromConfig(q.post_processor),this.decoder=O.fromConfig(q.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const be of q.added_tokens){const Pe=new Z(be);this.added_tokens.push(Pe),this.model.tokens_to_ids.set(Pe.content,Pe.id),this.model.vocab[Pe.id]=Pe.content,Pe.special&&(this.special_tokens.push(Pe.content),this.all_special_ids.push(Pe.id))}if(this.additional_special_tokens=ie.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((be,Pe)=>Pe.content.length-be.content.length).map(be=>`${be.lstrip?"\\s*":""}(${(0,F.escapeRegExp)(be.content)})${be.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=ie.model_max_length,this.remove_space=ie.remove_space,this.clean_up_tokenization_spaces=ie.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=ie.do_lowercase_and_remove_accent??!1,ie.padding_side&&(this.padding_side=ie.padding_side),this.legacy=!1,this.chat_template=ie.chat_template??null,Array.isArray(this.chat_template)){const be=Object.create(null);for(const{name:Pe,template:Ve}of this.chat_template){if(typeof Pe!="string"||typeof Ve!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');be[Pe]=Ve}this.chat_template=be}this._compiled_template_cache=new Map}getToken(...q){for(const ie of q){const be=this._tokenizer_config[ie];if(be)if(typeof be=="object"){if(be.__type==="AddedToken")return be.content;throw Error(`Unknown token: ${be}`)}else return be}return null}static async from_pretrained(q,{progress_callback:ie=null,config:be=null,cache_dir:Pe=null,local_files_only:Ve=!1,revision:ut="main",legacy:_t=null}={}){const mt=await b(q,{progress_callback:ie,config:be,cache_dir:Pe,local_files_only:Ve,revision:ut,legacy:_t});return new this(...mt)}_call(q,{text_pair:ie=null,add_special_tokens:be=!0,padding:Pe=!1,truncation:Ve=null,max_length:ut=null,return_tensor:_t=!0,return_token_type_ids:mt=null}={}){const it=Array.isArray(q);let Ct;if(it){if(q.length===0)throw Error("text array must be non-empty");if(ie!==null){if(Array.isArray(ie)){if(q.length!==ie.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Ct=q.map((nr,Se)=>this._encode_plus(nr,{text_pair:ie[Se],add_special_tokens:be,return_token_type_ids:mt}))}else Ct=q.map(nr=>this._encode_plus(nr,{add_special_tokens:be,return_token_type_ids:mt}))}else{if(q==null)throw Error("text may not be null or undefined");if(Array.isArray(ie))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Ct=[this._encode_plus(q,{text_pair:ie,add_special_tokens:be,return_token_type_ids:mt})]}if(ut===null?Pe==="max_length"?ut=this.model_max_length:ut=(0,J.max)(Ct.map(nr=>nr.input_ids.length))[0]:Ve||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),ut=Math.min(ut,this.model_max_length??1/0),Pe||Ve)for(let nr=0;nr<Ct.length;++nr)Ct[nr].input_ids.length!==ut&&(Ct[nr].input_ids.length>ut?Ve&&mn(Ct[nr],ut):Pe&&Is(Ct[nr],ut,Se=>Se==="input_ids"?this.pad_token_id:0,this.padding_side));const hr={};if(_t){if(!(Pe&&Ve)&&Ct.some(Se=>{var yr;for(const Fr of Object.keys(Se))if(Se[Fr].length!==((yr=Ct[0][Fr])==null?void 0:yr.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const nr=[Ct.length,Ct[0].input_ids.length];for(const Se of Object.keys(Ct[0]))hr[Se]=new W.Tensor("int64",BigInt64Array.from(Ct.flatMap(yr=>yr[Se]).map(BigInt)),nr)}else{for(const nr of Object.keys(Ct[0]))hr[nr]=Ct.map(Se=>Se[nr]);if(!it)for(const nr of Object.keys(hr))hr[nr]=hr[nr][0]}return hr}_encode_text(q){return q===null?null:(this.added_tokens_regex?q.split(this.added_tokens_regex).filter(Pe=>Pe):[q]).map((Pe,Ve)=>{if(this.added_tokens.find(_t=>_t.content===Pe)!==void 0)return Pe;{if(this.remove_space===!0&&(Pe=Pe.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Pe=H(Pe)),this.normalizer!==null&&(Pe=this.normalizer(Pe)),Pe.length===0)return[];const _t=this.pre_tokenizer!==null?this.pre_tokenizer(Pe,{section_index:Ve}):[Pe];return this.model(_t)}}).flat()}_encode_plus(q,{text_pair:ie=null,add_special_tokens:be=!0,return_token_type_ids:Pe=null}={}){const{tokens:Ve,token_type_ids:ut}=this._tokenize_helper(q,{pair:ie,add_special_tokens:be}),_t=this.model.convert_tokens_to_ids(Ve),mt={input_ids:_t,attention_mask:new Array(_t.length).fill(1)};return(Pe??this.return_token_type_ids)&&ut&&(mt.token_type_ids=ut),mt}_tokenize_helper(q,{pair:ie=null,add_special_tokens:be=!1}={}){const Pe=this._encode_text(q),Ve=this._encode_text(ie);return this.post_processor?this.post_processor(Pe,Ve,{add_special_tokens:be}):{tokens:(0,F.mergeArrays)(Pe??[],Ve??[])}}tokenize(q,{pair:ie=null,add_special_tokens:be=!1}={}){return this._tokenize_helper(q,{pair:ie,add_special_tokens:be}).tokens}encode(q,{text_pair:ie=null,add_special_tokens:be=!0,return_token_type_ids:Pe=null}={}){return this._encode_plus(q,{text_pair:ie,add_special_tokens:be,return_token_type_ids:Pe}).input_ids}batch_decode(q,ie={}){return q instanceof W.Tensor&&(q=q.tolist()),q.map(be=>this.decode(be,ie))}decode(q,ie={}){if(q instanceof W.Tensor&&(q=ne(q)),!Array.isArray(q)||q.length===0||!(0,F.isIntegralNumber)(q[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(q,ie)}decode_single(q,{skip_special_tokens:ie=!1,clean_up_tokenization_spaces:be=null}){let Pe=this.model.convert_ids_to_tokens(q);ie&&(Pe=Pe.filter(ut=>!this.special_tokens.includes(ut)));let Ve=this.decoder?this.decoder(Pe):Pe.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Ve=Ve.replaceAll(this.decoder.end_of_word_suffix," "),ie&&(Ve=Ve.trim())),(be??this.clean_up_tokenization_spaces)&&(Ve=le(Ve)),Ve}get_chat_template({chat_template:q=null,tools:ie=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const be=this.chat_template;if(q!==null&&Object.hasOwn(be,q))q=be[q];else if(q===null)if(ie!==null&&"tool_use"in be)q=be.tool_use;else if("default"in be)q=be.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(be).sort()}.`)}else if(q===null)if(this.chat_template)q=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return q}apply_chat_template(q,{tools:ie=null,documents:be=null,chat_template:Pe=null,add_generation_prompt:Ve=!1,tokenize:ut=!0,padding:_t=!1,truncation:mt=!1,max_length:it=null,return_tensor:Ct=!0,return_dict:hr=!1,tokenizer_kwargs:nr={},...Se}={}){if(Pe=this.get_chat_template({chat_template:Pe,tools:ie}),typeof Pe!="string")throw Error(`chat_template must be a string, but got ${typeof Pe}`);let yr=this._compiled_template_cache.get(Pe);yr===void 0&&(yr=new M.Template(Pe),this._compiled_template_cache.set(Pe,yr));const Fr=Object.create(null);for(const Jr of Ws){const Dt=this.getToken(Jr);Dt&&(Fr[Jr]=Dt)}const Qr=yr.render({messages:q,add_generation_prompt:Ve,tools:ie,documents:be,...Fr,...Se});if(ut){const Jr=this._call(Qr,{add_special_tokens:!1,padding:_t,truncation:mt,max_length:it,return_tensor:Ct,...nr});return hr?Jr:Jr.input_ids}return Qr}}class Vs extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class Ps extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class Os extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class Cs extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class Fs extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class Zr extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class us extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class ks extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class Gs extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class os extends Lt{}class ot extends Lt{}class dt extends Lt{constructor(q,ie){super(q,ie);ve(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class It extends Lt{constructor(){super(...arguments);ve(this,"return_token_type_ids",!0)}}class dr extends Lt{}class fs extends Lt{}class rr extends Lt{}class _s extends Lt{constructor(E,q){super(E,q),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ie=>this.languageRegex.test(ie)),this.lang_to_token=ie=>ie}_build_translation_inputs(E,q,ie){return qs(this,E,q,ie)}}class ds extends _s{}class Ks extends Lt{}class Ds extends Lt{}const gs="▁";class kn extends Lt{constructor(q,ie){super(q,ie);ve(this,"padding_side","left");this.legacy=ie.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new At({replacement:gs,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(q){if(q===null)return null;if(this.legacy||q.length===0)return super._encode_text(q);let ie=super._encode_text(gs+q.replaceAll(gs," "));return ie.length>1&&ie[0]===gs&&this.special_tokens.includes(ie[1])&&(ie=ie.slice(1)),ie}}class Ls extends Lt{}class Sn extends Lt{}class ri extends Lt{}class zs extends Lt{}class ws extends Lt{}class es extends Lt{}class fn extends Lt{}class Hs extends Lt{}class _n extends Lt{}function qs(Ee,E,q,ie){if(!("language_codes"in Ee)||!Array.isArray(Ee.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Ee)||!(Ee.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Ee)||typeof Ee.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const be=ie.src_lang,Pe=ie.tgt_lang;if(!Ee.language_codes.includes(Pe))throw new Error(`Target language code "${Pe}" is not valid. Must be one of: {${Ee.language_codes.join(", ")}}`);if(be!==void 0){if(!Ee.language_codes.includes(be))throw new Error(`Source language code "${be}" is not valid. Must be one of: {${Ee.language_codes.join(", ")}}`);for(const Ve of Ee.post_processor.config.single)if("SpecialToken"in Ve&&Ee.languageRegex.test(Ve.SpecialToken.id)){Ve.SpecialToken.id=Ee.lang_to_token(be);break}}return ie.forced_bos_token_id=Ee.model.convert_tokens_to_ids([Ee.lang_to_token(Pe)])[0],Ee._call(E,q)}class gn extends Lt{constructor(E,q){super(E,q),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ie=>this.languageRegex.test(ie)),this.lang_to_token=ie=>ie}_build_translation_inputs(E,q,ie){return qs(this,E,q,ie)}}class zt extends Lt{constructor(E,q){super(E,q),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ie=>this.languageRegex.test(ie)).map(ie=>ie.slice(2,-2)),this.lang_to_token=ie=>`__${ie}__`}_build_translation_inputs(E,q,ie){return qs(this,E,q,ie)}}class wn extends Lt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(E,{return_timestamps:q=!1,return_language:ie=!1,time_precision:be=null,force_full_sequences:Pe=!0}={}){if(be===null)throw Error("Must specify time_precision");let Ve=null;const ut=q==="word";function _t(){return{language:Ve,timestamp:[null,null],text:""}}const mt=[];let it=_t(),Ct=0;const hr=this.timestamp_begin,Se=hr+1500;let yr=[],Fr=[],Qr=!1,Jr=null;const Dt=new Set(this.all_special_ids);for(const Zt of E){const _r=Zt.tokens,Tt=ut?Zt.token_timestamps:null;let or=null,bs=hr;if("stride"in Zt){const[bt,Sr,Le]=Zt.stride;if(Ct-=Sr,Jr=bt-Le,Sr&&(bs=Sr/be+hr),Le)for(let gt=_r.length-1;gt>=0;--gt){const rs=Number(_r[gt]);if(rs>=hr){if(or!==null&&(rs-hr)*be<Jr)break;or=rs}}}let Dr=[],qr=[];for(let bt=0;bt<_r.length;++bt){const Sr=Number(_r[bt]);if(Dt.has(Sr)){const Le=this.decode([Sr]),gt=y.WHISPER_LANGUAGE_MAPPING.get(Le.slice(2,-2));if(gt!==void 0){if(Ve!==null&&gt!==Ve&&!q){yr.push(Dr);const rs=this.findLongestCommonSequence(yr)[0],Qs=this.decode(rs);it.text=Qs,mt.push(it),yr=[],Dr=[],it=_t()}Ve=it.language=gt}}else if(Sr>=hr&&Sr<=Se){const Le=(Sr-hr)*be+Ct,gt=(0,J.round)(Le,2);if(or!==null&&Sr>=or)Qr=!0;else if(Qr||yr.length>0&&Sr<bs)Qr=!1;else if(it.timestamp[0]===null)it.timestamp[0]=gt;else if(gt!==it.timestamp[0]){it.timestamp[1]=gt,yr.push(Dr),ut&&Fr.push(qr);const[rs,Qs]=this.findLongestCommonSequence(yr,Fr),si=this.decode(rs);it.text=si,ut&&(it.words=this.collateWordTimestamps(rs,Qs,Ve)),mt.push(it),yr=[],Dr=[],Fr=[],qr=[],it=_t()}}else if(Dr.push(Sr),ut){let Le=(0,J.round)(Tt[bt]+Ct,2),gt;if(bt+1<Tt.length){gt=(0,J.round)(Tt[bt+1]+Ct,2);const rs=this.decode([Sr]);S.test(rs)&&(gt=(0,J.round)(Math.min(Le+be,gt),2))}else gt=null;qr.push([Le,gt])}}if("stride"in Zt){const[bt,Sr,Le]=Zt.stride;Ct+=bt-Le}Dr.length>0?(yr.push(Dr),ut&&Fr.push(qr)):yr.every(bt=>bt.length===0)&&(it=_t(),yr=[],Dr=[],Fr=[],qr=[])}if(yr.length>0){if(Pe&&q)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Zt,_r]=this.findLongestCommonSequence(yr,Fr),Tt=this.decode(Zt);it.text=Tt,ut&&(it.words=this.collateWordTimestamps(Zt,_r,Ve)),mt.push(it)}let Rr=Object.create(null);const ys=mt.map(Zt=>Zt.text).join("");if(q||ie){for(let Zt=0;Zt<mt.length;++Zt){const _r=mt[Zt];q||delete _r.timestamp,ie||delete _r.language}if(ut){const Zt=[];for(const _r of mt)for(const Tt of _r.words)Zt.push(Tt);Rr={chunks:Zt}}else Rr={chunks:mt}}return[ys,Rr]}findLongestCommonSequence(E,q=null){let ie=E[0],be=ie.length,Pe=[];const Ve=Array.isArray(q)&&q.length>0;let ut=Ve?[]:null,_t=Ve?q[0]:null;for(let mt=1;mt<E.length;++mt){const it=E[mt];let Ct=0,hr=[be,be,0,0];const nr=it.length;for(let Rr=1;Rr<be+nr;++Rr){const ys=Math.max(0,be-Rr),Zt=Math.min(be,be+nr-Rr),_r=ie.slice(ys,Zt),Tt=Math.max(0,Rr-be),or=Math.min(nr,Rr),bs=it.slice(Tt,or);if(_r.length!==bs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Dr;Ve?Dr=_r.filter((Sr,Le)=>Sr===bs[Le]&&_t[ys+Le]<=q[mt][Tt+Le]).length:Dr=_r.filter((Sr,Le)=>Sr===bs[Le]).length;const qr=Rr/1e4,bt=Dr/Rr+qr;Dr>1&&bt>Ct&&(Ct=bt,hr=[ys,Zt,Tt,or])}const[Se,yr,Fr,Qr]=hr,Jr=Math.floor((yr+Se)/2),Dt=Math.floor((Qr+Fr)/2);Pe.push(...ie.slice(0,Jr)),ie=it.slice(Dt),be=ie.length,Ve&&(ut.push(..._t.slice(0,Jr)),_t=q[mt].slice(Dt))}return Pe.push(...ie),Ve?(ut.push(..._t),[Pe,ut]):[Pe,[]]}collateWordTimestamps(E,q,ie){const[be,Pe,Ve]=this.combineTokensIntoWords(E,ie),ut=[];for(let _t=0;_t<be.length;++_t){const mt=Ve[_t];ut.push({text:be[_t],timestamp:[q[mt.at(0)][0],q[mt.at(-1)][1]]})}return ut}combineTokensIntoWords(E,q,ie=`"'“¡¿([{-`,be=`"'.。,，!！?？:：”)]}、`){q=q??"english";let Pe,Ve,ut;return["chinese","japanese","thai","lao","myanmar"].includes(q)?[Pe,Ve,ut]=this.splitTokensOnUnicode(E):[Pe,Ve,ut]=this.splitTokensOnSpaces(E),this.mergePunctuations(Pe,Ve,ut,ie,be)}decode(E,q){let ie;return q!=null&&q.decode_with_timestamps?(E instanceof W.Tensor&&(E=ne(E)),ie=this.decodeWithTimestamps(E,q)):ie=super.decode(E,q),ie}decodeWithTimestamps(E,q){const ie=(q==null?void 0:q.time_precision)??.02,be=Array.from(this.all_special_ids).at(-1)+1;let Pe=[[]];for(let Ve of E)if(Ve=Number(Ve),Ve>=be){const ut=((Ve-be)*ie).toFixed(2);Pe.push(`<|${ut}|>`),Pe.push([])}else Pe[Pe.length-1].push(Ve);return Pe=Pe.map(Ve=>typeof Ve=="string"?Ve:super.decode(Ve,q)),Pe.join("")}splitTokensOnUnicode(E){const q=this.decode(E,{decode_with_timestamps:!0}),ie="�",be=[],Pe=[],Ve=[];let ut=[],_t=[],mt=0;for(let it=0;it<E.length;++it){const Ct=E[it];ut.push(Ct),_t.push(it);const hr=this.decode(ut,{decode_with_timestamps:!0});(!hr.includes(ie)||q[mt+hr.indexOf(ie)]===ie)&&(be.push(hr),Pe.push(ut),Ve.push(_t),ut=[],_t=[],mt+=hr.length)}return[be,Pe,Ve]}splitTokensOnSpaces(E){const[q,ie,be]=this.splitTokensOnUnicode(E),Pe=[],Ve=[],ut=[],_t=new RegExp(`^[${g}]$`,"gu");for(let mt=0;mt<q.length;++mt){const it=q[mt],Ct=ie[mt],hr=be[mt],nr=Ct[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Se=it.startsWith(" "),yr=it.trim(),Fr=_t.test(yr);if(nr||Se||Fr||Pe.length===0)Pe.push(it),Ve.push(Ct),ut.push(hr);else{const Qr=Pe.length-1;Pe[Qr]+=it,Ve[Qr].push(...Ct),ut[Qr].push(...hr)}}return[Pe,Ve,ut]}mergePunctuations(E,q,ie,be,Pe){const Ve=structuredClone(E),ut=structuredClone(q),_t=structuredClone(ie);let mt=Ve.length-2,it=Ve.length-1;for(;mt>=0;)Ve[mt].startsWith(" ")&&be.includes(Ve[mt].trim())?(Ve[it]=Ve[mt]+Ve[it],ut[it]=(0,F.mergeArrays)(ut[mt],ut[it]),_t[it]=(0,F.mergeArrays)(_t[mt],_t[it]),Ve[mt]="",ut[mt]=[],_t[mt]=[]):it=mt,--mt;for(mt=0,it=1;it<Ve.length;)!Ve[mt].endsWith(" ")&&Pe.includes(Ve[it])?(Ve[mt]+=Ve[it],ut[mt]=(0,F.mergeArrays)(ut[mt],ut[it]),_t[mt]=(0,F.mergeArrays)(_t[mt],_t[it]),Ve[it]="",ut[it]=[],_t[it]=[]):mt=it,++it;return[Ve.filter(Ct=>Ct),ut.filter(Ct=>Ct.length>0),_t.filter(Ct=>Ct.length>0)]}}class $n extends Lt{}class An extends Lt{}class In extends Lt{}class Bs extends Lt{constructor(E,q){super(E,q),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ie=>this.languageRegex.test(ie)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(E){if(E===null)return null;const[q,...ie]=E.trim().split(this.languageRegex);if(ie.length===0)return super._encode_text(q);if(ie.length===2){const[be,Pe]=ie;return this.supported_language_codes.includes(be)||console.warn(`Unsupported language code "${be}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,F.mergeArrays)([be],super._encode_text(Pe))}}}class On extends Lt{}class yn extends Lt{}class Fn extends Lt{}class ir extends Lt{}class ts extends Lt{}class bn extends Lt{constructor(E,q){super(E,q),this.decoder=new Ft({})}}class Dn extends Lt{}class Xs extends Lt{}class Mn{static async from_pretrained(E,{progress_callback:q=null,config:ie=null,cache_dir:be=null,local_files_only:Pe=!1,revision:Ve="main",legacy:ut=null}={}){var hr;const[_t,mt]=await b(E,{progress_callback:q,config:ie,cache_dir:be,local_files_only:Pe,revision:Ve,legacy:ut}),it=((hr=mt.tokenizer_class)==null?void 0:hr.replace(/Fast$/,""))??"PreTrainedTokenizer";let Ct=this.TOKENIZER_CLASS_MAPPING[it];return Ct||(console.warn(`Unknown tokenizer class "${it}", attempting to construct from base class.`),Ct=Lt),new Ct(_t,mt)}}ve(Mn,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:dr,DistilBertTokenizer:os,CamembertTokenizer:ot,DebertaTokenizer:Fs,DebertaV2Tokenizer:Zr,BertTokenizer:Vs,HerbertTokenizer:us,ConvBertTokenizer:ks,RoFormerTokenizer:Gs,XLMTokenizer:dt,ElectraTokenizer:It,MobileBertTokenizer:Os,SqueezeBertTokenizer:Cs,AlbertTokenizer:Ps,GPT2Tokenizer:fs,BartTokenizer:rr,MBartTokenizer:_s,MBart50Tokenizer:ds,RobertaTokenizer:Ks,WhisperTokenizer:wn,CodeGenTokenizer:$n,CLIPTokenizer:An,SiglipTokenizer:In,MarianTokenizer:Bs,BloomTokenizer:Ds,NllbTokenizer:gn,M2M100Tokenizer:zt,LlamaTokenizer:kn,CodeLlamaTokenizer:Ls,XLMRobertaTokenizer:Sn,MPNetTokenizer:ri,FalconTokenizer:zs,GPTNeoXTokenizer:ws,EsmTokenizer:es,Wav2Vec2CTCTokenizer:On,BlenderbotTokenizer:yn,BlenderbotSmallTokenizer:Fn,SpeechT5Tokenizer:ir,NougatTokenizer:ts,VitsTokenizer:bn,Qwen2Tokenizer:fn,GemmaTokenizer:Hs,Grok1Tokenizer:_n,CohereTokenizer:Dn,MgpstrTokenizer:Xs,PreTrainedTokenizer:Lt})},"./src/utils/audio.js":(ae,$,s)=>{s.r($),s.d($,{hamming:()=>y,hanning:()=>M,mel_filter_bank:()=>N,read_audio:()=>W,spectrogram:()=>g,window_function:()=>S});var _=s("./src/utils/hub.js"),F=s("./src/utils/maths.js"),U=s("./src/utils/core.js"),J=s("./src/utils/tensor.js");async function W(T,te){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const Z=await(await(0,_.getFile)(T)).arrayBuffer(),de=new AudioContext({sampleRate:te});typeof te>"u"&&console.warn(`No sampling rate provided, using default of ${de.sampleRate}Hz.`);const he=await de.decodeAudioData(Z);let we;if(he.numberOfChannels===2){const Ce=Math.sqrt(2),xe=he.getChannelData(0),ze=he.getChannelData(1);we=new Float32Array(xe.length);for(let fe=0;fe<he.length;++fe)we[fe]=Ce*(xe[fe]+ze[fe])/2}else we=he.getChannelData(0);return we}function w(T,te){if(T<1)return new Float64Array;if(T===1)return new Float64Array([1]);const Z=1-te,de=2*Math.PI/(T-1),he=new Float64Array(T);for(let we=0;we<T;++we)he[we]=te-Z*Math.cos(we*de);return he}function M(T){return w(T,.5)}function y(T){return w(T,.54)}const b={htk:T=>2595*Math.log10(1+T/700),kaldi:T=>1127*Math.log(1+T/700),slaney:(T,te=1e3,Z=15,de=27/Math.log(6.4))=>T>=te?Z+Math.log(T/te)*de:3*T/200};function v(T,te="htk"){const Z=b[te];if(!Z)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof T=="number"?Z(T):T.map(de=>Z(de))}const D={htk:T=>700*(10**(T/2595)-1),kaldi:T=>700*(Math.exp(T/1127)-1),slaney:(T,te=1e3,Z=15,de=Math.log(6.4)/27)=>T>=Z?te*Math.exp(de*(T-Z)):200*T/3};function Q(T,te="htk"){const Z=D[te];if(!Z)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof T=="number"?Z(T):T.map(de=>Z(de))}function ne(T,te){const Z=Float64Array.from({length:te.length-1},(Ce,xe)=>te[xe+1]-te[xe]),de=Array.from({length:T.length},()=>new Array(te.length));for(let Ce=0;Ce<T.length;++Ce){const xe=de[Ce];for(let ze=0;ze<te.length;++ze)xe[ze]=te[ze]-T[Ce]}const he=te.length-2,we=Array.from({length:he},()=>new Array(T.length));for(let Ce=0;Ce<T.length;++Ce){const xe=de[Ce];for(let ze=0;ze<he;++ze){const fe=-xe[ze]/Z[ze],V=xe[ze+2]/Z[ze+1];we[ze][Ce]=Math.max(0,Math.min(fe,V))}}return we}function le(T,te,Z){const de=(te-T)/(Z-1);return Float64Array.from({length:Z},(he,we)=>T+de*we)}function N(T,te,Z,de,he,we=null,Ce="htk",xe=!1){if(we!==null&&we!=="slaney")throw new Error('norm must be one of null or "slaney"');const ze=v(Z,Ce),fe=v(de,Ce),V=le(ze,fe,te+2);let ce=Q(V,Ce),_e;if(xe){const Ne=he/(T*2);_e=v(Float64Array.from({length:T},(Ke,Je)=>Je*Ne),Ce),ce=V}else _e=le(0,Math.floor(he/2),T);const De=ne(_e,ce);if(we!==null&&we==="slaney")for(let Ne=0;Ne<te;++Ne){const Ke=De[Ne],Je=2/(ce[Ne+2]-ce[Ne]);for(let lt=0;lt<T;++lt)Ke[lt]*=Je}return De}function H(T,te,Z){const de=new T.constructor(T.length+te+Z),he=T.length-1;for(let we=0;we<T.length;++we)de[te+we]=T[we];for(let we=1;we<=te;++we)de[te-we]=T[(0,U.calculateReflectOffset)(we,he)];for(let we=1;we<=Z;++we)de[he+te+we]=T[(0,U.calculateReflectOffset)(he-we,he)];return de}function Y(T,te,Z,de,he){if(Z<=0)throw new Error("reference must be greater than zero");if(de<=0)throw new Error("min_value must be greater than zero");Z=Math.max(de,Z);const we=Math.log10(Z);for(let Ce=0;Ce<T.length;++Ce)T[Ce]=te*Math.log10(Math.max(de,T[Ce])-we);if(he!==null){if(he<=0)throw new Error("db_range must be greater than zero");const Ce=(0,F.max)(T)[0]-he;for(let xe=0;xe<T.length;++xe)T[xe]=Math.max(T[xe],Ce)}return T}function L(T,te=1,Z=1e-5,de=null){return Y(T,20,te,Z,de)}function A(T,te=1,Z=1e-10,de=null){return Y(T,10,te,Z,de)}async function g(T,te,Z,de,{fft_length:he=null,power:we=1,center:Ce=!0,pad_mode:xe="reflect",onesided:ze=!0,preemphasis:fe=null,mel_filters:V=null,mel_floor:ce=1e-10,log_mel:_e=null,reference:De=1,min_value:Ne=1e-10,db_range:Ke=null,remove_dc_offset:Je=null,min_num_frames:lt=null,max_num_frames:Ge=null,do_pad:oe=!0,transpose:qe=!1}={}){const je=te.length;if(he===null&&(he=Z),Z>he)throw Error(`frame_length (${Z}) may not be larger than fft_length (${he})`);if(je!==Z)throw new Error(`Length of the window (${je}) must equal frame_length (${Z})`);if(de<=0)throw new Error("hop_length must be greater than zero");if(we===null&&V!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(Ce){if(xe!=="reflect")throw new Error(`pad_mode="${xe}" not implemented yet.`);const O=Math.floor((he-1)/2)+1;T=H(T,O,O)}let ye=Math.floor(1+Math.floor((T.length-Z)/de));lt!==null&&ye<lt&&(ye=lt);const ke=ze?Math.floor(he/2)+1:he;let Ze=ye,Ye=ye;Ge!==null&&(Ge>ye?oe&&(Ye=Ge):Ye=Ze=Ge);const Xe=new F.FFT(he),Be=new Float64Array(he),st=new Float64Array(Xe.outputBufferSize),pt=new Float32Array(ke*Ye);for(let O=0;O<Ze;++O){const se=O*de,K=Math.min(T.length-se,Z);K!==Z&&Be.fill(0,0,Z);for(let ue=0;ue<K;++ue)Be[ue]=T[se+ue];if(Je){let ue=0;for(let He=0;He<K;++He)ue+=Be[He];const Oe=ue/K;for(let He=0;He<K;++He)Be[He]-=Oe}if(fe!==null){for(let ue=K-1;ue>=1;--ue)Be[ue]-=fe*Be[ue-1];Be[0]*=1-fe}for(let ue=0;ue<te.length;++ue)Be[ue]*=te[ue];Xe.realTransform(st,Be);for(let ue=0;ue<ke;++ue){const Oe=ue<<1;pt[ue*Ye+O]=st[Oe]**2+st[Oe+1]**2}}if(we!==null&&we!==2){const O=2/we;for(let se=0;se<pt.length;++se)pt[se]**=O}const yt=V.length;let ht=await(0,J.matmul)(new J.Tensor("float32",V.flat(),[yt,ke]),new J.Tensor("float32",pt,[ke,Ye]));qe&&(ht=ht.transpose(1,0));const wt=ht.data;for(let O=0;O<wt.length;++O)wt[O]=Math.max(ce,wt[O]);if(we!==null&&_e!==null){const O=Math.min(wt.length,Ze*yt);switch(_e){case"log":for(let se=0;se<O;++se)wt[se]=Math.log(wt[se]);break;case"log10":for(let se=0;se<O;++se)wt[se]=Math.log10(wt[se]);break;case"dB":if(we===1)L(wt,De,Ne,Ke);else if(we===2)A(wt,De,Ne,Ke);else throw new Error(`Cannot use log_mel option '${_e}' with power ${we}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_e}'`)}}return ht}function S(T,te,{periodic:Z=!0,frame_length:de=null,center:he=!0}={}){const we=Z?T+1:T;let Ce;switch(te){case"boxcar":Ce=new Float64Array(we).fill(1);break;case"hann":case"hann_window":Ce=M(we);break;case"hamming":Ce=y(we);break;case"povey":Ce=M(we).map(xe=>Math.pow(xe,.85));break;default:throw new Error(`Unknown window type ${te}.`)}if(Z&&(Ce=Ce.subarray(0,T)),de===null)return Ce;if(T>de)throw new Error(`Length of the window (${T}) may not be larger than frame_length (${de})`);return Ce}},"./src/utils/constants.js":(ae,$,s)=>{s.r($),s.d($,{CHAT_TEMPLATE_NAME:()=>w,CONFIG_NAME:()=>F,FEATURE_EXTRACTOR_NAME:()=>U,GENERATION_CONFIG_NAME:()=>M,GITHUB_ISSUE_URL:()=>_,IMAGE_PROCESSOR_NAME:()=>J,PROCESSOR_NAME:()=>W});const _="https://github.com/huggingface/transformers.js/issues/new/choose",F="config.json",U="preprocessor_config.json",J=U,W="processor_config.json",w="chat_template.json",M="generation_config.json"},"./src/utils/core.js":(ae,$,s)=>{s.r($),s.d($,{calculateDimensions:()=>M,calculateReflectOffset:()=>D,count:()=>le,dispatchCallback:()=>_,escapeRegExp:()=>U,isIntegralNumber:()=>W,isNullishDimension:()=>w,isTypedArray:()=>J,len:()=>ne,mergeArrays:()=>b,pick:()=>Q,pop:()=>y,product:()=>v,reverseDictionary:()=>F});function _(N,H){N&&N(H)}function F(N){return Object.fromEntries(Object.entries(N).map(([H,Y])=>[Y,H]))}function U(N){return N.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function J(N){var H,Y,L;return((L=(Y=(H=N==null?void 0:N.prototype)==null?void 0:H.__proto__)==null?void 0:Y.constructor)==null?void 0:L.name)==="TypedArray"}function W(N){return Number.isInteger(N)||typeof N=="bigint"}function w(N){return N==null||N===-1}function M(N){const H=[];let Y=N;for(;Array.isArray(Y);)H.push(Y.length),Y=Y[0];return H}function y(N,H,Y=void 0){const L=N[H];if(L!==void 0)return delete N[H],L;if(Y===void 0)throw Error(`Key ${H} does not exist in object.`);return Y}function b(...N){return Array.prototype.concat.apply([],N)}function v(...N){return N.reduce((H,Y)=>H.flatMap(L=>Y.map(A=>[L,A])))}function D(N,H){return Math.abs((N+H)%(2*H)-H)}function Q(N,H){return Object.assign({},...H.map(Y=>{if(N[Y]!==void 0)return{[Y]:N[Y]}}))}function ne(N){let H=0;for(const Y of N)++H;return H}function le(N,H){let Y=0;for(const L of N)L===H&&++Y;return Y}},"./src/utils/data-structures.js":(ae,$,s)=>{s.r($),s.d($,{CharTrie:()=>F,PriorityQueue:()=>_,TokenLattice:()=>J});class _{constructor(M=(b,v)=>b>v,y=1/0){this._heap=[],this._comparator=M,this._maxSize=y}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...M){return this.extend(M)}extend(M){for(const y of M)if(this.size<this._maxSize)this._heap.push(y),this._siftUp();else{const b=this._smallest();this._comparator(y,this._heap[b])&&(this._heap[b]=y,this._siftUpFrom(b))}return this.size}pop(){const M=this.peek(),y=this.size-1;return y>0&&this._swap(0,y),this._heap.pop(),this._siftDown(),M}replace(M){const y=this.peek();return this._heap[0]=M,this._siftDown(),y}_parent(M){return(M+1>>>1)-1}_left(M){return(M<<1)+1}_right(M){return M+1<<1}_greater(M,y){return this._comparator(this._heap[M],this._heap[y])}_swap(M,y){const b=this._heap[M];this._heap[M]=this._heap[y],this._heap[y]=b}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(M){for(;M>0&&this._greater(M,this._parent(M));)this._swap(M,this._parent(M)),M=this._parent(M)}_siftDown(){let M=0;for(;this._left(M)<this.size&&this._greater(this._left(M),M)||this._right(M)<this.size&&this._greater(this._right(M),M);){const y=this._right(M)<this.size&&this._greater(this._right(M),this._left(M))?this._right(M):this._left(M);this._swap(M,y),M=y}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class F{constructor(){this.root=U.default()}extend(M){for(const y of M)this.push(y)}push(M){let y=this.root;for(const b of M){let v=y.children.get(b);v===void 0&&(v=U.default(),y.children.set(b,v)),y=v}y.isLeaf=!0}*commonPrefixSearch(M){let y=this.root;if(y===void 0)return;let b="";for(const v of M){if(b+=v,y=y.children.get(v),y===void 0)return;y.isLeaf&&(yield b)}}}class U{constructor(M,y){this.isLeaf=M,this.children=y}static default(){return new U(!1,new Map)}}class J{constructor(M,y,b){this.chars=Array.from(M),this.len=this.chars.length,this.bosTokenId=y,this.eosTokenId=b,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const v=new W(this.bosTokenId,0,0,0,0),D=new W(this.eosTokenId,1,this.len,0,0);this.nodes.push(v.clone()),this.nodes.push(D.clone()),this.beginNodes[this.len].push(D),this.endNodes[0].push(v)}insert(M,y,b,v){const D=this.nodes.length,Q=new W(v,D,M,y,b);this.beginNodes[M].push(Q),this.endNodes[M+y].push(Q),this.nodes.push(Q)}viterbi(){const M=this.len;let y=0;for(;y<=M;){if(this.beginNodes[y].length==0)return[];for(let ne of this.beginNodes[y]){ne.prev=null;let le=0,N=null;for(let H of this.endNodes[y]){const Y=H.backtraceScore+ne.score;(N===null||Y>le)&&(N=H.clone(),le=Y)}if(N!==null)ne.prev=N,ne.backtraceScore=le;else return[]}++y}const b=[],D=this.beginNodes[M][0].prev;if(D===null)return[];let Q=D.clone();for(;Q.prev!==null;)b.push(Q.clone()),Q=Q.clone().prev.clone();return b.reverse(),b}piece(M){return this.chars.slice(M.pos,M.pos+M.length).join("")}tokens(){return this.viterbi().map(y=>this.piece(y))}tokenIds(){return this.viterbi().map(y=>y.tokenId)}}class W{constructor(M,y,b,v,D){this.tokenId=M,this.nodeId=y,this.pos=b,this.length=v,this.score=D,this.prev=null,this.backtraceScore=0}clone(){const M=new W(this.tokenId,this.nodeId,this.pos,this.length,this.score);return M.prev=this.prev,M.backtraceScore=this.backtraceScore,M}}},"./src/utils/devices.js":(ae,$,s)=>{s.r($),s.d($,{DEVICE_TYPES:()=>_});const _=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(ae,$,s)=>{s.r($),s.d($,{DATA_TYPES:()=>J,DEFAULT_DEVICE_DTYPE_MAPPING:()=>W,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>w,isWebGpuFp16Supported:()=>U});var _=s("./src/env.js"),F=s("./src/utils/devices.js");const U=function(){let M;return async function(){if(M===void 0)if(!_.apis.IS_WEBGPU_AVAILABLE)M=!1;else try{M=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{M=!1}return M}}(),J=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),W=Object.freeze({[F.DEVICE_TYPES.wasm]:J.q8}),w=Object.freeze({[J.fp32]:"",[J.fp16]:"_fp16",[J.int8]:"_int8",[J.uint8]:"_uint8",[J.q8]:"_quantized",[J.q4]:"_q4",[J.q4f16]:"_q4f16",[J.bnb4]:"_bnb4"})},"./src/utils/generic.js":(ae,$,s)=>{s.r($),s.d($,{Callable:()=>_});const _=class{constructor(){let F=function(...U){return F._call(...U)};return Object.setPrototypeOf(F,new.target.prototype)}_call(...F){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(ae,$,s)=>{s.r($),s.d($,{getFile:()=>y,getModelFile:()=>ne,getModelJSON:()=>le});var _=s("?7a2c"),F=s("?a42a"),U=s("./src/env.js"),J=s("./src/utils/core.js");const W={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class w{constructor(L){if(this.filePath=L,this.headers=new Headers,this.exists=_.existsSync(L),this.exists){this.status=200,this.statusText="OK";let A=_.statSync(L);this.headers.set("content-length",A.size.toString()),this.updateContentType();let g=this;this.body=new ReadableStream({start(S){g.arrayBuffer().then(T=>{S.enqueue(new Uint8Array(T)),S.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const L=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",W[L]??"application/octet-stream")}clone(){let L=new w(this.filePath);return L.exists=this.exists,L.status=this.status,L.statusText=this.statusText,L.headers=new Headers(this.headers),L}async arrayBuffer(){return(await _.promises.readFile(this.filePath)).buffer}async blob(){const L=await _.promises.readFile(this.filePath);return new Blob([L],{type:this.headers.get("content-type")})}async text(){return await _.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function M(Y,L=null,A=null){let g;try{g=new URL(Y)}catch{return!1}return!(L&&!L.includes(g.protocol)||A&&!A.includes(g.hostname))}async function y(Y){var L;if(U.env.useFS&&!M(Y,["http:","https:","blob:"]))return new w(Y);if(typeof process<"u"&&((L=process==null?void 0:process.release)==null?void 0:L.name)==="node"){const A=!!(hn!=null&&hn.TESTING_REMOTELY),g=U.env.version,S=new Headers;if(S.set("User-Agent",`transformers.js/${g}; is_ci/${A};`),M(Y,["http:","https:"],["huggingface.co","hf.co"])){const te=(hn==null?void 0:hn.HF_TOKEN)??(hn==null?void 0:hn.HF_ACCESS_TOKEN);te&&S.set("Authorization",`Bearer ${te}`)}return fetch(Y,{headers:S})}else return fetch(Y)}const b={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function v(Y,L,A){if(!A)return null;const g=b[Y]??`Error (${Y}) occurred while trying to load file`;throw Error(`${g}: "${L}".`)}class D{constructor(L){this.path=L}async match(L){let A=F.join(this.path,L),g=new w(A);if(g.exists)return g}async put(L,A){const g=Buffer.from(await A.arrayBuffer());let S=F.join(this.path,L);try{await _.promises.mkdir(F.dirname(S),{recursive:!0}),await _.promises.writeFile(S,g)}catch(T){console.warn("An error occurred while writing the file to cache:",T)}}}async function Q(Y,...L){for(let A of L)try{let g=await Y.match(A);if(g)return g}catch{continue}}async function ne(Y,L,A=!0,g={}){if(!U.env.allowLocalModels){if(g.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!U.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,J.dispatchCallback)(g.progress_callback,{status:"initiate",name:Y,file:L});let S;if(!S&&U.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{S=await caches.open("transformers-cache")}catch(ce){console.warn("An error occurred while opening the browser cache:",ce)}}if(!S&&U.env.useFSCache&&(S=new D(g.cache_dir??U.env.cacheDir)),!S&&U.env.useCustomCache){if(!U.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!U.env.customCache.match||!U.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");S=U.env.customCache}const T=g.revision??"main";let te=H(Y,L),Z=H(U.env.localModelPath,te),de=H(U.env.remoteHost,U.env.remotePathTemplate.replaceAll("{model}",Y).replaceAll("{revision}",encodeURIComponent(T)),L),he=T==="main"?te:H(Y,T,L),we,Ce=S instanceof D?he:de,xe=!1,ze;S&&(ze=await Q(S,Z,Ce));const fe=ze!==void 0;if(ze===void 0){if(U.env.allowLocalModels)if(M(te,["http:","https:"])){if(g.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${te}.`);if(!U.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${te}.`)}else try{ze=await y(Z),we=Z}catch(_e){console.warn(`Unable to load from local path "${Z}": "${_e}"`)}if(ze===void 0||ze.status===404){if(g.local_files_only||!U.env.allowRemoteModels){if(A)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${Z}".`);return null}if(ze=await y(de),ze.status!==200)return v(ze.status,de,A);we=Ce}xe=S&&typeof Response<"u"&&ze instanceof Response&&ze.status===200}(0,J.dispatchCallback)(g.progress_callback,{status:"download",name:Y,file:L});let V;return g.progress_callback?fe&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(V=new Uint8Array(await ze.arrayBuffer()),(0,J.dispatchCallback)(g.progress_callback,{status:"progress",name:Y,file:L,progress:100,loaded:V.length,total:V.length})):V=await N(ze,ce=>{(0,J.dispatchCallback)(g.progress_callback,{status:"progress",name:Y,file:L,...ce})}):V=new Uint8Array(await ze.arrayBuffer()),xe&&we&&await S.match(we)===void 0&&await S.put(we,new Response(V,{headers:ze.headers})).catch(ce=>{console.warn(`Unable to add response to browser cache: ${ce}.`)}),(0,J.dispatchCallback)(g.progress_callback,{status:"done",name:Y,file:L}),V}async function le(Y,L,A=!0,g={}){let S=await ne(Y,L,A,g);if(S===null)return{};let te=new TextDecoder("utf-8").decode(S);return JSON.parse(te)}async function N(Y,L){const A=Y.headers.get("Content-Length");A===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let g=parseInt(A??"0"),S=new Uint8Array(g),T=0;const te=Y.body.getReader();async function Z(){const{done:de,value:he}=await te.read();if(de)return;let we=T+he.length;if(we>g){g=we;let xe=new Uint8Array(g);xe.set(S),S=xe}S.set(he,T),T=we;const Ce=T/g*100;return L({progress:Ce,loaded:T,total:g}),Z()}return await Z(),S}function H(...Y){return Y=Y.map((L,A)=>(A&&(L=L.replace(new RegExp("^/"),"")),A!==Y.length-1&&(L=L.replace(new RegExp("/$"),"")),L)),Y.join("/")}},"./src/utils/image.js":(ae,$,s)=>{s.r($),s.d($,{RawImage:()=>Q,load_image:()=>ne});var _=s("./src/utils/core.js"),F=s("./src/utils/hub.js"),U=s("./src/env.js"),J=s("./src/utils/tensor.js"),W=s("?2b25");let w,M,y;const b=U.apis.IS_BROWSER_ENV||U.apis.IS_WEBWORKER_ENV;if(b)w=(le,N)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(le,N)},y=self.createImageBitmap,M=self.ImageData;else if(W)y=async le=>{const H=(await le.metadata()).channels,{data:Y,info:L}=await le.rotate().raw().toBuffer({resolveWithObject:!0}),A=new Q(new Uint8ClampedArray(Y),L.width,L.height,L.channels);return H!==void 0&&H!==L.channels&&A.convert(H),A};else throw new Error("Unable to load image processing library.");const v={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},D=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class Q{constructor(N,H,Y,L){this.data=N,this.width=H,this.height=Y,this.channels=L}get size(){return[this.width,this.height]}static async read(N){if(N instanceof Q)return N;if(typeof N=="string"||N instanceof URL)return await this.fromURL(N);throw new Error(`Unsupported input type: ${typeof N}`)}static fromCanvas(N){if(!b)throw new Error("fromCanvas() is only supported in browser environments.");const Y=N.getContext("2d").getImageData(0,0,N.width,N.height).data;return new Q(Y,N.width,N.height,4)}static async fromURL(N){const H=await(0,F.getFile)(N);if(H.status!==200)throw new Error(`Unable to read image from "${N}" (${H.status} ${H.statusText})`);const Y=await H.blob();return this.fromBlob(Y)}static async fromBlob(N){if(b){const H=await y(N),Y=w(H.width,H.height).getContext("2d");return Y.drawImage(H,0,0),new this(Y.getImageData(0,0,H.width,H.height).data,H.width,H.height,4)}else{const H=W(await N.arrayBuffer());return await y(H)}}static fromTensor(N,H="CHW"){if(N.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${N.dims.length} dimensions.`);if(H==="CHW")N=N.transpose(1,2,0);else if(H!=="HWC")throw new Error(`Unsupported channel format: ${H}`);if(!(N.data instanceof Uint8ClampedArray||N.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${N.type}`);switch(N.dims[2]){case 1:case 2:case 3:case 4:return new Q(N.data,N.dims[1],N.dims[0],N.dims[2]);default:throw new Error(`Unsupported number of channels: ${N.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const N=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let H=0,Y=0;H<this.data.length;H+=this.channels){const L=this.data[H],A=this.data[H+1],g=this.data[H+2];N[Y++]=Math.round(.2989*L+.587*A+.114*g)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const N=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let H=0,Y=0;H<this.data.length;++H)N[Y++]=this.data[H],N[Y++]=this.data[H],N[Y++]=this.data[H];break;case 4:for(let H=0,Y=0;H<this.data.length;H+=4)N[Y++]=this.data[H],N[Y++]=this.data[H+1],N[Y++]=this.data[H+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const N=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let H=0,Y=0;H<this.data.length;++H)N[Y++]=this.data[H],N[Y++]=this.data[H],N[Y++]=this.data[H],N[Y++]=255;break;case 3:for(let H=0,Y=0;H<this.data.length;H+=3)N[Y++]=this.data[H],N[Y++]=this.data[H+1],N[Y++]=this.data[H+2],N[Y++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(N,this.width,this.height,4)}putAlpha(N){if(N.width!==this.width||N.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${N.width}x${N.height}`);if(N.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${N.channels}`);const H=this.data,Y=N.data,L=this.width*this.height;if(this.channels===3){const A=new Uint8ClampedArray(L*4);for(let g=0,S=0,T=0;g<L;++g)A[T++]=H[S++],A[T++]=H[S++],A[T++]=H[S++],A[T++]=Y[g];return this._update(A,this.width,this.height,4)}else if(this.channels===4){for(let A=0;A<L;++A)H[4*A+3]=Y[A];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(N,H,{resample:Y=2}={}){if(this.width===N&&this.height===H)return this;let L=v[Y]??Y;const A=(0,_.isNullishDimension)(N),g=(0,_.isNullishDimension)(H);if(A&&g)return this;if(A?N=H/this.height*this.width:g&&(H=N/this.width*this.height),b){const S=this.channels,T=this.toCanvas(),te=w(N,H).getContext("2d");return te.drawImage(T,0,0,N,H),new Q(te.getImageData(0,0,N,H).data,N,H,4).convert(S)}else{let S=this.toSharp();switch(L){case"box":case"hamming":(L==="box"||L==="hamming")&&(console.warn(`Resampling method ${L} is not yet supported. Using bilinear instead.`),L="bilinear");case"nearest":case"bilinear":case"bicubic":S=S.affine([N/this.width,0,0,H/this.height],{interpolator:L});break;case"lanczos":S=S.resize({width:N,height:H,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${L} is not supported.`)}return await y(S)}}async pad([N,H,Y,L]){if(N=Math.max(N,0),H=Math.max(H,0),Y=Math.max(Y,0),L=Math.max(L,0),N===0&&H===0&&Y===0&&L===0)return this;if(b){const A=this.channels,g=this.toCanvas(),S=this.width+N+H,T=this.height+Y+L,te=w(S,T).getContext("2d");return te.drawImage(g,0,0,this.width,this.height,N,Y,this.width,this.height),new Q(te.getImageData(0,0,S,T).data,S,T,4).convert(A)}else{const A=this.toSharp().extend({left:N,right:H,top:Y,bottom:L});return await y(A)}}async crop([N,H,Y,L]){if(N=Math.max(N,0),H=Math.max(H,0),Y=Math.min(Y,this.width-1),L=Math.min(L,this.height-1),N===0&&H===0&&Y===this.width-1&&L===this.height-1)return this;const A=Y-N+1,g=L-H+1;if(b){const S=this.channels,T=this.toCanvas(),te=w(A,g).getContext("2d");return te.drawImage(T,N,H,A,g,0,0,A,g),new Q(te.getImageData(0,0,A,g).data,A,g,4).convert(S)}else{const S=this.toSharp().extract({left:N,top:H,width:A,height:g});return await y(S)}}async center_crop(N,H){if(this.width===N&&this.height===H)return this;const Y=(this.width-N)/2,L=(this.height-H)/2;if(b){const A=this.channels,g=this.toCanvas(),S=w(N,H).getContext("2d");let T=0,te=0,Z=0,de=0;return Y>=0?T=Y:Z=-Y,L>=0?te=L:de=-L,S.drawImage(g,T,te,N,H,Z,de,N,H),new Q(S.getImageData(0,0,N,H).data,N,H,4).convert(A)}else{let A=this.toSharp();if(Y>=0&&L>=0)A=A.extract({left:Math.floor(Y),top:Math.floor(L),width:N,height:H});else if(Y<=0&&L<=0){const g=Math.floor(-L),S=Math.floor(-Y);A=A.extend({top:g,left:S,right:N-this.width-S,bottom:H-this.height-g})}else{let g=[0,0],S=0;L<0?(g[0]=Math.floor(-L),g[1]=H-this.height-g[0]):S=Math.floor(L);let T=[0,0],te=0;Y<0?(T[0]=Math.floor(-Y),T[1]=N-this.width-T[0]):te=Math.floor(Y),A=A.extend({top:g[0],bottom:g[1],left:T[0],right:T[1]}).extract({left:te,top:S,width:N,height:H})}return await y(A)}}async toBlob(N="image/png",H=1){if(!b)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:N,quality:H})}toTensor(N="CHW"){let H=new J.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(N!=="HWC")if(N==="CHW")H=H.permute(2,0,1);else throw new Error(`Unsupported channel format: ${N}`);return H}toCanvas(){if(!b)throw new Error("toCanvas() is only supported in browser environments.");const N=this.clone().rgba(),H=w(N.width,N.height),Y=new M(N.data,N.width,N.height);return H.getContext("2d").putImageData(Y,0,0),H}split(){const{data:N,width:H,height:Y,channels:L}=this,A=N.constructor,g=N.length/L,S=Array.from({length:L},()=>new A(g));for(let T=0;T<g;++T){const te=L*T;for(let Z=0;Z<L;++Z)S[Z][T]=N[te+Z]}return S.map(T=>new Q(T,H,Y,1))}_update(N,H,Y,L=null){return this.data=N,this.width=H,this.height=Y,L!==null&&(this.channels=L),this}clone(){return new Q(this.data.slice(),this.width,this.height,this.channels)}convert(N){if(this.channels===N)return this;switch(N){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(N){if(b){if(U.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const H=N.split(".").pop().toLowerCase(),Y=D.get(H)??"image/png",L=await this.toBlob(Y),A=URL.createObjectURL(L),g=document.createElement("a");g.href=A,g.download=N,g.click(),g.remove()}else{if(U.env.useFS)return await this.toSharp().toFile(N);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(b)throw new Error("toSharp() is only supported in server-side environments.");return W(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const ne=Q.read.bind(Q)},"./src/utils/maths.js":(ae,$,s)=>{s.r($),s.d($,{FFT:()=>ne,bankers_round:()=>H,cos_sim:()=>w,dot:()=>W,dynamic_time_warping:()=>Y,interpolate_data:()=>_,log_softmax:()=>J,magnitude:()=>M,max:()=>b,medianFilter:()=>le,min:()=>y,permute_data:()=>F,round:()=>N,softmax:()=>U});function _(L,[A,g,S],[T,te],Z="bilinear",de=!1){const he=te/S,we=T/g,Ce=new L.constructor(T*te*A),xe=g*S,ze=T*te;for(let fe=0;fe<T;++fe)for(let V=0;V<te;++V){const ce=fe*te+V,_e=(V+.5)/he-.5,De=(fe+.5)/we-.5;let Ne=Math.floor(_e),Ke=Math.floor(De);const Je=Math.min(Ne+1,S-1),lt=Math.min(Ke+1,g-1);Ne=Math.max(Ne,0),Ke=Math.max(Ke,0);const Ge=_e-Ne,oe=De-Ke,qe=(1-Ge)*(1-oe),je=Ge*(1-oe),ye=(1-Ge)*oe,ke=Ge*oe,Ze=Ke*S,Ye=lt*S,Xe=Ze+Ne,Be=Ze+Je,st=Ye+Ne,pt=Ye+Je;for(let yt=0;yt<A;++yt){const ht=yt*xe;Ce[yt*ze+ce]=qe*L[ht+Xe]+je*L[ht+Be]+ye*L[ht+st]+ke*L[ht+pt]}}return Ce}function F(L,A,g){const S=new Array(g.length),T=new Array(g.length);for(let de=g.length-1,he=1;de>=0;--de)T[de]=he,S[de]=A[g[de]],he*=S[de];const te=g.map((de,he)=>T[g.indexOf(he)]),Z=new L.constructor(L.length);for(let de=0;de<L.length;++de){let he=0;for(let we=A.length-1,Ce=de;we>=0;--we)he+=Ce%A[we]*te[we],Ce=Math.floor(Ce/A[we]);Z[he]=L[de]}return[Z,S]}function U(L){const A=b(L)[0],g=L.map(te=>Math.exp(te-A)),S=g.reduce((te,Z)=>te+Z,0);return g.map(te=>te/S)}function J(L){const A=b(L)[0];let g=0;for(let te=0;te<L.length;++te)g+=Math.exp(L[te]-A);const S=Math.log(g);return L.map(te=>te-A-S)}function W(L,A){let g=0;for(let S=0;S<L.length;++S)g+=L[S]*A[S];return g}function w(L,A){const g=W(L,A),S=M(L),T=M(A);return g/(S*T)}function M(L){return Math.sqrt(L.reduce((A,g)=>A+g*g,0))}function y(L){if(L.length===0)throw Error("Array must not be empty");let A=L[0],g=0;for(let S=1;S<L.length;++S)L[S]<A&&(A=L[S],g=S);return[A,g]}function b(L){if(L.length===0)throw Error("Array must not be empty");let A=L[0],g=0;for(let S=1;S<L.length;++S)L[S]>A&&(A=L[S],g=S);return[Number(A),g]}function v(L){return L>0&&(L&L-1)===0}class D{constructor(A){if(this.size=A|0,this.size<=1||!v(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=A<<1,this.table=new Float64Array(this.size*2);for(let S=0;S<this.table.length;S+=2){const T=Math.PI*S/this.size;this.table[S]=Math.cos(T),this.table[S+1]=-Math.sin(T)}let g=0;for(let S=1;this.size>S;S<<=1)++g;this._width=g%2===0?g-1:g,this._bitrev=new Int32Array(1<<this._width);for(let S=0;S<this._bitrev.length;++S){this._bitrev[S]=0;for(let T=0;T<this._width;T+=2){const te=this._width-T-2;this._bitrev[S]|=(S>>>T&3)<<te}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(A,g){const S=g||new Array(A.length>>>1);for(let T=0;T<A.length;T+=2)S[T>>>1]=A[T];return S}toComplexArray(A,g){const S=g||this.createComplexArray();for(let T=0;T<S.length;T+=2)S[T]=A[T>>>1],S[T+1]=0;return S}transform(A,g){if(A===g)throw new Error("Input and output buffers must be different");this._transform4(A,g,1)}realTransform(A,g){if(A===g)throw new Error("Input and output buffers must be different");this._realTransform4(A,g,1)}inverseTransform(A,g){if(A===g)throw new Error("Input and output buffers must be different");this._transform4(A,g,-1);for(let S=0;S<A.length;++S)A[S]/=this.size}_transform4(A,g,S){const T=this._csize;let Z=1<<this._width,de=T/Z<<1,he,we;const Ce=this._bitrev;if(de===4)for(he=0,we=0;he<T;he+=de,++we){const ze=Ce[we];this._singleTransform2(g,A,he,ze,Z)}else for(he=0,we=0;he<T;he+=de,++we){const ze=Ce[we];this._singleTransform4(g,A,he,ze,Z,S)}const xe=this.table;for(Z>>=2;Z>=2;Z>>=2){de=T/Z<<1;const ze=de>>>2;for(he=0;he<T;he+=de){const fe=he+ze-1;for(let V=he,ce=0;V<fe;V+=2,ce+=Z){const _e=V,De=_e+ze,Ne=De+ze,Ke=Ne+ze,Je=A[_e],lt=A[_e+1],Ge=A[De],oe=A[De+1],qe=A[Ne],je=A[Ne+1],ye=A[Ke],ke=A[Ke+1],Ze=xe[ce],Ye=S*xe[ce+1],Xe=Ge*Ze-oe*Ye,Be=Ge*Ye+oe*Ze,st=xe[2*ce],pt=S*xe[2*ce+1],yt=qe*st-je*pt,ht=qe*pt+je*st,wt=xe[3*ce],O=S*xe[3*ce+1],se=ye*wt-ke*O,K=ye*O+ke*wt,ue=Je+yt,Oe=lt+ht,He=Je-yt,rt=lt-ht,ct=Xe+se,Ot=Be+K,xt=S*(Xe-se),Ft=S*(Be-K);A[_e]=ue+ct,A[_e+1]=Oe+Ot,A[De]=He+Ft,A[De+1]=rt-xt,A[Ne]=ue-ct,A[Ne+1]=Oe-Ot,A[Ke]=He-Ft,A[Ke+1]=rt+xt}}}}_singleTransform2(A,g,S,T,te){const Z=A[T],de=A[T+1],he=A[T+te],we=A[T+te+1];g[S]=Z+he,g[S+1]=de+we,g[S+2]=Z-he,g[S+3]=de-we}_singleTransform4(A,g,S,T,te,Z){const de=te*2,he=te*3,we=A[T],Ce=A[T+1],xe=A[T+te],ze=A[T+te+1],fe=A[T+de],V=A[T+de+1],ce=A[T+he],_e=A[T+he+1],De=we+fe,Ne=Ce+V,Ke=we-fe,Je=Ce-V,lt=xe+ce,Ge=ze+_e,oe=Z*(xe-ce),qe=Z*(ze-_e);g[S]=De+lt,g[S+1]=Ne+Ge,g[S+2]=Ke+qe,g[S+3]=Je-oe,g[S+4]=De-lt,g[S+5]=Ne-Ge,g[S+6]=Ke-qe,g[S+7]=Je+oe}_realTransform4(A,g,S){const T=this._csize;let Z=1<<this._width,de=T/Z<<1,he,we;const Ce=this._bitrev;if(de===4)for(he=0,we=0;he<T;he+=de,++we){const fe=Ce[we];this._singleRealTransform2(g,A,he,fe>>>1,Z>>>1)}else for(he=0,we=0;he<T;he+=de,++we){const fe=Ce[we];this._singleRealTransform4(g,A,he,fe>>>1,Z>>>1,S)}const xe=this.table;for(Z>>=2;Z>=2;Z>>=2){de=T/Z<<1;const fe=de>>>1,V=fe>>>1,ce=V>>>1;for(he=0;he<T;he+=de)for(let _e=0,De=0;_e<=ce;_e+=2,De+=Z){const Ne=he+_e,Ke=Ne+V,Je=Ke+V,lt=Je+V,Ge=A[Ne],oe=A[Ne+1],qe=A[Ke],je=A[Ke+1],ye=A[Je],ke=A[Je+1],Ze=A[lt],Ye=A[lt+1],Xe=Ge,Be=oe,st=xe[De],pt=S*xe[De+1],yt=qe*st-je*pt,ht=qe*pt+je*st,wt=xe[2*De],O=S*xe[2*De+1],se=ye*wt-ke*O,K=ye*O+ke*wt,ue=xe[3*De],Oe=S*xe[3*De+1],He=Ze*ue-Ye*Oe,rt=Ze*Oe+Ye*ue,ct=Xe+se,Ot=Be+K,xt=Xe-se,Ft=Be-K,At=yt+He,sr=ht+rt,wr=S*(yt-He),Or=S*(ht-rt);if(A[Ne]=ct+At,A[Ne+1]=Ot+sr,A[Ke]=xt+Or,A[Ke+1]=Ft-wr,_e===0){A[Je]=ct-At,A[Je+1]=Ot-sr;continue}if(_e===ce)continue;const Cr=he+V-_e,Xr=he+fe-_e;A[Cr]=xt-S*Or,A[Cr+1]=-Ft-S*wr,A[Xr]=ct-S*At,A[Xr+1]=-Ot+S*sr}}const ze=T>>>1;for(let fe=2;fe<ze;fe+=2)A[T-fe]=A[fe],A[T-fe+1]=-A[fe+1]}_singleRealTransform2(A,g,S,T,te){const Z=A[T],de=A[T+te];g[S]=Z+de,g[S+1]=0,g[S+2]=Z-de,g[S+3]=0}_singleRealTransform4(A,g,S,T,te,Z){const de=te*2,he=te*3,we=A[T],Ce=A[T+te],xe=A[T+de],ze=A[T+he],fe=we+xe,V=we-xe,ce=Ce+ze,_e=Z*(Ce-ze);g[S]=fe+ce,g[S+1]=0,g[S+2]=V,g[S+3]=-_e,g[S+4]=fe-ce,g[S+5]=0,g[S+6]=V,g[S+7]=_e}}class Q{constructor(A){const g=2*(A-1),S=2*(2*A-1),T=2**Math.ceil(Math.log2(S));this.bufferSize=T,this._a=g;const te=new Float64Array(S),Z=new Float64Array(T);this._chirpBuffer=new Float64Array(T),this._buffer1=new Float64Array(T),this._buffer2=new Float64Array(T),this._outBuffer1=new Float64Array(T),this._outBuffer2=new Float64Array(T);const de=-2*Math.PI/A,he=Math.cos(de),we=Math.sin(de);for(let Ce=0;Ce<S>>1;++Ce){const xe=(Ce+1-A)**2/2,ze=Math.sqrt(he**2+we**2)**xe,fe=xe*Math.atan2(we,he),V=2*Ce;te[V]=ze*Math.cos(fe),te[V+1]=ze*Math.sin(fe),Z[V]=te[V],Z[V+1]=-te[V+1]}this._slicedChirpBuffer=te.subarray(g,S),this._f=new D(T>>1),this._f.transform(this._chirpBuffer,Z)}_transform(A,g,S){const T=this._buffer1,te=this._buffer2,Z=this._outBuffer1,de=this._outBuffer2,he=this._chirpBuffer,we=this._slicedChirpBuffer,Ce=this._a;if(S)for(let xe=0;xe<we.length;xe+=2){const ze=xe+1,fe=xe>>1,V=g[fe];T[xe]=V*we[xe],T[ze]=V*we[ze]}else for(let xe=0;xe<we.length;xe+=2){const ze=xe+1;T[xe]=g[xe]*we[xe]-g[ze]*we[ze],T[ze]=g[xe]*we[ze]+g[ze]*we[xe]}this._f.transform(Z,T);for(let xe=0;xe<he.length;xe+=2){const ze=xe+1;te[xe]=Z[xe]*he[xe]-Z[ze]*he[ze],te[ze]=Z[xe]*he[ze]+Z[ze]*he[xe]}this._f.inverseTransform(de,te);for(let xe=0;xe<de.length;xe+=2){const ze=de[xe+Ce],fe=de[xe+Ce+1],V=we[xe],ce=we[xe+1];A[xe]=ze*V-fe*ce,A[xe+1]=ze*ce+fe*V}}transform(A,g){this._transform(A,g,!1)}realTransform(A,g){this._transform(A,g,!0)}}class ne{constructor(A){this.fft_length=A,this.isPowerOfTwo=v(A),this.isPowerOfTwo?(this.fft=new D(A),this.outputBufferSize=2*A):(this.fft=new Q(A),this.outputBufferSize=this.fft.bufferSize)}realTransform(A,g){this.fft.realTransform(A,g)}transform(A,g){this.fft.transform(A,g)}}function le(L,A){if(A%2===0||A<=0)throw new Error("Window size must be a positive odd number");const g=new L.constructor(L.length),S=new L.constructor(A),T=Math.floor(A/2);for(let te=0;te<L.length;++te){let Z=0;for(let de=-T;de<=T;++de){let he=te+de;he<0?he=Math.abs(he):he>=L.length&&(he=2*(L.length-1)-he),S[Z++]=L[he]}S.sort(),g[te]=S[T]}return g}function N(L,A){const g=Math.pow(10,A);return Math.round(L*g)/g}function H(L){const A=Math.round(L);return Math.abs(L)%1===.5?A%2===0?A:A-1:A}function Y(L){const A=L.length,g=L[0].length,S=[A+1,g+1],T=Array.from({length:S[0]},()=>Array(S[1]).fill(1/0));T[0][0]=0;const te=Array.from({length:S[0]},()=>Array(S[1]).fill(-1));for(let Ce=1;Ce<S[1];++Ce)for(let xe=1;xe<S[0];++xe){const ze=T[xe-1][Ce-1],fe=T[xe-1][Ce],V=T[xe][Ce-1];let ce,_e;ze<fe&&ze<V?(ce=ze,_e=0):fe<ze&&fe<V?(ce=fe,_e=1):(ce=V,_e=2),T[xe][Ce]=L[xe-1][Ce-1]+ce,te[xe][Ce]=_e}for(let Ce=0;Ce<S[1];++Ce)te[0][Ce]=2;for(let Ce=0;Ce<S[0];++Ce)te[Ce][0]=1;let Z=A,de=g,he=[],we=[];for(;Z>0||de>0;)switch(he.push(Z-1),we.push(de-1),te[Z][de]){case 0:--Z,--de;break;case 1:--Z;break;case 2:--de;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${Z}, ${de}]. Please file a bug report.`)}return he.reverse(),we.reverse(),[he,we]}},"./src/utils/tensor.js":(ae,$,s)=>{s.r($),s.d($,{Tensor:()=>W,cat:()=>L,full:()=>Z,full_like:()=>de,interpolate:()=>y,interpolate_4d:()=>b,layer_norm:()=>le,matmul:()=>v,mean:()=>S,mean_pooling:()=>ne,ones:()=>he,ones_like:()=>we,permute:()=>M,quantize_embeddings:()=>ze,rfft:()=>D,stack:()=>A,std_mean:()=>g,topk:()=>Q,zeros:()=>Ce,zeros_like:()=>xe});var _=s("./src/utils/maths.js"),F=s("./src/backends/onnx.js"),U=s("./src/ops/registry.js");const J=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class W{constructor(...V){ve(this,"ort_tensor");return(0,F.isONNXTensor)(V[0])?this.ort_tensor=V[0]:this.ort_tensor=new F.Tensor(V[0],V[1],V[2]),new Proxy(this,{get:(ce,_e)=>{if(typeof _e=="string"){let De=Number(_e);if(Number.isInteger(De))return ce._getitem(De)}return ce[_e]},set:(ce,_e,De)=>ce[_e]=De})}get dims(){return this.ort_tensor.dims}set dims(V){this.ort_tensor.dims=V}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[V,...ce]=this.dims;if(ce.length>0){const _e=ce.reduce((De,Ne)=>De*Ne);for(let De=0;De<V;++De)yield this._subarray(De,_e,ce)}else yield*this.data}_getitem(V){const[ce,..._e]=this.dims;if(V=Y(V,ce),_e.length>0){const De=_e.reduce((Ne,Ke)=>Ne*Ke);return this._subarray(V,De,_e)}else return new W(this.type,[this.data[V]],_e)}indexOf(V){const ce=this.data;for(let _e=0;_e<ce.length;++_e)if(ce[_e]==V)return _e;return-1}_subarray(V,ce,_e){const De=V*ce,Ne=(V+1)*ce,Ke="subarray"in this.data?this.data.subarray(De,Ne):this.data.slice(De,Ne);return new W(this.type,Ke,_e)}item(){const V=this.data;if(V.length!==1)throw new Error(`a Tensor with ${V.length} elements cannot be converted to Scalar`);return V[0]}tolist(){return w(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const V=this.data;for(let ce=0;ce<V.length;++ce)V[ce]=1/(1+Math.exp(-V[ce]));return this}map(V){return this.clone().map_(V)}map_(V){const ce=this.data;for(let _e=0;_e<ce.length;++_e)ce[_e]=V(ce[_e],_e,ce);return this}mul(V){return this.clone().mul_(V)}mul_(V){const ce=this.data;for(let _e=0;_e<ce.length;++_e)ce[_e]*=V;return this}div(V){return this.clone().div_(V)}div_(V){const ce=this.data;for(let _e=0;_e<ce.length;++_e)ce[_e]/=V;return this}add(V){return this.clone().add_(V)}add_(V){const ce=this.data;for(let _e=0;_e<ce.length;++_e)ce[_e]+=V;return this}sub(V){return this.clone().sub_(V)}sub_(V){const ce=this.data;for(let _e=0;_e<ce.length;++_e)ce[_e]-=V;return this}clone(){return new W(this.type,this.data.slice(),this.dims.slice())}slice(...V){const ce=[],_e=[];for(let Ge=0;Ge<this.dims.length;++Ge){let oe=V[Ge];if(oe==null)_e.push([0,this.dims[Ge]]),ce.push(this.dims[Ge]);else if(typeof oe=="number")oe=Y(oe,this.dims[Ge],Ge),_e.push([oe,oe+1]);else if(Array.isArray(oe)&&oe.length===2){let[qe,je]=oe;if(qe=qe===null?0:Y(qe,this.dims[Ge],Ge,!1),je=je===null?this.dims[Ge]:Y(je,this.dims[Ge],Ge,!1),qe>je)throw new Error(`Invalid slice: ${oe}`);const ye=[Math.max(qe,0),Math.min(je,this.dims[Ge])];_e.push(ye),ce.push(ye[1]-ye[0])}else throw new Error(`Invalid slice: ${oe}`)}const De=_e.map(([Ge,oe])=>oe-Ge),Ne=De.reduce((Ge,oe)=>Ge*oe),Ke=this.data,Je=new Ke.constructor(Ne),lt=this.stride();for(let Ge=0;Ge<Ne;++Ge){let oe=0;for(let qe=De.length-1,je=Ge;qe>=0;--qe){const ye=De[qe];oe+=(je%ye+_e[qe][0])*lt[qe],je=Math.floor(je/ye)}Je[Ge]=Ke[oe]}return new W(this.type,Je,ce)}permute(...V){return M(this,V)}transpose(...V){return this.permute(...V)}sum(V=null,ce=!1){return this.norm(1,V,ce)}norm(V="fro",ce=null,_e=!1){if(V==="fro")V=2;else if(typeof V=="string")throw Error(`Unsupported norm: ${V}`);const De=this.data;if(ce===null){let Je=De.reduce((lt,Ge)=>lt+Ge**V,0)**(1/V);return new W(this.type,[Je],[])}ce=Y(ce,this.dims.length);const Ne=this.dims.slice();Ne[ce]=1;const Ke=new De.constructor(De.length/this.dims[ce]);for(let Je=0;Je<De.length;++Je){let lt=0;for(let Ge=this.dims.length-1,oe=Je,qe=1;Ge>=0;--Ge){const je=this.dims[Ge];if(Ge!==ce){const ye=oe%je;lt+=ye*qe,qe*=Ne[Ge]}oe=Math.floor(oe/je)}Ke[lt]+=De[Je]**V}if(V!==1)for(let Je=0;Je<Ke.length;++Je)Ke[Je]=Ke[Je]**(1/V);return _e||Ne.splice(ce,1),new W(this.type,Ke,Ne)}normalize_(V=2,ce=1){ce=Y(ce,this.dims.length);const _e=this.norm(V,ce,!0),De=this.data,Ne=_e.data;for(let Ke=0;Ke<De.length;++Ke){let Je=0;for(let lt=this.dims.length-1,Ge=Ke,oe=1;lt>=0;--lt){const qe=this.dims[lt];if(lt!==ce){const je=Ge%qe;Je+=je*oe,oe*=this.dims[lt]}Ge=Math.floor(Ge/qe)}De[Ke]/=Ne[Je]}return this}normalize(V=2,ce=1){return this.clone().normalize_(V,ce)}stride(){return T(this.dims)}squeeze(V=null){return new W(this.type,this.data,N(this.dims,V))}squeeze_(V=null){return this.dims=N(this.dims,V),this}unsqueeze(V=null){return new W(this.type,this.data,H(this.dims,V))}unsqueeze_(V=null){return this.dims=H(this.dims,V),this}flatten_(V=0,ce=-1){ce=(ce+this.dims.length)%this.dims.length;let _e=this.dims.slice(0,V),De=this.dims.slice(V,ce+1),Ne=this.dims.slice(ce+1);return this.dims=[..._e,De.reduce((Ke,Je)=>Ke*Je,1),...Ne],this}flatten(V=0,ce=-1){return this.clone().flatten_(V,ce)}view(...V){let ce=-1;for(let De=0;De<V.length;++De)if(V[De]===-1){if(ce!==-1)throw new Error("Only one dimension can be inferred");ce=De}const _e=this.data;if(ce!==-1){const De=V.reduce((Ne,Ke,Je)=>Je!==ce?Ne*Ke:Ne,1);V[ce]=_e.length/De}return new W(this.type,_e,V)}neg_(){const V=this.data;for(let ce=0;ce<V.length;++ce)V[ce]=-V[ce];return this}neg(){return this.clone().neg_()}clamp_(V,ce){const _e=this.data;for(let De=0;De<_e.length;++De)_e[De]=Math.min(Math.max(_e[De],V),ce);return this}clamp(V,ce){return this.clone().clamp_(V,ce)}round_(){const V=this.data;for(let ce=0;ce<V.length;++ce)V[ce]=Math.round(V[ce]);return this}round(){return this.clone().round_()}mean(V=null,ce=!1){return S(this,V,ce)}to(V){if(this.type===V)return this;if(!J.hasOwnProperty(V))throw new Error(`Unsupported type: ${V}`);return new W(V,J[V].from(this.data),this.dims)}}function w(fe,V){const ce=fe.length,_e=V.reduce((Ne,Ke)=>Ne*Ke);if(ce!==_e)throw Error(`cannot reshape array of size ${ce} into shape (${V})`);let De=fe;for(let Ne=V.length-1;Ne>=0;Ne--)De=De.reduce((Ke,Je)=>{let lt=Ke[Ke.length-1];return lt.length<V[Ne]?lt.push(Je):Ke.push([Je]),Ke},[[]]);return De[0]}function M(fe,V){const[ce,_e]=(0,_.permute_data)(fe.data,fe.dims,V);return new W(fe.type,ce,_e)}function y(fe,[V,ce],_e="bilinear",De=!1){const Ne=fe.dims.at(-3)??1,Ke=fe.dims.at(-2),Je=fe.dims.at(-1);let lt=(0,_.interpolate_data)(fe.data,[Ne,Ke,Je],[V,ce],_e,De);return new W(fe.type,lt,[Ne,V,ce])}async function b(fe,{size:V=null,mode:ce="bilinear"}={}){if(fe.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!V)throw new Error("`interpolate_4d` requires a `size` argument.");let _e;if(V.length===2)_e=[...fe.dims.slice(0,2),...V];else if(V.length===3)_e=[fe.dims[0],...V];else if(V.length===4)_e=V;else throw new Error("`size` must be of length 2, 3, or 4.");let De;if(ce==="bilinear")De=await U.TensorOpRegistry.bilinear_interpolate_4d;else if(ce==="bicubic")De=await U.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${ce}`);const Ne=new W("int64",new BigInt64Array(_e.map(BigInt)),[_e.length]);return await De({x:fe,s:Ne})}async function v(fe,V){return await(await U.TensorOpRegistry.matmul)({a:fe,b:V})}async function D(fe,V){return await(await U.TensorOpRegistry.rfft)({x:fe,a:V})}async function Q(fe,V){const ce=await U.TensorOpRegistry.top_k;return V===null?V=fe.dims.at(-1):V=Math.min(V,fe.dims.at(-1)),await ce({x:fe,k:new W("int64",[BigInt(V)],[1])})}function ne(fe,V){const ce=fe.data,_e=V.data,De=[fe.dims[0],fe.dims[2]],Ne=new ce.constructor(De[0]*De[1]),[Ke,Je,lt]=fe.dims;let Ge=0;for(let oe=0;oe<Ke;++oe){const qe=oe*lt*Je;for(let je=0;je<lt;++je){let ye=0,ke=0;const Ze=oe*Je,Ye=qe+je;for(let Be=0;Be<Je;++Be){const st=Number(_e[Ze+Be]);ke+=st,ye+=ce[Ye+Be*lt]*st}const Xe=ye/ke;Ne[Ge++]=Xe}}return new W(fe.type,Ne,De)}function le(fe,V,{eps:ce=1e-5}={}){if(fe.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[_e,De]=fe.dims;if(V.length!==1&&V[0]!==De)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[Ne,Ke]=g(fe,1,0,!0),Je=Ne.data,lt=Ke.data,Ge=fe.data,oe=new Ge.constructor(Ge.length);for(let qe=0;qe<_e;++qe){const je=qe*De;for(let ye=0;ye<De;++ye){const ke=je+ye;oe[ke]=(Ge[ke]-lt[qe])/(Je[qe]+ce)}}return new W(fe.type,oe,fe.dims)}function N(fe,V){return fe=fe.slice(),V===null?fe=fe.filter(ce=>ce!==1):typeof V=="number"?fe[V]===1&&fe.splice(V,1):Array.isArray(V)&&(fe=fe.filter((ce,_e)=>ce!==1||!V.includes(_e))),fe}function H(fe,V){return V=Y(V,fe.length+1),fe=fe.slice(),fe.splice(V,0,1),fe}function Y(fe,V,ce=null,_e=!0){if(_e&&(fe<-V||fe>=V))throw new Error(`IndexError: index ${fe} is out of bounds for dimension${ce===null?"":" "+ce} with size ${V}`);return fe<0&&(fe=(fe%V+V)%V),fe}function L(fe,V=0){V=Y(V,fe[0].dims.length);const ce=fe[0].dims.slice();ce[V]=fe.reduce((Ke,Je)=>Ke+Je.dims[V],0);const _e=ce.reduce((Ke,Je)=>Ke*Je,1),De=new fe[0].data.constructor(_e),Ne=fe[0].type;if(V===0){let Ke=0;for(const Je of fe){const lt=Je.data;De.set(lt,Ke),Ke+=lt.length}}else{let Ke=0;for(let Je=0;Je<fe.length;++Je){const{data:lt,dims:Ge}=fe[Je];for(let oe=0;oe<lt.length;++oe){let qe=0;for(let je=Ge.length-1,ye=oe,ke=1;je>=0;--je){const Ze=Ge[je];let Ye=ye%Ze;je===V&&(Ye+=Ke),qe+=Ye*ke,ke*=ce[je],ye=Math.floor(ye/Ze)}De[qe]=lt[oe]}Ke+=Ge[V]}}return new W(Ne,De,ce)}function A(fe,V=0){return L(fe.map(ce=>ce.unsqueeze(V)),V)}function g(fe,V=null,ce=1,_e=!1){const De=fe.data,Ne=fe.dims;if(V===null){const je=De.reduce((Ye,Xe)=>Ye+Xe,0)/De.length,ye=Math.sqrt(De.reduce((Ye,Xe)=>Ye+(Xe-je)**2,0)/(De.length-ce)),ke=new W(fe.type,[je],[]);return[new W(fe.type,[ye],[]),ke]}V=Y(V,Ne.length);const Ke=S(fe,V,_e),Je=Ke.data,lt=Ne.slice();lt[V]=1;const Ge=new De.constructor(De.length/Ne[V]);for(let qe=0;qe<De.length;++qe){let je=0;for(let ye=Ne.length-1,ke=qe,Ze=1;ye>=0;--ye){const Ye=Ne[ye];if(ye!==V){const Xe=ke%Ye;je+=Xe*Ze,Ze*=lt[ye]}ke=Math.floor(ke/Ye)}Ge[je]+=(De[qe]-Je[je])**2}for(let qe=0;qe<Ge.length;++qe)Ge[qe]=Math.sqrt(Ge[qe]/(Ne[V]-ce));return _e||lt.splice(V,1),[new W(fe.type,Ge,lt),Ke]}function S(fe,V=null,ce=!1){const _e=fe.data;if(V===null){const Je=_e.reduce((lt,Ge)=>lt+Ge,0);return new W(fe.type,[Je/_e.length],[])}const De=fe.dims;V=Y(V,De.length);const Ne=De.slice();Ne[V]=1;const Ke=new _e.constructor(_e.length/De[V]);for(let Je=0;Je<_e.length;++Je){let lt=0;for(let Ge=De.length-1,oe=Je,qe=1;Ge>=0;--Ge){const je=De[Ge];if(Ge!==V){const ye=oe%je;lt+=ye*qe,qe*=Ne[Ge]}oe=Math.floor(oe/je)}Ke[lt]+=_e[Je]}if(De[V]!==1)for(let Je=0;Je<Ke.length;++Je)Ke[Je]=Ke[Je]/De[V];return ce||Ne.splice(V,1),new W(fe.type,Ke,Ne)}function T(fe){const V=new Array(fe.length);for(let ce=fe.length-1,_e=1;ce>=0;--ce)V[ce]=_e,_e*=fe[ce];return V}function te(fe,V,ce,_e){const De=fe.reduce((Ne,Ke)=>Ne*Ke,1);return new W(ce,new _e(De).fill(V),fe)}function Z(fe,V){let ce,_e;if(typeof V=="number")ce="float32",_e=Float32Array;else if(typeof V=="bigint")ce="int64",_e=BigInt64Array;else if(typeof V=="boolean")ce="bool",_e=Uint8Array;else throw new Error(`Unsupported data type: ${typeof V}`);return te(fe,V,ce,_e)}function de(fe,V){return Z(fe.dims,V)}function he(fe){return te(fe,1n,"int64",BigInt64Array)}function we(fe){return he(fe.dims)}function Ce(fe){return te(fe,0n,"int64",BigInt64Array)}function xe(fe){return Ce(fe.dims)}function ze(fe,V){if(fe.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(fe.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(V))throw new Error("The precision must be either 'binary' or 'ubinary'");const ce=V==="binary",_e=ce?"int8":"uint8",De=ce?Int8Array:Uint8Array,Ne=fe.data,Ke=new De(Ne.length/8);for(let Je=0;Je<Ne.length;++Je){const lt=Ne[Je]>0?1:0,Ge=Math.floor(Je/8),oe=Je%8;Ke[Ge]|=lt<<7-oe,ce&&oe===0&&(Ke[Ge]-=128)}return new W(_e,Ke,[fe.dims[0],fe.dims[1]/8])}}},Eh={};function fr(ae){var $=Eh[ae];if($!==void 0)return $.exports;var s=Eh[ae]={exports:{}};return xh[ae](s,s.exports,fr),s.exports}fr.m=xh,(()=>{var ae=Object.getPrototypeOf?s=>Object.getPrototypeOf(s):s=>s.__proto__,$;fr.t=function(s,_){if(_&1&&(s=this(s)),_&8||typeof s=="object"&&s&&(_&4&&s.__esModule||_&16&&typeof s.then=="function"))return s;var F=Object.create(null);fr.r(F);var U={};$=$||[null,ae({}),ae([]),ae(ae)];for(var J=_&2&&s;typeof J=="object"&&!~$.indexOf(J);J=ae(J))Object.getOwnPropertyNames(J).forEach(W=>U[W]=()=>s[W]);return U.default=()=>s,fr.d(F,U),F}})(),fr.d=(ae,$)=>{for(var s in $)fr.o($,s)&&!fr.o(ae,s)&&Object.defineProperty(ae,s,{enumerable:!0,get:$[s]})},fr.o=(ae,$)=>Object.prototype.hasOwnProperty.call(ae,$),fr.r=ae=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(ae,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(ae,"__esModule",{value:!0})},(()=>{var ae;if(typeof self.location.href=="string"&&(ae=self.location.href),!ae)throw new Error("Automatic publicPath is not supported in this browser");ae=ae.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),fr.p=ae})(),fr.b=new URL("./",self.location.href);var c={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/fr.r(c),fr.d(c,{ASTFeatureExtractor:()=>y.ASTFeatureExtractor,ASTForAudioClassification:()=>s.ASTForAudioClassification,ASTModel:()=>s.ASTModel,ASTPreTrainedModel:()=>s.ASTPreTrainedModel,AlbertForMaskedLM:()=>s.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>s.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>s.AlbertForSequenceClassification,AlbertModel:()=>s.AlbertModel,AlbertPreTrainedModel:()=>s.AlbertPreTrainedModel,AlbertTokenizer:()=>_.AlbertTokenizer,AudioClassificationPipeline:()=>$.AudioClassificationPipeline,AutoConfig:()=>F.AutoConfig,AutoFeatureExtractor:()=>b.AutoFeatureExtractor,AutoImageProcessor:()=>Q.AutoImageProcessor,AutoModel:()=>s.AutoModel,AutoModelForAudioClassification:()=>s.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>s.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>s.AutoModelForCTC,AutoModelForCausalLM:()=>s.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>s.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>s.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>s.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>s.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>s.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>s.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>s.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>s.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>s.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>s.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>s.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>s.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>s.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>s.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>s.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>s.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>s.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>s.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>s.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>s.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>s.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>s.AutoModelForVision2Seq,AutoModelForXVector:()=>s.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>s.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>N.AutoProcessor,AutoTokenizer:()=>_.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>$.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>s.BartForConditionalGeneration,BartForSequenceClassification:()=>s.BartForSequenceClassification,BartModel:()=>s.BartModel,BartPretrainedModel:()=>s.BartPretrainedModel,BartTokenizer:()=>_.BartTokenizer,BaseModelOutput:()=>s.BaseModelOutput,BaseStreamer:()=>H.BaseStreamer,BeitFeatureExtractor:()=>D.BeitFeatureExtractor,BeitForImageClassification:()=>s.BeitForImageClassification,BeitModel:()=>s.BeitModel,BeitPreTrainedModel:()=>s.BeitPreTrainedModel,BertForMaskedLM:()=>s.BertForMaskedLM,BertForQuestionAnswering:()=>s.BertForQuestionAnswering,BertForSequenceClassification:()=>s.BertForSequenceClassification,BertForTokenClassification:()=>s.BertForTokenClassification,BertModel:()=>s.BertModel,BertPreTrainedModel:()=>s.BertPreTrainedModel,BertTokenizer:()=>_.BertTokenizer,BitImageProcessor:()=>D.BitImageProcessor,BlenderbotForConditionalGeneration:()=>s.BlenderbotForConditionalGeneration,BlenderbotModel:()=>s.BlenderbotModel,BlenderbotPreTrainedModel:()=>s.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>s.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>s.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>s.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>_.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>_.BlenderbotTokenizer,BloomForCausalLM:()=>s.BloomForCausalLM,BloomModel:()=>s.BloomModel,BloomPreTrainedModel:()=>s.BloomPreTrainedModel,BloomTokenizer:()=>_.BloomTokenizer,CLIPFeatureExtractor:()=>D.CLIPFeatureExtractor,CLIPImageProcessor:()=>D.CLIPImageProcessor,CLIPModel:()=>s.CLIPModel,CLIPPreTrainedModel:()=>s.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>s.CLIPSegForImageSegmentation,CLIPSegModel:()=>s.CLIPSegModel,CLIPSegPreTrainedModel:()=>s.CLIPSegPreTrainedModel,CLIPTextModel:()=>s.CLIPTextModel,CLIPTextModelWithProjection:()=>s.CLIPTextModelWithProjection,CLIPTokenizer:()=>_.CLIPTokenizer,CLIPVisionModel:()=>s.CLIPVisionModel,CLIPVisionModelWithProjection:()=>s.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>s.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>s.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>s.CamembertForSequenceClassification,CamembertForTokenClassification:()=>s.CamembertForTokenClassification,CamembertModel:()=>s.CamembertModel,CamembertPreTrainedModel:()=>s.CamembertPreTrainedModel,CamembertTokenizer:()=>_.CamembertTokenizer,CausalLMOutput:()=>s.CausalLMOutput,CausalLMOutputWithPast:()=>s.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>D.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>s.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>s.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>s.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>y.ClapFeatureExtractor,ClapModel:()=>s.ClapModel,ClapPreTrainedModel:()=>s.ClapPreTrainedModel,ClapTextModelWithProjection:()=>s.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>L.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>s.CodeGenForCausalLM,CodeGenModel:()=>s.CodeGenModel,CodeGenPreTrainedModel:()=>s.CodeGenPreTrainedModel,CodeGenTokenizer:()=>_.CodeGenTokenizer,CodeLlamaTokenizer:()=>_.CodeLlamaTokenizer,CohereForCausalLM:()=>s.CohereForCausalLM,CohereModel:()=>s.CohereModel,CoherePreTrainedModel:()=>s.CoherePreTrainedModel,CohereTokenizer:()=>_.CohereTokenizer,ConvBertForMaskedLM:()=>s.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>s.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>s.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>s.ConvBertForTokenClassification,ConvBertModel:()=>s.ConvBertModel,ConvBertPreTrainedModel:()=>s.ConvBertPreTrainedModel,ConvBertTokenizer:()=>_.ConvBertTokenizer,ConvNextFeatureExtractor:()=>D.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>s.ConvNextForImageClassification,ConvNextImageProcessor:()=>D.ConvNextImageProcessor,ConvNextModel:()=>s.ConvNextModel,ConvNextPreTrainedModel:()=>s.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>s.ConvNextV2ForImageClassification,ConvNextV2Model:()=>s.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>s.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>D.DPTFeatureExtractor,DPTForDepthEstimation:()=>s.DPTForDepthEstimation,DPTImageProcessor:()=>D.DPTImageProcessor,DPTModel:()=>s.DPTModel,DPTPreTrainedModel:()=>s.DPTPreTrainedModel,DebertaForMaskedLM:()=>s.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>s.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>s.DebertaForSequenceClassification,DebertaForTokenClassification:()=>s.DebertaForTokenClassification,DebertaModel:()=>s.DebertaModel,DebertaPreTrainedModel:()=>s.DebertaPreTrainedModel,DebertaTokenizer:()=>_.DebertaTokenizer,DebertaV2ForMaskedLM:()=>s.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>s.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>s.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>s.DebertaV2ForTokenClassification,DebertaV2Model:()=>s.DebertaV2Model,DebertaV2PreTrainedModel:()=>s.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>_.DebertaV2Tokenizer,DecisionTransformerModel:()=>s.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>s.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>D.DeiTFeatureExtractor,DeiTForImageClassification:()=>s.DeiTForImageClassification,DeiTImageProcessor:()=>D.DeiTImageProcessor,DeiTModel:()=>s.DeiTModel,DeiTPreTrainedModel:()=>s.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>s.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>s.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>$.DepthEstimationPipeline,DepthProForDepthEstimation:()=>s.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>s.DepthProPreTrainedModel,DetrFeatureExtractor:()=>D.DetrFeatureExtractor,DetrForObjectDetection:()=>s.DetrForObjectDetection,DetrForSegmentation:()=>s.DetrForSegmentation,DetrImageProcessor:()=>D.DetrImageProcessor,DetrModel:()=>s.DetrModel,DetrObjectDetectionOutput:()=>s.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>s.DetrPreTrainedModel,DetrSegmentationOutput:()=>s.DetrSegmentationOutput,Dinov2ForImageClassification:()=>s.Dinov2ForImageClassification,Dinov2Model:()=>s.Dinov2Model,Dinov2PreTrainedModel:()=>s.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>s.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>s.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>s.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>s.DistilBertForTokenClassification,DistilBertModel:()=>s.DistilBertModel,DistilBertPreTrainedModel:()=>s.DistilBertPreTrainedModel,DistilBertTokenizer:()=>_.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>$.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>D.DonutFeatureExtractor,DonutImageProcessor:()=>D.DonutImageProcessor,DonutSwinModel:()=>s.DonutSwinModel,DonutSwinPreTrainedModel:()=>s.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>s.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>D.EfficientNetImageProcessor,EfficientNetModel:()=>s.EfficientNetModel,EfficientNetPreTrainedModel:()=>s.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>s.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>s.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>s.ElectraForSequenceClassification,ElectraForTokenClassification:()=>s.ElectraForTokenClassification,ElectraModel:()=>s.ElectraModel,ElectraPreTrainedModel:()=>s.ElectraPreTrainedModel,ElectraTokenizer:()=>_.ElectraTokenizer,EosTokenCriteria:()=>Y.EosTokenCriteria,EsmForMaskedLM:()=>s.EsmForMaskedLM,EsmForSequenceClassification:()=>s.EsmForSequenceClassification,EsmForTokenClassification:()=>s.EsmForTokenClassification,EsmModel:()=>s.EsmModel,EsmPreTrainedModel:()=>s.EsmPreTrainedModel,EsmTokenizer:()=>_.EsmTokenizer,FFT:()=>w.FFT,FalconForCausalLM:()=>s.FalconForCausalLM,FalconModel:()=>s.FalconModel,FalconPreTrainedModel:()=>s.FalconPreTrainedModel,FalconTokenizer:()=>_.FalconTokenizer,FastViTForImageClassification:()=>s.FastViTForImageClassification,FastViTModel:()=>s.FastViTModel,FastViTPreTrainedModel:()=>s.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>$.FeatureExtractionPipeline,FeatureExtractor:()=>M.FeatureExtractor,FillMaskPipeline:()=>$.FillMaskPipeline,Florence2ForConditionalGeneration:()=>s.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>s.Florence2PreTrainedModel,Florence2Processor:()=>le.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>L.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>L.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>D.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>s.GLPNForDepthEstimation,GLPNModel:()=>s.GLPNModel,GLPNPreTrainedModel:()=>s.GLPNPreTrainedModel,GPT2LMHeadModel:()=>s.GPT2LMHeadModel,GPT2Model:()=>s.GPT2Model,GPT2PreTrainedModel:()=>s.GPT2PreTrainedModel,GPT2Tokenizer:()=>_.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>s.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>s.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>s.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>s.GPTJForCausalLM,GPTJModel:()=>s.GPTJModel,GPTJPreTrainedModel:()=>s.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>s.GPTNeoForCausalLM,GPTNeoModel:()=>s.GPTNeoModel,GPTNeoPreTrainedModel:()=>s.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>s.GPTNeoXForCausalLM,GPTNeoXModel:()=>s.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>s.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>_.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>s.Gemma2ForCausalLM,Gemma2Model:()=>s.Gemma2Model,Gemma2PreTrainedModel:()=>s.Gemma2PreTrainedModel,GemmaForCausalLM:()=>s.GemmaForCausalLM,GemmaModel:()=>s.GemmaModel,GemmaPreTrainedModel:()=>s.GemmaPreTrainedModel,GemmaTokenizer:()=>_.GemmaTokenizer,GraniteForCausalLM:()=>s.GraniteForCausalLM,GraniteModel:()=>s.GraniteModel,GranitePreTrainedModel:()=>s.GranitePreTrainedModel,Grok1Tokenizer:()=>_.Grok1Tokenizer,GroupViTModel:()=>s.GroupViTModel,GroupViTPreTrainedModel:()=>s.GroupViTPreTrainedModel,HerbertTokenizer:()=>_.HerbertTokenizer,HieraForImageClassification:()=>s.HieraForImageClassification,HieraModel:()=>s.HieraModel,HieraPreTrainedModel:()=>s.HieraPreTrainedModel,HubertForCTC:()=>s.HubertForCTC,HubertForSequenceClassification:()=>s.HubertForSequenceClassification,HubertModel:()=>s.HubertModel,HubertPreTrainedModel:()=>s.HubertPreTrainedModel,IJepaForImageClassification:()=>s.IJepaForImageClassification,IJepaModel:()=>s.IJepaModel,IJepaPreTrainedModel:()=>s.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>s.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>D.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>s.Idefics3PreTrainedModel,Idefics3Processor:()=>le.Idefics3Processor,ImageClassificationPipeline:()=>$.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>$.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>y.ImageFeatureExtractor,ImageMattingOutput:()=>s.ImageMattingOutput,ImageProcessor:()=>v.ImageProcessor,ImageSegmentationPipeline:()=>$.ImageSegmentationPipeline,ImageToImagePipeline:()=>$.ImageToImagePipeline,ImageToTextPipeline:()=>$.ImageToTextPipeline,InterruptableStoppingCriteria:()=>Y.InterruptableStoppingCriteria,JAISLMHeadModel:()=>s.JAISLMHeadModel,JAISModel:()=>s.JAISModel,JAISPreTrainedModel:()=>s.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>D.JinaCLIPImageProcessor,JinaCLIPModel:()=>s.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>s.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>le.JinaCLIPProcessor,JinaCLIPTextModel:()=>s.JinaCLIPTextModel,JinaCLIPVisionModel:()=>s.JinaCLIPVisionModel,LlamaForCausalLM:()=>s.LlamaForCausalLM,LlamaModel:()=>s.LlamaModel,LlamaPreTrainedModel:()=>s.LlamaPreTrainedModel,LlamaTokenizer:()=>_.LlamaTokenizer,LlavaForConditionalGeneration:()=>s.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>s.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>D.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>s.LlavaPreTrainedModel,LogitsProcessor:()=>L.LogitsProcessor,LogitsProcessorList:()=>L.LogitsProcessorList,LogitsWarper:()=>L.LogitsWarper,LongT5ForConditionalGeneration:()=>s.LongT5ForConditionalGeneration,LongT5Model:()=>s.LongT5Model,LongT5PreTrainedModel:()=>s.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>s.M2M100ForConditionalGeneration,M2M100Model:()=>s.M2M100Model,M2M100PreTrainedModel:()=>s.M2M100PreTrainedModel,M2M100Tokenizer:()=>_.M2M100Tokenizer,MBart50Tokenizer:()=>_.MBart50Tokenizer,MBartForCausalLM:()=>s.MBartForCausalLM,MBartForConditionalGeneration:()=>s.MBartForConditionalGeneration,MBartForSequenceClassification:()=>s.MBartForSequenceClassification,MBartModel:()=>s.MBartModel,MBartPreTrainedModel:()=>s.MBartPreTrainedModel,MBartTokenizer:()=>_.MBartTokenizer,MPNetForMaskedLM:()=>s.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>s.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>s.MPNetForSequenceClassification,MPNetForTokenClassification:()=>s.MPNetForTokenClassification,MPNetModel:()=>s.MPNetModel,MPNetPreTrainedModel:()=>s.MPNetPreTrainedModel,MPNetTokenizer:()=>_.MPNetTokenizer,MT5ForConditionalGeneration:()=>s.MT5ForConditionalGeneration,MT5Model:()=>s.MT5Model,MT5PreTrainedModel:()=>s.MT5PreTrainedModel,MarianMTModel:()=>s.MarianMTModel,MarianModel:()=>s.MarianModel,MarianPreTrainedModel:()=>s.MarianPreTrainedModel,MarianTokenizer:()=>_.MarianTokenizer,Mask2FormerImageProcessor:()=>D.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>D.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>s.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>D.MaskFormerImageProcessor,MaskFormerModel:()=>s.MaskFormerModel,MaskFormerPreTrainedModel:()=>s.MaskFormerPreTrainedModel,MaskedLMOutput:()=>s.MaskedLMOutput,MaxLengthCriteria:()=>Y.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>s.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>s.MgpstrModelOutput,MgpstrPreTrainedModel:()=>s.MgpstrPreTrainedModel,MgpstrProcessor:()=>le.MgpstrProcessor,MgpstrTokenizer:()=>_.MgpstrTokenizer,MinLengthLogitsProcessor:()=>L.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>L.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>s.MistralForCausalLM,MistralModel:()=>s.MistralModel,MistralPreTrainedModel:()=>s.MistralPreTrainedModel,MobileBertForMaskedLM:()=>s.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>s.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>s.MobileBertForSequenceClassification,MobileBertModel:()=>s.MobileBertModel,MobileBertPreTrainedModel:()=>s.MobileBertPreTrainedModel,MobileBertTokenizer:()=>_.MobileBertTokenizer,MobileLLMForCausalLM:()=>s.MobileLLMForCausalLM,MobileLLMModel:()=>s.MobileLLMModel,MobileLLMPreTrainedModel:()=>s.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>D.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>s.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>D.MobileNetV1ImageProcessor,MobileNetV1Model:()=>s.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>s.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>D.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>s.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>D.MobileNetV2ImageProcessor,MobileNetV2Model:()=>s.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>s.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>D.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>s.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>D.MobileNetV3ImageProcessor,MobileNetV3Model:()=>s.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>s.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>D.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>s.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>D.MobileNetV4ImageProcessor,MobileNetV4Model:()=>s.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>s.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>D.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>s.MobileViTForImageClassification,MobileViTImageProcessor:()=>D.MobileViTImageProcessor,MobileViTModel:()=>s.MobileViTModel,MobileViTPreTrainedModel:()=>s.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>s.MobileViTV2ForImageClassification,MobileViTV2Model:()=>s.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>s.MobileViTV2PreTrainedModel,ModelOutput:()=>s.ModelOutput,Moondream1ForConditionalGeneration:()=>s.Moondream1ForConditionalGeneration,MptForCausalLM:()=>s.MptForCausalLM,MptModel:()=>s.MptModel,MptPreTrainedModel:()=>s.MptPreTrainedModel,MultiModalityCausalLM:()=>s.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>s.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>s.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>s.MusicgenForConditionalGeneration,MusicgenModel:()=>s.MusicgenModel,MusicgenPreTrainedModel:()=>s.MusicgenPreTrainedModel,NllbTokenizer:()=>_.NllbTokenizer,NoBadWordsLogitsProcessor:()=>L.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>L.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>s.NomicBertModel,NomicBertPreTrainedModel:()=>s.NomicBertPreTrainedModel,NougatImageProcessor:()=>D.NougatImageProcessor,NougatTokenizer:()=>_.NougatTokenizer,OPTForCausalLM:()=>s.OPTForCausalLM,OPTModel:()=>s.OPTModel,OPTPreTrainedModel:()=>s.OPTPreTrainedModel,ObjectDetectionPipeline:()=>$.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>s.Olmo2ForCausalLM,Olmo2Model:()=>s.Olmo2Model,Olmo2PreTrainedModel:()=>s.Olmo2PreTrainedModel,OlmoForCausalLM:()=>s.OlmoForCausalLM,OlmoModel:()=>s.OlmoModel,OlmoPreTrainedModel:()=>s.OlmoPreTrainedModel,OpenELMForCausalLM:()=>s.OpenELMForCausalLM,OpenELMModel:()=>s.OpenELMModel,OpenELMPreTrainedModel:()=>s.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>D.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>s.OwlViTForObjectDetection,OwlViTImageProcessor:()=>D.OwlViTImageProcessor,OwlViTModel:()=>s.OwlViTModel,OwlViTPreTrainedModel:()=>s.OwlViTPreTrainedModel,OwlViTProcessor:()=>le.OwlViTProcessor,Owlv2ForObjectDetection:()=>s.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>D.Owlv2ImageProcessor,Owlv2Model:()=>s.Owlv2Model,Owlv2PreTrainedModel:()=>s.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>s.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>s.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>le.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>s.PatchTSMixerForPrediction,PatchTSMixerModel:()=>s.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>s.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>s.PatchTSTForPrediction,PatchTSTModel:()=>s.PatchTSTModel,PatchTSTPreTrainedModel:()=>s.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>s.Phi3ForCausalLM,Phi3Model:()=>s.Phi3Model,Phi3PreTrainedModel:()=>s.Phi3PreTrainedModel,PhiForCausalLM:()=>s.PhiForCausalLM,PhiModel:()=>s.PhiModel,PhiPreTrainedModel:()=>s.PhiPreTrainedModel,Pipeline:()=>$.Pipeline,PreTrainedModel:()=>s.PreTrainedModel,PreTrainedTokenizer:()=>_.PreTrainedTokenizer,PretrainedConfig:()=>F.PretrainedConfig,PretrainedMixin:()=>s.PretrainedMixin,Processor:()=>ne.Processor,PvtForImageClassification:()=>s.PvtForImageClassification,PvtImageProcessor:()=>D.PvtImageProcessor,PvtModel:()=>s.PvtModel,PvtPreTrainedModel:()=>s.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>y.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>s.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>s.PyAnnoteModel,PyAnnotePreTrainedModel:()=>s.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>le.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>s.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>$.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>s.Qwen2ForCausalLM,Qwen2Model:()=>s.Qwen2Model,Qwen2PreTrainedModel:()=>s.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>_.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>s.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>D.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>s.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>le.Qwen2VLProcessor,RTDetrForObjectDetection:()=>s.RTDetrForObjectDetection,RTDetrImageProcessor:()=>D.RTDetrImageProcessor,RTDetrModel:()=>s.RTDetrModel,RTDetrObjectDetectionOutput:()=>s.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>s.RTDetrPreTrainedModel,RawImage:()=>J.RawImage,RepetitionPenaltyLogitsProcessor:()=>L.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>s.ResNetForImageClassification,ResNetModel:()=>s.ResNetModel,ResNetPreTrainedModel:()=>s.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>s.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>s.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>s.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>s.RoFormerForTokenClassification,RoFormerModel:()=>s.RoFormerModel,RoFormerPreTrainedModel:()=>s.RoFormerPreTrainedModel,RoFormerTokenizer:()=>_.RoFormerTokenizer,RobertaForMaskedLM:()=>s.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>s.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>s.RobertaForSequenceClassification,RobertaForTokenClassification:()=>s.RobertaForTokenClassification,RobertaModel:()=>s.RobertaModel,RobertaPreTrainedModel:()=>s.RobertaPreTrainedModel,RobertaTokenizer:()=>_.RobertaTokenizer,SamImageProcessor:()=>D.SamImageProcessor,SamImageSegmentationOutput:()=>s.SamImageSegmentationOutput,SamModel:()=>s.SamModel,SamPreTrainedModel:()=>s.SamPreTrainedModel,SamProcessor:()=>le.SamProcessor,SapiensForDepthEstimation:()=>s.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>s.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>s.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>s.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>y.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>D.SegformerFeatureExtractor,SegformerForImageClassification:()=>s.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>s.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>D.SegformerImageProcessor,SegformerModel:()=>s.SegformerModel,SegformerPreTrainedModel:()=>s.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>s.Seq2SeqLMOutput,SequenceClassifierOutput:()=>s.SequenceClassifierOutput,SiglipImageProcessor:()=>D.SiglipImageProcessor,SiglipModel:()=>s.SiglipModel,SiglipPreTrainedModel:()=>s.SiglipPreTrainedModel,SiglipTextModel:()=>s.SiglipTextModel,SiglipTokenizer:()=>_.SiglipTokenizer,SiglipVisionModel:()=>s.SiglipVisionModel,SpeechT5FeatureExtractor:()=>y.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>s.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>s.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>s.SpeechT5HifiGan,SpeechT5Model:()=>s.SpeechT5Model,SpeechT5PreTrainedModel:()=>s.SpeechT5PreTrainedModel,SpeechT5Processor:()=>le.SpeechT5Processor,SpeechT5Tokenizer:()=>_.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>s.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>s.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>s.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>s.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>s.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>_.SqueezeBertTokenizer,StableLmForCausalLM:()=>s.StableLmForCausalLM,StableLmModel:()=>s.StableLmModel,StableLmPreTrainedModel:()=>s.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>s.Starcoder2ForCausalLM,Starcoder2Model:()=>s.Starcoder2Model,Starcoder2PreTrainedModel:()=>s.Starcoder2PreTrainedModel,StoppingCriteria:()=>Y.StoppingCriteria,StoppingCriteriaList:()=>Y.StoppingCriteriaList,SummarizationPipeline:()=>$.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>L.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>s.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>D.Swin2SRImageProcessor,Swin2SRModel:()=>s.Swin2SRModel,Swin2SRPreTrainedModel:()=>s.Swin2SRPreTrainedModel,SwinForImageClassification:()=>s.SwinForImageClassification,SwinModel:()=>s.SwinModel,SwinPreTrainedModel:()=>s.SwinPreTrainedModel,T5ForConditionalGeneration:()=>s.T5ForConditionalGeneration,T5Model:()=>s.T5Model,T5PreTrainedModel:()=>s.T5PreTrainedModel,T5Tokenizer:()=>_.T5Tokenizer,TableTransformerForObjectDetection:()=>s.TableTransformerForObjectDetection,TableTransformerModel:()=>s.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>s.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>s.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>L.TemperatureLogitsWarper,Tensor:()=>W.Tensor,Text2TextGenerationPipeline:()=>$.Text2TextGenerationPipeline,TextClassificationPipeline:()=>$.TextClassificationPipeline,TextGenerationPipeline:()=>$.TextGenerationPipeline,TextStreamer:()=>H.TextStreamer,TextToAudioPipeline:()=>$.TextToAudioPipeline,TokenClassificationPipeline:()=>$.TokenClassificationPipeline,TokenClassifierOutput:()=>s.TokenClassifierOutput,TokenizerModel:()=>_.TokenizerModel,TopKLogitsWarper:()=>L.TopKLogitsWarper,TopPLogitsWarper:()=>L.TopPLogitsWarper,TrOCRForCausalLM:()=>s.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>s.TrOCRPreTrainedModel,TranslationPipeline:()=>$.TranslationPipeline,UniSpeechForCTC:()=>s.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>s.UniSpeechForSequenceClassification,UniSpeechModel:()=>s.UniSpeechModel,UniSpeechPreTrainedModel:()=>s.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>s.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>s.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>s.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>s.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>s.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>le.VLChatProcessor,VLMImageProcessor:()=>D.VLMImageProcessor,ViTFeatureExtractor:()=>D.ViTFeatureExtractor,ViTForImageClassification:()=>s.ViTForImageClassification,ViTImageProcessor:()=>D.ViTImageProcessor,ViTMAEModel:()=>s.ViTMAEModel,ViTMAEPreTrainedModel:()=>s.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>s.ViTMSNForImageClassification,ViTMSNModel:()=>s.ViTMSNModel,ViTMSNPreTrainedModel:()=>s.ViTMSNPreTrainedModel,ViTModel:()=>s.ViTModel,ViTPreTrainedModel:()=>s.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>s.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>s.VitMatteForImageMatting,VitMatteImageProcessor:()=>D.VitMatteImageProcessor,VitMattePreTrainedModel:()=>s.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>s.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>D.VitPoseImageProcessor,VitPosePreTrainedModel:()=>s.VitPosePreTrainedModel,VitsModel:()=>s.VitsModel,VitsModelOutput:()=>s.VitsModelOutput,VitsPreTrainedModel:()=>s.VitsPreTrainedModel,VitsTokenizer:()=>_.VitsTokenizer,Wav2Vec2BertForCTC:()=>s.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>s.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>s.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>s.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>_.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>y.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>s.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>s.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>s.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>s.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>s.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>le.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>s.WavLMForAudioFrameClassification,WavLMForCTC:()=>s.WavLMForCTC,WavLMForSequenceClassification:()=>s.WavLMForSequenceClassification,WavLMForXVector:()=>s.WavLMForXVector,WavLMModel:()=>s.WavLMModel,WavLMPreTrainedModel:()=>s.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>y.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>s.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>s.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>y.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>s.WhisperForConditionalGeneration,WhisperModel:()=>s.WhisperModel,WhisperPreTrainedModel:()=>s.WhisperPreTrainedModel,WhisperProcessor:()=>le.WhisperProcessor,WhisperTextStreamer:()=>H.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>L.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>_.WhisperTokenizer,XLMForQuestionAnswering:()=>s.XLMForQuestionAnswering,XLMForSequenceClassification:()=>s.XLMForSequenceClassification,XLMForTokenClassification:()=>s.XLMForTokenClassification,XLMModel:()=>s.XLMModel,XLMPreTrainedModel:()=>s.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>s.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>s.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>s.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>s.XLMRobertaForTokenClassification,XLMRobertaModel:()=>s.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>s.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>_.XLMRobertaTokenizer,XLMTokenizer:()=>_.XLMTokenizer,XLMWithLMHeadModel:()=>s.XLMWithLMHeadModel,XVectorOutput:()=>s.XVectorOutput,YolosFeatureExtractor:()=>D.YolosFeatureExtractor,YolosForObjectDetection:()=>s.YolosForObjectDetection,YolosImageProcessor:()=>D.YolosImageProcessor,YolosModel:()=>s.YolosModel,YolosObjectDetectionOutput:()=>s.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>s.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>$.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>$.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>$.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>$.ZeroShotObjectDetectionPipeline,bankers_round:()=>w.bankers_round,cat:()=>W.cat,cos_sim:()=>w.cos_sim,dot:()=>w.dot,dynamic_time_warping:()=>w.dynamic_time_warping,env:()=>ae.env,full:()=>W.full,full_like:()=>W.full_like,getKeyValueShapes:()=>F.getKeyValueShapes,hamming:()=>U.hamming,hanning:()=>U.hanning,interpolate:()=>W.interpolate,interpolate_4d:()=>W.interpolate_4d,interpolate_data:()=>w.interpolate_data,is_chinese_char:()=>_.is_chinese_char,layer_norm:()=>W.layer_norm,load_image:()=>J.load_image,log_softmax:()=>w.log_softmax,magnitude:()=>w.magnitude,matmul:()=>W.matmul,max:()=>w.max,mean:()=>W.mean,mean_pooling:()=>W.mean_pooling,medianFilter:()=>w.medianFilter,mel_filter_bank:()=>U.mel_filter_bank,min:()=>w.min,ones:()=>W.ones,ones_like:()=>W.ones_like,permute:()=>W.permute,permute_data:()=>w.permute_data,pipeline:()=>$.pipeline,quantize_embeddings:()=>W.quantize_embeddings,read_audio:()=>U.read_audio,rfft:()=>W.rfft,round:()=>w.round,softmax:()=>w.softmax,spectrogram:()=>U.spectrogram,stack:()=>W.stack,std_mean:()=>W.std_mean,topk:()=>W.topk,window_function:()=>U.window_function,zeros:()=>W.zeros,zeros_like:()=>W.zeros_like});var ae=fr("./src/env.js"),$=fr("./src/pipelines.js"),s=fr("./src/models.js"),_=fr("./src/tokenizers.js"),F=fr("./src/configs.js"),U=fr("./src/utils/audio.js"),J=fr("./src/utils/image.js"),W=fr("./src/utils/tensor.js"),w=fr("./src/utils/maths.js"),M=fr("./src/base/feature_extraction_utils.js"),y=fr("./src/models/feature_extractors.js"),b=fr("./src/models/auto/feature_extraction_auto.js"),v=fr("./src/base/image_processors_utils.js"),D=fr("./src/models/image_processors.js"),Q=fr("./src/models/auto/image_processing_auto.js"),ne=fr("./src/base/processing_utils.js"),le=fr("./src/models/processors.js"),N=fr("./src/models/auto/processing_auto.js"),H=fr("./src/generation/streamers.js"),Y=fr("./src/generation/stopping_criteria.js"),L=fr("./src/generation/logits_process.js")})(),c.ASTFeatureExtractor,c.ASTForAudioClassification,c.ASTModel,c.ASTPreTrainedModel,c.AlbertForMaskedLM,c.AlbertForQuestionAnswering,c.AlbertForSequenceClassification,c.AlbertModel,c.AlbertPreTrainedModel,c.AlbertTokenizer,c.AudioClassificationPipeline,c.AutoConfig,c.AutoFeatureExtractor,c.AutoImageProcessor,c.AutoModel,c.AutoModelForAudioClassification,c.AutoModelForAudioFrameClassification,c.AutoModelForCTC,c.AutoModelForCausalLM,c.AutoModelForDepthEstimation,c.AutoModelForDocumentQuestionAnswering,c.AutoModelForImageClassification,c.AutoModelForImageFeatureExtraction,c.AutoModelForImageMatting,c.AutoModelForImageSegmentation,c.AutoModelForImageToImage,c.AutoModelForMaskGeneration,c.AutoModelForMaskedLM,c.AutoModelForNormalEstimation,c.AutoModelForObjectDetection,c.AutoModelForPoseEstimation,c.AutoModelForQuestionAnswering,c.AutoModelForSemanticSegmentation,c.AutoModelForSeq2SeqLM,c.AutoModelForSequenceClassification,c.AutoModelForSpeechSeq2Seq,c.AutoModelForTextToSpectrogram,c.AutoModelForTextToWaveform,c.AutoModelForTokenClassification,c.AutoModelForUniversalSegmentation,c.AutoModelForVision2Seq,c.AutoModelForXVector,c.AutoModelForZeroShotObjectDetection,c.AutoProcessor,c.AutoTokenizer,c.AutomaticSpeechRecognitionPipeline,c.BartForConditionalGeneration,c.BartForSequenceClassification,c.BartModel,c.BartPretrainedModel,c.BartTokenizer,c.BaseModelOutput,c.BaseStreamer,c.BeitFeatureExtractor,c.BeitForImageClassification,c.BeitModel,c.BeitPreTrainedModel,c.BertForMaskedLM,c.BertForQuestionAnswering,c.BertForSequenceClassification,c.BertForTokenClassification,c.BertModel,c.BertPreTrainedModel,c.BertTokenizer,c.BitImageProcessor,c.BlenderbotForConditionalGeneration,c.BlenderbotModel,c.BlenderbotPreTrainedModel,c.BlenderbotSmallForConditionalGeneration,c.BlenderbotSmallModel,c.BlenderbotSmallPreTrainedModel,c.BlenderbotSmallTokenizer,c.BlenderbotTokenizer,c.BloomForCausalLM,c.BloomModel,c.BloomPreTrainedModel,c.BloomTokenizer,c.CLIPFeatureExtractor,c.CLIPImageProcessor,c.CLIPModel,c.CLIPPreTrainedModel,c.CLIPSegForImageSegmentation,c.CLIPSegModel,c.CLIPSegPreTrainedModel,c.CLIPTextModel,c.CLIPTextModelWithProjection,c.CLIPTokenizer,c.CLIPVisionModel,c.CLIPVisionModelWithProjection,c.CamembertForMaskedLM,c.CamembertForQuestionAnswering,c.CamembertForSequenceClassification,c.CamembertForTokenClassification,c.CamembertModel,c.CamembertPreTrainedModel,c.CamembertTokenizer,c.CausalLMOutput,c.CausalLMOutputWithPast,c.ChineseCLIPFeatureExtractor,c.ChineseCLIPModel,c.ChineseCLIPPreTrainedModel,c.ClapAudioModelWithProjection,c.ClapFeatureExtractor,c.ClapModel,c.ClapPreTrainedModel,c.ClapTextModelWithProjection,c.ClassifierFreeGuidanceLogitsProcessor,c.CodeGenForCausalLM,c.CodeGenModel,c.CodeGenPreTrainedModel,c.CodeGenTokenizer,c.CodeLlamaTokenizer,c.CohereForCausalLM,c.CohereModel,c.CoherePreTrainedModel,c.CohereTokenizer,c.ConvBertForMaskedLM,c.ConvBertForQuestionAnswering,c.ConvBertForSequenceClassification,c.ConvBertForTokenClassification,c.ConvBertModel,c.ConvBertPreTrainedModel,c.ConvBertTokenizer,c.ConvNextFeatureExtractor,c.ConvNextForImageClassification,c.ConvNextImageProcessor,c.ConvNextModel,c.ConvNextPreTrainedModel,c.ConvNextV2ForImageClassification,c.ConvNextV2Model,c.ConvNextV2PreTrainedModel,c.DPTFeatureExtractor,c.DPTForDepthEstimation,c.DPTImageProcessor,c.DPTModel,c.DPTPreTrainedModel,c.DebertaForMaskedLM,c.DebertaForQuestionAnswering,c.DebertaForSequenceClassification,c.DebertaForTokenClassification,c.DebertaModel,c.DebertaPreTrainedModel,c.DebertaTokenizer,c.DebertaV2ForMaskedLM,c.DebertaV2ForQuestionAnswering,c.DebertaV2ForSequenceClassification,c.DebertaV2ForTokenClassification,c.DebertaV2Model,c.DebertaV2PreTrainedModel,c.DebertaV2Tokenizer,c.DecisionTransformerModel,c.DecisionTransformerPreTrainedModel,c.DeiTFeatureExtractor,c.DeiTForImageClassification,c.DeiTImageProcessor,c.DeiTModel,c.DeiTPreTrainedModel,c.DepthAnythingForDepthEstimation,c.DepthAnythingPreTrainedModel,c.DepthEstimationPipeline,c.DepthProForDepthEstimation,c.DepthProPreTrainedModel,c.DetrFeatureExtractor,c.DetrForObjectDetection,c.DetrForSegmentation,c.DetrImageProcessor,c.DetrModel,c.DetrObjectDetectionOutput,c.DetrPreTrainedModel,c.DetrSegmentationOutput,c.Dinov2ForImageClassification,c.Dinov2Model,c.Dinov2PreTrainedModel,c.DistilBertForMaskedLM,c.DistilBertForQuestionAnswering,c.DistilBertForSequenceClassification,c.DistilBertForTokenClassification,c.DistilBertModel,c.DistilBertPreTrainedModel,c.DistilBertTokenizer,c.DocumentQuestionAnsweringPipeline,c.DonutFeatureExtractor,c.DonutImageProcessor,c.DonutSwinModel,c.DonutSwinPreTrainedModel,c.EfficientNetForImageClassification,c.EfficientNetImageProcessor,c.EfficientNetModel,c.EfficientNetPreTrainedModel,c.ElectraForMaskedLM,c.ElectraForQuestionAnswering,c.ElectraForSequenceClassification,c.ElectraForTokenClassification,c.ElectraModel,c.ElectraPreTrainedModel,c.ElectraTokenizer,c.EosTokenCriteria,c.EsmForMaskedLM,c.EsmForSequenceClassification,c.EsmForTokenClassification,c.EsmModel,c.EsmPreTrainedModel,c.EsmTokenizer,c.FFT,c.FalconForCausalLM,c.FalconModel,c.FalconPreTrainedModel,c.FalconTokenizer,c.FastViTForImageClassification,c.FastViTModel,c.FastViTPreTrainedModel,c.FeatureExtractionPipeline,c.FeatureExtractor,c.FillMaskPipeline,c.Florence2ForConditionalGeneration,c.Florence2PreTrainedModel,c.Florence2Processor,c.ForcedBOSTokenLogitsProcessor,c.ForcedEOSTokenLogitsProcessor,c.GLPNFeatureExtractor,c.GLPNForDepthEstimation,c.GLPNModel,c.GLPNPreTrainedModel,c.GPT2LMHeadModel,c.GPT2Model,c.GPT2PreTrainedModel,c.GPT2Tokenizer,c.GPTBigCodeForCausalLM,c.GPTBigCodeModel,c.GPTBigCodePreTrainedModel,c.GPTJForCausalLM,c.GPTJModel,c.GPTJPreTrainedModel,c.GPTNeoForCausalLM,c.GPTNeoModel,c.GPTNeoPreTrainedModel,c.GPTNeoXForCausalLM,c.GPTNeoXModel,c.GPTNeoXPreTrainedModel,c.GPTNeoXTokenizer,c.Gemma2ForCausalLM,c.Gemma2Model,c.Gemma2PreTrainedModel,c.GemmaForCausalLM,c.GemmaModel,c.GemmaPreTrainedModel,c.GemmaTokenizer,c.GraniteForCausalLM,c.GraniteModel,c.GranitePreTrainedModel,c.Grok1Tokenizer,c.GroupViTModel,c.GroupViTPreTrainedModel,c.HerbertTokenizer,c.HieraForImageClassification,c.HieraModel,c.HieraPreTrainedModel,c.HubertForCTC,c.HubertForSequenceClassification,c.HubertModel,c.HubertPreTrainedModel,c.IJepaForImageClassification,c.IJepaModel,c.IJepaPreTrainedModel,c.Idefics3ForConditionalGeneration,c.Idefics3ImageProcessor,c.Idefics3PreTrainedModel,c.Idefics3Processor,c.ImageClassificationPipeline,c.ImageFeatureExtractionPipeline,c.ImageFeatureExtractor,c.ImageMattingOutput,c.ImageProcessor,c.ImageSegmentationPipeline,c.ImageToImagePipeline,c.ImageToTextPipeline,c.InterruptableStoppingCriteria,c.JAISLMHeadModel,c.JAISModel,c.JAISPreTrainedModel,c.JinaCLIPImageProcessor,c.JinaCLIPModel,c.JinaCLIPPreTrainedModel,c.JinaCLIPProcessor,c.JinaCLIPTextModel,c.JinaCLIPVisionModel,c.LlamaForCausalLM,c.LlamaModel,c.LlamaPreTrainedModel,c.LlamaTokenizer,c.LlavaForConditionalGeneration,c.LlavaOnevisionForConditionalGeneration,c.LlavaOnevisionImageProcessor,c.LlavaPreTrainedModel,c.LogitsProcessor,c.LogitsProcessorList,c.LogitsWarper,c.LongT5ForConditionalGeneration,c.LongT5Model,c.LongT5PreTrainedModel,c.M2M100ForConditionalGeneration,c.M2M100Model,c.M2M100PreTrainedModel,c.M2M100Tokenizer,c.MBart50Tokenizer,c.MBartForCausalLM,c.MBartForConditionalGeneration,c.MBartForSequenceClassification,c.MBartModel,c.MBartPreTrainedModel,c.MBartTokenizer,c.MPNetForMaskedLM,c.MPNetForQuestionAnswering,c.MPNetForSequenceClassification,c.MPNetForTokenClassification,c.MPNetModel,c.MPNetPreTrainedModel,c.MPNetTokenizer,c.MT5ForConditionalGeneration,c.MT5Model,c.MT5PreTrainedModel,c.MarianMTModel,c.MarianModel,c.MarianPreTrainedModel,c.MarianTokenizer,c.Mask2FormerImageProcessor,c.MaskFormerFeatureExtractor,c.MaskFormerForInstanceSegmentation,c.MaskFormerImageProcessor,c.MaskFormerModel,c.MaskFormerPreTrainedModel,c.MaskedLMOutput,c.MaxLengthCriteria,c.MgpstrForSceneTextRecognition,c.MgpstrModelOutput,c.MgpstrPreTrainedModel,c.MgpstrProcessor,c.MgpstrTokenizer,c.MinLengthLogitsProcessor,c.MinNewTokensLengthLogitsProcessor,c.MistralForCausalLM,c.MistralModel,c.MistralPreTrainedModel,c.MobileBertForMaskedLM,c.MobileBertForQuestionAnswering,c.MobileBertForSequenceClassification,c.MobileBertModel,c.MobileBertPreTrainedModel,c.MobileBertTokenizer,c.MobileLLMForCausalLM,c.MobileLLMModel,c.MobileLLMPreTrainedModel,c.MobileNetV1FeatureExtractor,c.MobileNetV1ForImageClassification,c.MobileNetV1ImageProcessor,c.MobileNetV1Model,c.MobileNetV1PreTrainedModel,c.MobileNetV2FeatureExtractor,c.MobileNetV2ForImageClassification,c.MobileNetV2ImageProcessor,c.MobileNetV2Model,c.MobileNetV2PreTrainedModel,c.MobileNetV3FeatureExtractor,c.MobileNetV3ForImageClassification,c.MobileNetV3ImageProcessor,c.MobileNetV3Model,c.MobileNetV3PreTrainedModel,c.MobileNetV4FeatureExtractor,c.MobileNetV4ForImageClassification,c.MobileNetV4ImageProcessor,c.MobileNetV4Model,c.MobileNetV4PreTrainedModel,c.MobileViTFeatureExtractor,c.MobileViTForImageClassification,c.MobileViTImageProcessor,c.MobileViTModel,c.MobileViTPreTrainedModel,c.MobileViTV2ForImageClassification,c.MobileViTV2Model,c.MobileViTV2PreTrainedModel,c.ModelOutput,c.Moondream1ForConditionalGeneration,c.MptForCausalLM,c.MptModel,c.MptPreTrainedModel,c.MultiModalityCausalLM,c.MultiModalityPreTrainedModel,c.MusicgenForCausalLM,c.MusicgenForConditionalGeneration,c.MusicgenModel,c.MusicgenPreTrainedModel,c.NllbTokenizer,c.NoBadWordsLogitsProcessor,c.NoRepeatNGramLogitsProcessor,c.NomicBertModel,c.NomicBertPreTrainedModel,c.NougatImageProcessor,c.NougatTokenizer,c.OPTForCausalLM,c.OPTModel,c.OPTPreTrainedModel,c.ObjectDetectionPipeline,c.Olmo2ForCausalLM,c.Olmo2Model,c.Olmo2PreTrainedModel,c.OlmoForCausalLM,c.OlmoModel,c.OlmoPreTrainedModel,c.OpenELMForCausalLM,c.OpenELMModel,c.OpenELMPreTrainedModel,c.OwlViTFeatureExtractor,c.OwlViTForObjectDetection,c.OwlViTImageProcessor,c.OwlViTModel,c.OwlViTPreTrainedModel,c.OwlViTProcessor,c.Owlv2ForObjectDetection,c.Owlv2ImageProcessor,c.Owlv2Model,c.Owlv2PreTrainedModel,c.PaliGemmaForConditionalGeneration,c.PaliGemmaPreTrainedModel,c.PaliGemmaProcessor,c.PatchTSMixerForPrediction,c.PatchTSMixerModel,c.PatchTSMixerPreTrainedModel,c.PatchTSTForPrediction,c.PatchTSTModel,c.PatchTSTPreTrainedModel,c.Phi3ForCausalLM,c.Phi3Model,c.Phi3PreTrainedModel,c.PhiForCausalLM,c.PhiModel,c.PhiPreTrainedModel,c.Pipeline,c.PreTrainedModel,c.PreTrainedTokenizer,c.PretrainedConfig,c.PretrainedMixin,c.Processor,c.PvtForImageClassification,c.PvtImageProcessor,c.PvtModel,c.PvtPreTrainedModel,c.PyAnnoteFeatureExtractor,c.PyAnnoteForAudioFrameClassification,c.PyAnnoteModel,c.PyAnnotePreTrainedModel,c.PyAnnoteProcessor,c.QuestionAnsweringModelOutput,c.QuestionAnsweringPipeline,c.Qwen2ForCausalLM,c.Qwen2Model,c.Qwen2PreTrainedModel,c.Qwen2Tokenizer,c.Qwen2VLForConditionalGeneration,c.Qwen2VLImageProcessor,c.Qwen2VLPreTrainedModel,c.Qwen2VLProcessor,c.RTDetrForObjectDetection,c.RTDetrImageProcessor,c.RTDetrModel,c.RTDetrObjectDetectionOutput,c.RTDetrPreTrainedModel,c.RawImage,c.RepetitionPenaltyLogitsProcessor,c.ResNetForImageClassification,c.ResNetModel,c.ResNetPreTrainedModel,c.RoFormerForMaskedLM,c.RoFormerForQuestionAnswering,c.RoFormerForSequenceClassification,c.RoFormerForTokenClassification,c.RoFormerModel,c.RoFormerPreTrainedModel,c.RoFormerTokenizer,c.RobertaForMaskedLM,c.RobertaForQuestionAnswering,c.RobertaForSequenceClassification,c.RobertaForTokenClassification,c.RobertaModel,c.RobertaPreTrainedModel,c.RobertaTokenizer,c.SamImageProcessor,c.SamImageSegmentationOutput,c.SamModel,c.SamPreTrainedModel,c.SamProcessor,c.SapiensForDepthEstimation,c.SapiensForNormalEstimation,c.SapiensForSemanticSegmentation,c.SapiensPreTrainedModel,c.SeamlessM4TFeatureExtractor,c.SegformerFeatureExtractor,c.SegformerForImageClassification,c.SegformerForSemanticSegmentation,c.SegformerImageProcessor,c.SegformerModel,c.SegformerPreTrainedModel,c.Seq2SeqLMOutput,c.SequenceClassifierOutput,c.SiglipImageProcessor,c.SiglipModel,c.SiglipPreTrainedModel,c.SiglipTextModel,c.SiglipTokenizer,c.SiglipVisionModel,c.SpeechT5FeatureExtractor,c.SpeechT5ForSpeechToText,c.SpeechT5ForTextToSpeech,c.SpeechT5HifiGan,c.SpeechT5Model,c.SpeechT5PreTrainedModel,c.SpeechT5Processor,c.SpeechT5Tokenizer,c.SqueezeBertForMaskedLM,c.SqueezeBertForQuestionAnswering,c.SqueezeBertForSequenceClassification,c.SqueezeBertModel,c.SqueezeBertPreTrainedModel,c.SqueezeBertTokenizer,c.StableLmForCausalLM,c.StableLmModel,c.StableLmPreTrainedModel,c.Starcoder2ForCausalLM,c.Starcoder2Model,c.Starcoder2PreTrainedModel,c.StoppingCriteria,c.StoppingCriteriaList,c.SummarizationPipeline,c.SuppressTokensAtBeginLogitsProcessor,c.Swin2SRForImageSuperResolution,c.Swin2SRImageProcessor,c.Swin2SRModel,c.Swin2SRPreTrainedModel,c.SwinForImageClassification,c.SwinModel,c.SwinPreTrainedModel,c.T5ForConditionalGeneration,c.T5Model,c.T5PreTrainedModel,c.T5Tokenizer,c.TableTransformerForObjectDetection,c.TableTransformerModel,c.TableTransformerObjectDetectionOutput,c.TableTransformerPreTrainedModel,c.TemperatureLogitsWarper,c.Tensor,c.Text2TextGenerationPipeline,c.TextClassificationPipeline,c.TextGenerationPipeline,c.TextStreamer,c.TextToAudioPipeline,c.TokenClassificationPipeline,c.TokenClassifierOutput,c.TokenizerModel,c.TopKLogitsWarper,c.TopPLogitsWarper,c.TrOCRForCausalLM,c.TrOCRPreTrainedModel,c.TranslationPipeline,c.UniSpeechForCTC,c.UniSpeechForSequenceClassification,c.UniSpeechModel,c.UniSpeechPreTrainedModel,c.UniSpeechSatForAudioFrameClassification,c.UniSpeechSatForCTC,c.UniSpeechSatForSequenceClassification,c.UniSpeechSatModel,c.UniSpeechSatPreTrainedModel,c.VLChatProcessor,c.VLMImageProcessor,c.ViTFeatureExtractor,c.ViTForImageClassification,c.ViTImageProcessor,c.ViTMAEModel,c.ViTMAEPreTrainedModel,c.ViTMSNForImageClassification,c.ViTMSNModel,c.ViTMSNPreTrainedModel,c.ViTModel,c.ViTPreTrainedModel,c.VisionEncoderDecoderModel,c.VitMatteForImageMatting,c.VitMatteImageProcessor,c.VitMattePreTrainedModel,c.VitPoseForPoseEstimation,c.VitPoseImageProcessor,c.VitPosePreTrainedModel,c.VitsModel,c.VitsModelOutput,c.VitsPreTrainedModel,c.VitsTokenizer,c.Wav2Vec2BertForCTC,c.Wav2Vec2BertForSequenceClassification,c.Wav2Vec2BertModel,c.Wav2Vec2BertPreTrainedModel,c.Wav2Vec2CTCTokenizer,c.Wav2Vec2FeatureExtractor,c.Wav2Vec2ForAudioFrameClassification,c.Wav2Vec2ForCTC,c.Wav2Vec2ForSequenceClassification,c.Wav2Vec2Model,c.Wav2Vec2PreTrainedModel,c.Wav2Vec2ProcessorWithLM,c.WavLMForAudioFrameClassification,c.WavLMForCTC,c.WavLMForSequenceClassification,c.WavLMForXVector,c.WavLMModel,c.WavLMPreTrainedModel,c.WeSpeakerFeatureExtractor,c.WeSpeakerResNetModel,c.WeSpeakerResNetPreTrainedModel,c.WhisperFeatureExtractor,c.WhisperForConditionalGeneration,c.WhisperModel,c.WhisperPreTrainedModel,c.WhisperProcessor,c.WhisperTextStreamer,c.WhisperTimeStampLogitsProcessor,c.WhisperTokenizer,c.XLMForQuestionAnswering,c.XLMForSequenceClassification,c.XLMForTokenClassification,c.XLMModel,c.XLMPreTrainedModel,c.XLMRobertaForMaskedLM,c.XLMRobertaForQuestionAnswering,c.XLMRobertaForSequenceClassification,c.XLMRobertaForTokenClassification,c.XLMRobertaModel,c.XLMRobertaPreTrainedModel,c.XLMRobertaTokenizer,c.XLMTokenizer,c.XLMWithLMHeadModel,c.XVectorOutput,c.YolosFeatureExtractor,c.YolosForObjectDetection,c.YolosImageProcessor,c.YolosModel,c.YolosObjectDetectionOutput,c.YolosPreTrainedModel,c.ZeroShotAudioClassificationPipeline,c.ZeroShotClassificationPipeline,c.ZeroShotImageClassificationPipeline,c.ZeroShotObjectDetectionPipeline,c.bankers_round,c.cat,c.cos_sim,c.dot,c.dynamic_time_warping,c.env,c.full,c.full_like,c.getKeyValueShapes,c.hamming,c.hanning,c.interpolate,c.interpolate_4d,c.interpolate_data,c.is_chinese_char,c.layer_norm,c.load_image,c.log_softmax,c.magnitude,c.matmul,c.max,c.mean,c.mean_pooling,c.medianFilter,c.mel_filter_bank,c.min,c.ones,c.ones_like,c.permute,c.permute_data;var kf=c.pipeline;c.quantize_embeddings,c.read_audio,c.rfft,c.round,c.softmax,c.spectrogram,c.stack,c.std_mean,c.topk,c.window_function,c.zeros,c.zeros_like;const Op={};async function Ph(ae,$,s){if(!Op[ae]){const _=await kf(ae,$,s);Op[ae]=_}return Op[ae]}async function Ch(ae){console.log("messages",ae);let $=await Ph("text-generation","Xenova/Qwen1.5-0.5B-Chat",{model_file_name:"decoder_model_merged"});const s=$.tokenizer.apply_chat_template(ae,{tokenize:!1,add_generation_prompt:!0});console.log("text",s);const _=await $(s,{max_new_tokens:128,do_sample:!1,return_full_text:!1});return console.log(_[0].generated_text),_[0].generated_text}async function Sf(ae){console.log("assembleMessage",ae);const{role:$,goal:s,prompt:_}=ae,F=[{role:"system",content:`You are a ${$} brain part, and behave as ${s}`},{role:"user",content:_}];return await Ch(F)}async function $f(ae){const _=await(await Ph("text-to-speech","Xenova/speecht5_tts",{dtype:"fp32"}))(ae,{speaker_embeddings:"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/speaker_embeddings.bin"});return console.log(_),_}Ap({invoke:Ch,ask:Sf,speech:$f})})();
